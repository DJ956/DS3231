

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Oct 14 03:09:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011D                     	;# 
   136  011E                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029C                     	;# 
   198  029D                     	;# 
   199  029E                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  011E                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0219                     	;# 
   335  021A                     	;# 
   336  021B                     	;# 
   337  021C                     	;# 
   338  021D                     	;# 
   339  021E                     	;# 
   340  021F                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  029A                     	;# 
   353  029B                     	;# 
   354  029C                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  029E                     	;# 
   359  0311                     	;# 
   360  0311                     	;# 
   361  0312                     	;# 
   362  0313                     	;# 
   363  0318                     	;# 
   364  0318                     	;# 
   365  0319                     	;# 
   366  031A                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  039A                     	;# 
   371  039C                     	;# 
   372  039D                     	;# 
   373  039E                     	;# 
   374  039F                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011D                     	;# 
   452  011E                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019C                     	;# 
   472  019D                     	;# 
   473  019E                     	;# 
   474  019F                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  0212                     	;# 
   480  0212                     	;# 
   481  0213                     	;# 
   482  0213                     	;# 
   483  0214                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0216                     	;# 
   489  0216                     	;# 
   490  0217                     	;# 
   491  0217                     	;# 
   492  0219                     	;# 
   493  021A                     	;# 
   494  021B                     	;# 
   495  021C                     	;# 
   496  021D                     	;# 
   497  021E                     	;# 
   498  021F                     	;# 
   499  0291                     	;# 
   500  0291                     	;# 
   501  0292                     	;# 
   502  0293                     	;# 
   503  0294                     	;# 
   504  0295                     	;# 
   505  0295                     	;# 
   506  0296                     	;# 
   507  0298                     	;# 
   508  0298                     	;# 
   509  0299                     	;# 
   510  029A                     	;# 
   511  029B                     	;# 
   512  029C                     	;# 
   513  029C                     	;# 
   514  029D                     	;# 
   515  029E                     	;# 
   516  029E                     	;# 
   517  0311                     	;# 
   518  0311                     	;# 
   519  0312                     	;# 
   520  0313                     	;# 
   521  0318                     	;# 
   522  0318                     	;# 
   523  0319                     	;# 
   524  031A                     	;# 
   525  0394                     	;# 
   526  0395                     	;# 
   527  0396                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0415                     	;# 
   534  0416                     	;# 
   535  0417                     	;# 
   536  041C                     	;# 
   537  041D                     	;# 
   538  041E                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011A                     	;# 
   608  011B                     	;# 
   609  011D                     	;# 
   610  011E                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020D                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0216                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0217                     	;# 
   650  0219                     	;# 
   651  021A                     	;# 
   652  021B                     	;# 
   653  021C                     	;# 
   654  021D                     	;# 
   655  021E                     	;# 
   656  021F                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0298                     	;# 
   666  0298                     	;# 
   667  0299                     	;# 
   668  029A                     	;# 
   669  029B                     	;# 
   670  029C                     	;# 
   671  029C                     	;# 
   672  029D                     	;# 
   673  029E                     	;# 
   674  029E                     	;# 
   675  0311                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0318                     	;# 
   680  0318                     	;# 
   681  0319                     	;# 
   682  031A                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0415                     	;# 
   692  0416                     	;# 
   693  0417                     	;# 
   694  041C                     	;# 
   695  041D                     	;# 
   696  041E                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0014                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020C                     	;# 
   792  020D                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021D                     	;# 
   813  021E                     	;# 
   814  021F                     	;# 
   815  0291                     	;# 
   816  0291                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0294                     	;# 
   820  0295                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  029E                     	;# 
   832  029E                     	;# 
   833  0311                     	;# 
   834  0311                     	;# 
   835  0312                     	;# 
   836  0313                     	;# 
   837  0318                     	;# 
   838  0318                     	;# 
   839  0319                     	;# 
   840  031A                     	;# 
   841  0394                     	;# 
   842  0395                     	;# 
   843  0396                     	;# 
   844  039A                     	;# 
   845  039C                     	;# 
   846  039D                     	;# 
   847  039E                     	;# 
   848  039F                     	;# 
   849  0415                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  041C                     	;# 
   853  041D                     	;# 
   854  041E                     	;# 
   855  0FE4                     	;# 
   856  0FE5                     	;# 
   857  0FE6                     	;# 
   858  0FE7                     	;# 
   859  0FE8                     	;# 
   860  0FE9                     	;# 
   861  0FEA                     	;# 
   862  0FEB                     	;# 
   863  0FED                     	;# 
   864  0FEE                     	;# 
   865  0FEF                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  0008                     	;# 
   875  0009                     	;# 
   876  000A                     	;# 
   877  000B                     	;# 
   878  000C                     	;# 
   879  000D                     	;# 
   880  0011                     	;# 
   881  0012                     	;# 
   882  0013                     	;# 
   883  0014                     	;# 
   884  0015                     	;# 
   885  0016                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001C                     	;# 
   893  001E                     	;# 
   894  001F                     	;# 
   895  008C                     	;# 
   896  008D                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0097                     	;# 
   904  0098                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011A                     	;# 
   924  011B                     	;# 
   925  011D                     	;# 
   926  011E                     	;# 
   927  018C                     	;# 
   928  018D                     	;# 
   929  0191                     	;# 
   930  0191                     	;# 
   931  0192                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  020D                     	;# 
   951  0211                     	;# 
   952  0211                     	;# 
   953  0212                     	;# 
   954  0212                     	;# 
   955  0213                     	;# 
   956  0213                     	;# 
   957  0214                     	;# 
   958  0214                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0216                     	;# 
   963  0216                     	;# 
   964  0217                     	;# 
   965  0217                     	;# 
   966  0219                     	;# 
   967  021A                     	;# 
   968  021B                     	;# 
   969  021C                     	;# 
   970  021D                     	;# 
   971  021E                     	;# 
   972  021F                     	;# 
   973  0291                     	;# 
   974  0291                     	;# 
   975  0292                     	;# 
   976  0293                     	;# 
   977  0294                     	;# 
   978  0295                     	;# 
   979  0295                     	;# 
   980  0296                     	;# 
   981  0298                     	;# 
   982  0298                     	;# 
   983  0299                     	;# 
   984  029A                     	;# 
   985  029B                     	;# 
   986  029C                     	;# 
   987  029C                     	;# 
   988  029D                     	;# 
   989  029E                     	;# 
   990  029E                     	;# 
   991  0311                     	;# 
   992  0311                     	;# 
   993  0312                     	;# 
   994  0313                     	;# 
   995  0318                     	;# 
   996  0318                     	;# 
   997  0319                     	;# 
   998  031A                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  039A                     	;# 
  1003  039C                     	;# 
  1004  039D                     	;# 
  1005  039E                     	;# 
  1006  039F                     	;# 
  1007  0415                     	;# 
  1008  0416                     	;# 
  1009  0417                     	;# 
  1010  041C                     	;# 
  1011  041D                     	;# 
  1012  041E                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024                           
  1025                           	psect	idataBANK0
  1026  03F4                     __pidataBANK0:
  1027                           
  1028                           ;initializer for _segdata
  1029  03F4  343F               	retlw	63
  1030  03F5  3406               	retlw	6
  1031  03F6  345B               	retlw	91
  1032  03F7  344F               	retlw	79
  1033  03F8  3466               	retlw	102
  1034  03F9  346D               	retlw	109
  1035  03FA  347D               	retlw	125
  1036  03FB  3407               	retlw	7
  1037  03FC  347F               	retlw	127
  1038  03FD  346F               	retlw	111
  1039                           
  1040                           ;initializer for main@F2397
  1041  03FE  34E4               	retlw	228
  1042  03FF  340A               	retlw	10
  1043  0400  340E               	retlw	14
  1044  0401  3401               	retlw	1
  1045  0402  3413               	retlw	19
  1046  0403  3454               	retlw	84
  1047                           
  1048                           ;initializer for rtc_display@F2405
  1049  0404  34FF               	retlw	255
  1050  0405  34FF               	retlw	255
  1051  0406  34FF               	retlw	255
  1052  0407  34FF               	retlw	255
  1053  000C                     _PORTAbits	set	12
  1054  008C                     _TRISAbits	set	140
  1055  0097                     _WDTCON	set	151
  1056  0098                     _OSCTUNE	set	152
  1057  0099                     _OSCCON	set	153
  1058  0095                     _OPTION_REGbits	set	149
  1059  008D                     _TRISB	set	141
  1060  008C                     _TRISA	set	140
  1061  010C                     _LATAbits	set	268
  1062  0116                     _BORCON	set	278
  1063  011E                     _APFCON1	set	286
  1064  011D                     _APFCON0	set	285
  1065  010D                     _LATB	set	269
  1066  010C                     _LATA	set	268
  1067  018C                     _ANSELA	set	396
  1068  018D                     _ANSELB	set	397
  1069  0211                     _SSPBUF	set	529
  1070  021E                     _SSP2CON2bits	set	542
  1071  0216                     _SSPCON2	set	534
  1072  0214                     _SSPSTAT	set	532
  1073  0212                     _SSPADD	set	530
  1074  0215                     _SSPCON	set	533
  1075  020C                     _WPUA	set	524
  1076  020D                     _WPUB	set	525
  1077                           
  1078                           	psect	cinit
  1079  07EC                     start_initialization:	
  1080                           ; #config settings
  1081                           
  1082  07EC                     __initialization:
  1083                           
  1084                           ; Initialize objects allocated to BANK0
  1085  07EC  30F4               	movlw	low __pidataBANK0
  1086  07ED  0084               	movwf	4
  1087  07EE  3083               	movlw	(high __pidataBANK0)| (0+128)
  1088  07EF  0085               	movwf	5
  1089  07F0  3020               	movlw	low __pdataBANK0
  1090  07F1  0086               	movwf	6
  1091  07F2  3000               	movlw	high __pdataBANK0
  1092  07F3  0087               	movwf	7
  1093  07F4  3014               	movlw	20
  1094  07F5  3183  2366  3187   	fcall	init_ram
  1095                           
  1096                           ; Clear objects allocated to COMMON
  1097  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
  1098                           
  1099                           ; Clear objects allocated to BANK0
  1100  07F9  01C3               	clrf	__pbssBANK0& (0+127)
  1101  07FA  01C4               	clrf	(__pbssBANK0+1)& (0+127)
  1102  07FB  01C5               	clrf	(__pbssBANK0+2)& (0+127)
  1103  07FC  01C6               	clrf	(__pbssBANK0+3)& (0+127)
  1104  07FD                     end_of_initialization:	
  1105                           ;End of C runtime variable initialization code
  1106                           
  1107  07FD                     __end_of__initialization:
  1108  07FD  0020               	movlb	0
  1109  07FE  3184  2CF1         	ljmp	_main	;jump to C main() function
  1110                           
  1111                           	psect	bssCOMMON
  1112  007D                     __pbssCOMMON:
  1113  007D                     _m_brightness:
  1114  007D                     	ds	1
  1115                           
  1116                           	psect	bssBANK0
  1117  0043                     __pbssBANK0:
  1118  0043                     clear@F2384:
  1119  0043                     	ds	4
  1120                           
  1121                           	psect	dataBANK0
  1122  0020                     __pdataBANK0:
  1123  0020                     _segdata:
  1124  0020                     	ds	10
  1125  002A                     main@F2397:
  1126  002A                     	ds	6
  1127  0030                     rtc_display@F2405:
  1128  0030                     	ds	4
  1129                           
  1130                           	psect	inittext
  1131  0366                     init_ram:
  1132  0366  00FE               	movwf	btemp
  1133  0367                     initloop:
  1134  0367  0012               	moviw fsr0++
  1135  0368  001E               	movwi fsr1++
  1136  0369  0BFE               	decfsz	btemp,f
  1137  036A  2B67               	goto	initloop
  1138  036B  3400               	retlw	0
  1139                           
  1140                           	psect	cstackCOMMON
  1141  0070                     __pcstackCOMMON:
  1142  0070                     ?_OSCILLATOR_Initialize:
  1143  0070                     ??_OSCILLATOR_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_WDT_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_WDT_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_i2c_init:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_write_date:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_set_brigthness:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_read_date:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_rtc_display:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_PIN_MANAGER_Initialize:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_PIN_MANAGER_Initialize:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_SYSTEM_Initialize:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_SYSTEM_Initialize:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_main:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_bit_delay:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ??_bit_delay:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_start:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ??_start:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_stop:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ??_stop:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_write_byte:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ??_write_byte:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_encode_digit:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ??_encode_digit:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_i2c_start:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_i2c_start:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_i2c_stop:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_i2c_stop:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_i2c_repeated_start:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ??_i2c_repeated_start:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_i2c_write:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ??_i2c_write:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_i2c_read:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ??_i2c_read:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_bcd_2_decimal:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_decimal_2_bcd:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?___bmul:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?___awdiv:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?___awmod:	
  1255                           ; 2 bytes @ 0x0
  1256                           
  1257  0070                     ?___aldiv:	
  1258                           ; 2 bytes @ 0x0
  1259                           
  1260  0070                     set_brigthness@on:	
  1261                           ; 4 bytes @ 0x0
  1262                           
  1263  0070                     encode_digit@digit:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     i2c_write@data:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ___bmul@multiplicand:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ___awdiv@divisor:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ___awmod@divisor:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278  0070                     ___aldiv@divisor:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x0
  1283  0070                     	ds	1
  1284  0071                     ??_set_brigthness:
  1285  0071                     ??___bmul:	
  1286                           ; 1 bytes @ 0x1
  1287                           
  1288  0071                     write_byte@b:	
  1289                           ; 1 bytes @ 0x1
  1290                           
  1291  0071                     i2c_read@ack:	
  1292                           ; 1 bytes @ 0x1
  1293                           
  1294                           
  1295                           ; 1 bytes @ 0x1
  1296  0071                     	ds	1
  1297  0072                     write_byte@ack:
  1298  0072                     set_brigthness@brightness:	
  1299                           ; 1 bytes @ 0x2
  1300                           
  1301  0072                     i2c_read@data:	
  1302                           ; 1 bytes @ 0x2
  1303                           
  1304  0072                     ___bmul@product:	
  1305                           ; 1 bytes @ 0x2
  1306                           
  1307  0072                     ___awdiv@dividend:	
  1308                           ; 1 bytes @ 0x2
  1309                           
  1310  0072                     ___awmod@dividend:	
  1311                           ; 2 bytes @ 0x2
  1312                           
  1313                           
  1314                           ; 2 bytes @ 0x2
  1315  0072                     	ds	1
  1316  0073                     ??_read_date:
  1317  0073                     write_byte@data:	
  1318                           ; 1 bytes @ 0x3
  1319                           
  1320  0073                     ___bmul@multiplier:	
  1321                           ; 1 bytes @ 0x3
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0x3
  1325  0073                     	ds	1
  1326  0074                     ??_bcd_2_decimal:
  1327  0074                     ??___awdiv:	
  1328                           ; 1 bytes @ 0x4
  1329                           
  1330  0074                     ??___awmod:	
  1331                           ; 1 bytes @ 0x4
  1332                           
  1333  0074                     write_byte@i:	
  1334                           ; 1 bytes @ 0x4
  1335                           
  1336  0074                     read_date@date:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339  0074                     ___aldiv@dividend:	
  1340                           ; 1 bytes @ 0x4
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x4
  1344  0074                     	ds	1
  1345  0075                     ?_set_segments:
  1346  0075                     set_segments@length:	
  1347                           ; 1 bytes @ 0x5
  1348                           
  1349  0075                     ___awdiv@counter:	
  1350                           ; 1 bytes @ 0x5
  1351                           
  1352  0075                     ___awmod@counter:	
  1353                           ; 1 bytes @ 0x5
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x5
  1357  0075                     	ds	1
  1358  0076                     set_segments@pos:
  1359  0076                     ___awdiv@sign:	
  1360                           ; 1 bytes @ 0x6
  1361                           
  1362  0076                     ___awmod@sign:	
  1363                           ; 1 bytes @ 0x6
  1364                           
  1365                           
  1366                           ; 1 bytes @ 0x6
  1367  0076                     	ds	1
  1368  0077                     ??_set_segments:
  1369  0077                     bcd_2_decimal@number:	
  1370                           ; 1 bytes @ 0x7
  1371                           
  1372  0077                     ___awdiv@quotient:	
  1373                           ; 1 bytes @ 0x7
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x7
  1377  0077                     	ds	1
  1378  0078                     ??___aldiv:
  1379  0078                     set_segments@segments:	
  1380                           ; 1 bytes @ 0x8
  1381                           
  1382                           
  1383                           ; 1 bytes @ 0x8
  1384  0078                     	ds	1
  1385  0079                     ??_i2c_init:
  1386  0079                     set_segments@k:	
  1387                           ; 1 bytes @ 0x9
  1388                           
  1389  0079                     decimal_2_bcd@number:	
  1390                           ; 1 bytes @ 0x9
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x9
  1394  0079                     	ds	1
  1395  007A                     ??_write_date:
  1396  007A                     ??_rtc_display:	
  1397                           ; 1 bytes @ 0xA
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0xA
  1401  007A                     	ds	1
  1402  007B                     i2c_init@clk_freq:
  1403                           
  1404                           ; 1 bytes @ 0xB
  1405  007B                     	ds	1
  1406  007C                     write_date@date:
  1407                           
  1408                           ; 1 bytes @ 0xC
  1409  007C                     	ds	1
  1410                           
  1411                           	psect	cstackBANK0
  1412  0034                     __pcstackBANK0:
  1413  0034                     ??_decimal_2_bcd:
  1414  0034                     ___aldiv@counter:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0034                     rtc_display@segments:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420                           
  1421                           ; 4 bytes @ 0x0
  1422  0034                     	ds	1
  1423  0035                     ___aldiv@sign:
  1424                           
  1425                           ; 1 bytes @ 0x1
  1426  0035                     	ds	1
  1427  0036                     ___aldiv@quotient:
  1428                           
  1429                           ; 4 bytes @ 0x2
  1430  0036                     	ds	2
  1431  0038                     rtc_display@min:
  1432                           
  1433                           ; 1 bytes @ 0x4
  1434  0038                     	ds	1
  1435  0039                     rtc_display@sec:
  1436                           
  1437                           ; 1 bytes @ 0x5
  1438  0039                     	ds	1
  1439  003A                     rtc_display@date:
  1440                           
  1441                           ; 1 bytes @ 0x6
  1442  003A                     	ds	1
  1443  003B                     ??_main:
  1444                           
  1445                           ; 1 bytes @ 0x7
  1446  003B                     	ds	2
  1447  003D                     main@date:
  1448                           
  1449                           ; 6 bytes @ 0x9
  1450  003D                     	ds	6
  1451                           
  1452                           	psect	maintext
  1453  04F1                     __pmaintext:	
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 8 in file "main.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  date            6    9[BANK0 ] struct Date
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : B1F/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1473 ;;      Params:         0       0       0       0       0       0
  1474 ;;      Locals:         0       6       0       0       0       0
  1475 ;;      Temps:          0       2       0       0       0       0
  1476 ;;      Totals:         0       8       0       0       0       0
  1477 ;;Total ram usage:        8 bytes
  1478 ;; Hardware stack levels required when called:    4
  1479 ;; This function calls:
  1480 ;;		_SYSTEM_Initialize
  1481 ;;		_i2c_init
  1482 ;;		_read_date
  1483 ;;		_rtc_display
  1484 ;;		_set_brigthness
  1485 ;;		_write_date
  1486 ;; This function is called by:
  1487 ;;		Startup code after reset
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _main
  1493  04F1                     _main:
  1494  04F1                     l1531:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1497                           
  1498                           
  1499                           ;main.c: 11: SYSTEM_Initialize();
  1500  04F1  3183  238D  3184   	fcall	_SYSTEM_Initialize
  1501  04F4                     l1533:
  1502                           
  1503                           ;main.c: 13: WPUB = 0x24;
  1504  04F4  3024               	movlw	36
  1505  04F5  0024               	movlb	4	; select bank4
  1506  04F6  008D               	movwf	13	;volatile
  1507  04F7                     l1535:
  1508                           
  1509                           ;main.c: 15: i2c_init(100000);
  1510  04F7  30A0               	movlw	160
  1511  04F8  3184  2433  3184   	fcall	_i2c_init
  1512  04FB                     l1537:
  1513                           
  1514                           ;main.c: 17: struct Date date = {2020, 10, 14, 1, 19, 84};
  1515  04FB  302A               	movlw	low main@F2397
  1516  04FC  0086               	movwf	6
  1517  04FD  3000               	movlw	high main@F2397
  1518  04FE  0087               	movwf	7
  1519  04FF  303D               	movlw	low main@date
  1520  0500  0084               	movwf	4
  1521  0501  3000               	movlw	high main@date
  1522  0502  0085               	movwf	5
  1523  0503  3006               	movlw	6
  1524  0504  0020               	movlb	0	; select bank0
  1525  0505  00BB               	movwf	??_main
  1526  0506                     u1100:
  1527  0506  0016               	moviw fsr1++
  1528  0507  001A               	movwi fsr0++
  1529  0508  0BBB               	decfsz	??_main,f
  1530  0509  2D06               	goto	u1100
  1531  050A                     l1539:
  1532                           
  1533                           ;main.c: 19: write_date(&date);
  1534  050A  303D               	movlw	(low (main@date| 0))& (0+255)
  1535  050B  3186  2678  3184   	fcall	_write_date
  1536  050E                     l1541:
  1537                           
  1538                           ;main.c: 21: set_brigthness(0x0f, 1);
  1539  050E  01F0               	clrf	set_brigthness@on
  1540  050F  0AF0               	incf	set_brigthness@on,f
  1541  0510  300F               	movlw	15
  1542  0511  3183  23CD  3184   	fcall	_set_brigthness
  1543  0514                     l1543:
  1544                           
  1545                           ;main.c: 24: {;main.c: 25: read_date(&date);
  1546  0514  303D               	movlw	(low (main@date| 0))& (0+255)
  1547  0515  3185  25BE  3184   	fcall	_read_date
  1548  0518                     l1545:
  1549                           
  1550                           ;main.c: 26: rtc_display(&date);
  1551  0518  303D               	movlw	(low (main@date| 0))& (0+255)
  1552  0519  3186  26D8  3184   	fcall	_rtc_display
  1553  051C                     l1547:
  1554                           
  1555                           ;main.c: 28: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1556  051C  3015               	movlw	21
  1557  051D  0020               	movlb	0	; select bank0
  1558  051E  00BC               	movwf	??_main+1
  1559  051F  304B               	movlw	75
  1560  0520  00BB               	movwf	??_main
  1561  0521  30BE               	movlw	190
  1562  0522                     u1117:
  1563  0522  0B89               	decfsz	9,f
  1564  0523  2D22               	goto	u1117
  1565  0524  0BBB               	decfsz	??_main,f
  1566  0525  2D22               	goto	u1117
  1567  0526  0BBC               	decfsz	??_main+1,f
  1568  0527  2D22               	goto	u1117
  1569  0528  0000               	nop
  1570  0529  2D14               	goto	l1543
  1571  052A  3180  2802         	ljmp	start
  1572  052C                     __end_of_main:
  1573                           
  1574                           	psect	text1
  1575  0678                     __ptext1:	
  1576 ;; *************** function _write_date *****************
  1577 ;; Defined at:
  1578 ;;		line 61 in file "DS3231.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  date            1    wreg     PTR struct Date
  1581 ;;		 -> main@date(6), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  date            1   12[COMMON] PTR struct Date
  1584 ;;		 -> main@date(6), 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1594 ;;      Params:         0       0       0       0       0       0
  1595 ;;      Locals:         1       0       0       0       0       0
  1596 ;;      Temps:          2       0       0       0       0       0
  1597 ;;      Totals:         3       0       0       0       0       0
  1598 ;;Total ram usage:        3 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    2
  1601 ;; This function calls:
  1602 ;;		_decimal_2_bcd
  1603 ;;		_i2c_start
  1604 ;;		_i2c_stop
  1605 ;;		_i2c_write
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _write_date
  1613  0678                     _write_date:
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1617                           ;write_date@date stored from wreg
  1618  0678  00FC               	movwf	write_date@date
  1619  0679                     l1483:
  1620                           
  1621                           ;DS3231.c: 62: i2c_start();
  1622  0679  3183  23A4  3186   	fcall	_i2c_start
  1623                           
  1624                           ;DS3231.c: 63: i2c_write(0x68);
  1625  067C  3068               	movlw	104
  1626  067D  3183  23BE  3186   	fcall	_i2c_write
  1627                           
  1628                           ;DS3231.c: 64: i2c_write(0);
  1629  0680  3000               	movlw	0
  1630  0681  3183  23BE  3186   	fcall	_i2c_write
  1631  0684                     l1485:
  1632                           
  1633                           ;DS3231.c: 66: i2c_write(decimal_2_bcd(date->sec));
  1634  0684  087C               	movf	write_date@date,w
  1635  0685  3E05               	addlw	5
  1636  0686  0086               	movwf	6
  1637  0687  0187               	clrf	7
  1638  0688  0801               	movf	1,w
  1639  0689  3184  2458  3186   	fcall	_decimal_2_bcd
  1640  068C  3183  23BE  3186   	fcall	_i2c_write
  1641  068F                     l1487:
  1642                           
  1643                           ;DS3231.c: 67: i2c_write(decimal_2_bcd(date->min));
  1644  068F  087C               	movf	write_date@date,w
  1645  0690  3E04               	addlw	4
  1646  0691  0086               	movwf	6
  1647  0692  0187               	clrf	7
  1648  0693  0801               	movf	1,w
  1649  0694  3184  2458  3186   	fcall	_decimal_2_bcd
  1650  0697  3183  23BE  3186   	fcall	_i2c_write
  1651  069A                     l1489:
  1652                           
  1653                           ;DS3231.c: 68: i2c_write(decimal_2_bcd(date->hour));
  1654  069A  087C               	movf	write_date@date,w
  1655  069B  3E03               	addlw	3
  1656  069C  0086               	movwf	6
  1657  069D  0187               	clrf	7
  1658  069E  0801               	movf	1,w
  1659  069F  3184  2458  3186   	fcall	_decimal_2_bcd
  1660  06A2  3183  23BE  3186   	fcall	_i2c_write
  1661  06A5                     l1491:
  1662                           
  1663                           ;DS3231.c: 69: i2c_write(1);
  1664  06A5  3001               	movlw	1
  1665  06A6  3183  23BE  3186   	fcall	_i2c_write
  1666                           
  1667                           ;DS3231.c: 70: i2c_write(decimal_2_bcd(date->day));
  1668  06A9  087C               	movf	write_date@date,w
  1669  06AA  3E02               	addlw	2
  1670  06AB  0086               	movwf	6
  1671  06AC  0187               	clrf	7
  1672  06AD  0801               	movf	1,w
  1673  06AE  3184  2458  3186   	fcall	_decimal_2_bcd
  1674  06B1  3183  23BE  3186   	fcall	_i2c_write
  1675                           
  1676                           ;DS3231.c: 71: i2c_write(decimal_2_bcd(date->month));
  1677  06B4  0A7C               	incf	write_date@date,w
  1678  06B5  0086               	movwf	6
  1679  06B6  0187               	clrf	7
  1680  06B7  0801               	movf	1,w
  1681  06B8  3184  2458  3186   	fcall	_decimal_2_bcd
  1682  06BB  3183  23BE  3186   	fcall	_i2c_write
  1683                           
  1684                           ;DS3231.c: 72: i2c_write(decimal_2_bcd(date->year));
  1685  06BE  087C               	movf	write_date@date,w
  1686  06BF  0086               	movwf	6
  1687  06C0  0187               	clrf	7
  1688  06C1  0801               	movf	1,w
  1689  06C2  3184  2458  3186   	fcall	_decimal_2_bcd
  1690  06C5  3183  23BE  3186   	fcall	_i2c_write
  1691  06C8                     l1493:
  1692                           
  1693                           ;DS3231.c: 73: i2c_stop();
  1694  06C8  3183  23B1  3186   	fcall	_i2c_stop
  1695  06CB                     l1495:
  1696                           
  1697                           ;DS3231.c: 75: _delay((unsigned long)((200)*(16000000/4000.0)));
  1698  06CB  3005               	movlw	5
  1699  06CC  00FB               	movwf	??_write_date+1
  1700  06CD  300F               	movlw	15
  1701  06CE  00FA               	movwf	??_write_date
  1702  06CF  30F1               	movlw	241
  1703  06D0                     u1127:
  1704  06D0  0B89               	decfsz	9,f
  1705  06D1  2ED0               	goto	u1127
  1706  06D2  0BFA               	decfsz	??_write_date,f
  1707  06D3  2ED0               	goto	u1127
  1708  06D4  0BFB               	decfsz	??_write_date+1,f
  1709  06D5  2ED0               	goto	u1127
  1710  06D6  0000               	nop
  1711  06D7                     l237:
  1712  06D7  0008               	return
  1713  06D8                     __end_of_write_date:
  1714                           
  1715                           	psect	text2
  1716  0458                     __ptext2:	
  1717 ;; *************** function _decimal_2_bcd *****************
  1718 ;; Defined at:
  1719 ;;		line 57 in file "DS3231.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  number          1    wreg     unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  number          1    9[COMMON] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1733 ;;      Params:         0       0       0       0       0       0
  1734 ;;      Locals:         1       0       0       0       0       0
  1735 ;;      Temps:          0       7       0       0       0       0
  1736 ;;      Totals:         1       7       0       0       0       0
  1737 ;;Total ram usage:        8 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    1
  1740 ;; This function calls:
  1741 ;;		___awdiv
  1742 ;;		___awmod
  1743 ;; This function is called by:
  1744 ;;		_write_date
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _decimal_2_bcd
  1750  0458                     _decimal_2_bcd:
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  1754                           ;decimal_2_bcd@number stored from wreg
  1755  0458  00F9               	movwf	decimal_2_bcd@number
  1756  0459                     l1431:
  1757                           
  1758                           ;DS3231.c: 58: return (((number / 10) << 4) + (number % 10));
  1759  0459  300A               	movlw	10
  1760  045A  00F0               	movwf	___awmod@divisor
  1761  045B  3000               	movlw	0
  1762  045C  00F1               	movwf	___awmod@divisor+1
  1763  045D  0879               	movf	decimal_2_bcd@number,w
  1764  045E  0020               	movlb	0	; select bank0
  1765  045F  00B4               	movwf	??_decimal_2_bcd
  1766  0460  01B5               	clrf	??_decimal_2_bcd+1
  1767  0461  0834               	movf	??_decimal_2_bcd,w
  1768  0462  00F2               	movwf	___awmod@dividend
  1769  0463  0835               	movf	??_decimal_2_bcd+1,w
  1770  0464  00F3               	movwf	___awmod@dividend+1
  1771  0465  3185  256B  3184   	fcall	___awmod
  1772  0468  0870               	movf	?___awmod,w
  1773  0469  0020               	movlb	0	; select bank0
  1774  046A  00B6               	movwf	??_decimal_2_bcd+2
  1775  046B  0871               	movf	?___awmod+1,w
  1776  046C  00B7               	movwf	??_decimal_2_bcd+3
  1777  046D  300A               	movlw	10
  1778  046E  00F0               	movwf	___awdiv@divisor
  1779  046F  3000               	movlw	0
  1780  0470  00F1               	movwf	___awdiv@divisor+1
  1781  0471  0879               	movf	decimal_2_bcd@number,w
  1782  0472  00B8               	movwf	??_decimal_2_bcd+4
  1783  0473  01B9               	clrf	??_decimal_2_bcd+5
  1784  0474  0838               	movf	??_decimal_2_bcd+4,w
  1785  0475  00F2               	movwf	___awdiv@dividend
  1786  0476  0839               	movf	??_decimal_2_bcd+5,w
  1787  0477  00F3               	movwf	___awdiv@dividend+1
  1788  0478  3186  2619  3184   	fcall	___awdiv
  1789  047B  0870               	movf	?___awdiv,w
  1790  047C  0020               	movlb	0	; select bank0
  1791  047D  00BA               	movwf	??_decimal_2_bcd+6
  1792  047E  3003               	movlw	3
  1793  047F                     u985:
  1794  047F  35BA               	lslf	??_decimal_2_bcd+6,f
  1795  0480  3EFF               	addlw	-1
  1796  0481  1D03               	skipz
  1797  0482  2C7F               	goto	u985
  1798  0483  353A               	lslf	??_decimal_2_bcd+6,w
  1799  0484  0736               	addwf	??_decimal_2_bcd+2,w
  1800  0485                     l234:
  1801  0485  0008               	return
  1802  0486                     __end_of_decimal_2_bcd:
  1803                           
  1804                           	psect	text3
  1805  03CD                     __ptext3:	
  1806 ;; *************** function _set_brigthness *****************
  1807 ;; Defined at:
  1808 ;;		line 92 in file "i2c_pp.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  brightness      1    wreg     unsigned char 
  1811 ;;  on              1    0[COMMON] unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  brightness      1    2[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1823 ;;      Params:         1       0       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0       0
  1826 ;;      Totals:         3       0       0       0       0       0
  1827 ;;Total ram usage:        3 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _set_brigthness
  1838  03CD                     _set_brigthness:
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1842                           ;set_brigthness@brightness stored from wreg
  1843  03CD  00F2               	movwf	set_brigthness@brightness
  1844  03CE                     l1497:
  1845                           
  1846                           ;i2c_pp.c: 93: if(on == 1){
  1847  03CE  0370               	decf	set_brigthness@on,w
  1848  03CF  1D03               	btfss	3,2
  1849  03D0  2BD2               	goto	u1091
  1850  03D1  2BD3               	goto	u1090
  1851  03D2                     u1091:
  1852  03D2  2BDA               	goto	l1501
  1853  03D3                     u1090:
  1854  03D3                     l1499:
  1855                           
  1856                           ;i2c_pp.c: 94: m_brightness = (brightness & 0x7 | 0x08);
  1857  03D3  0872               	movf	set_brigthness@brightness,w
  1858  03D4  3907               	andlw	7
  1859  03D5  3808               	iorlw	8
  1860  03D6  00F1               	movwf	??_set_brigthness
  1861  03D7  0871               	movf	??_set_brigthness,w
  1862  03D8  00FD               	movwf	_m_brightness
  1863                           
  1864                           ;i2c_pp.c: 95: }else{
  1865  03D9  2BDF               	goto	l157
  1866  03DA                     l1501:
  1867                           
  1868                           ;i2c_pp.c: 96: m_brightness = (brightness & 0x7 | 0x00);
  1869  03DA  0872               	movf	set_brigthness@brightness,w
  1870  03DB  3907               	andlw	7
  1871  03DC  00F1               	movwf	??_set_brigthness
  1872  03DD  0871               	movf	??_set_brigthness,w
  1873  03DE  00FD               	movwf	_m_brightness
  1874  03DF                     l157:
  1875  03DF  0008               	return
  1876  03E0                     __end_of_set_brigthness:
  1877                           
  1878                           	psect	text4
  1879  06D8                     __ptext4:	
  1880 ;; *************** function _rtc_display *****************
  1881 ;; Defined at:
  1882 ;;		line 98 in file "DS3231.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  date            1    wreg     PTR struct Date
  1885 ;;		 -> main@date(6), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  date            1    6[BANK0 ] PTR struct Date
  1888 ;;		 -> main@date(6), 
  1889 ;;  segments        4    0[BANK0 ] unsigned char [4]
  1890 ;;  sec             1    5[BANK0 ] unsigned char 
  1891 ;;  min             1    4[BANK0 ] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1901 ;;      Params:         0       0       0       0       0       0
  1902 ;;      Locals:         0       7       0       0       0       0
  1903 ;;      Temps:          3       0       0       0       0       0
  1904 ;;      Totals:         3       7       0       0       0       0
  1905 ;;Total ram usage:       10 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    3
  1908 ;; This function calls:
  1909 ;;		___awdiv
  1910 ;;		___awmod
  1911 ;;		_bcd_2_decimal
  1912 ;;		_encode_digit
  1913 ;;		_set_segments
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _rtc_display
  1921  06D8                     _rtc_display:
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1925                           ;rtc_display@date stored from wreg
  1926  06D8  0020               	movlb	0	; select bank0
  1927  06D9  00BA               	movwf	rtc_display@date
  1928  06DA                     l1515:
  1929                           
  1930                           ;DS3231.c: 99: uint8_t segments[] = {0xff, 0xff, 0xff, 0xff};
  1931  06DA  0833               	movf	rtc_display@F2405+3,w
  1932  06DB  00B7               	movwf	rtc_display@segments+3
  1933  06DC  0832               	movf	rtc_display@F2405+2,w
  1934  06DD  00B6               	movwf	rtc_display@segments+2
  1935  06DE  0831               	movf	rtc_display@F2405+1,w
  1936  06DF  00B5               	movwf	rtc_display@segments+1
  1937  06E0  0830               	movf	rtc_display@F2405,w
  1938  06E1  00B4               	movwf	rtc_display@segments
  1939  06E2                     l1517:
  1940                           
  1941                           ;DS3231.c: 101: uint8_t min = bcd_2_decimal(date->min);
  1942  06E2  083A               	movf	rtc_display@date,w
  1943  06E3  3E04               	addlw	4
  1944  06E4  0086               	movwf	6
  1945  06E5  0187               	clrf	7
  1946  06E6  0801               	movf	1,w
  1947  06E7  3183  23E0  3186   	fcall	_bcd_2_decimal
  1948  06EA  00FA               	movwf	??_rtc_display
  1949  06EB  087A               	movf	??_rtc_display,w
  1950  06EC  0020               	movlb	0	; select bank0
  1951  06ED  00B8               	movwf	rtc_display@min
  1952  06EE                     l1519:
  1953                           
  1954                           ;DS3231.c: 102: uint8_t sec = bcd_2_decimal(date->sec);
  1955  06EE  083A               	movf	rtc_display@date,w
  1956  06EF  3E05               	addlw	5
  1957  06F0  0086               	movwf	6
  1958  06F1  0187               	clrf	7
  1959  06F2  0801               	movf	1,w
  1960  06F3  3183  23E0  3186   	fcall	_bcd_2_decimal
  1961  06F6  00FA               	movwf	??_rtc_display
  1962  06F7  087A               	movf	??_rtc_display,w
  1963  06F8  0020               	movlb	0	; select bank0
  1964  06F9  00B9               	movwf	rtc_display@sec
  1965  06FA                     l1521:
  1966                           
  1967                           ;DS3231.c: 104: segments[0] = encode_digit(min / 10);
  1968  06FA  300A               	movlw	10
  1969  06FB  00F0               	movwf	___awdiv@divisor
  1970  06FC  3000               	movlw	0
  1971  06FD  00F1               	movwf	___awdiv@divisor+1
  1972  06FE  0838               	movf	rtc_display@min,w
  1973  06FF  00FA               	movwf	??_rtc_display
  1974  0700  01FB               	clrf	??_rtc_display+1
  1975  0701  087A               	movf	??_rtc_display,w
  1976  0702  00F2               	movwf	___awdiv@dividend
  1977  0703  087B               	movf	??_rtc_display+1,w
  1978  0704  00F3               	movwf	___awdiv@dividend+1
  1979  0705  3186  2619  3186   	fcall	___awdiv
  1980  0708  0870               	movf	?___awdiv,w
  1981  0709  3183  2373  3186   	fcall	_encode_digit
  1982  070C  00FC               	movwf	??_rtc_display+2
  1983  070D  087C               	movf	??_rtc_display+2,w
  1984  070E  0020               	movlb	0	; select bank0
  1985  070F  00B4               	movwf	rtc_display@segments
  1986  0710                     l1523:
  1987                           
  1988                           ;DS3231.c: 105: segments[1] = encode_digit(min % 10);
  1989  0710  300A               	movlw	10
  1990  0711  00F0               	movwf	___awmod@divisor
  1991  0712  3000               	movlw	0
  1992  0713  00F1               	movwf	___awmod@divisor+1
  1993  0714  0838               	movf	rtc_display@min,w
  1994  0715  00FA               	movwf	??_rtc_display
  1995  0716  01FB               	clrf	??_rtc_display+1
  1996  0717  087A               	movf	??_rtc_display,w
  1997  0718  00F2               	movwf	___awmod@dividend
  1998  0719  087B               	movf	??_rtc_display+1,w
  1999  071A  00F3               	movwf	___awmod@dividend+1
  2000  071B  3185  256B  3186   	fcall	___awmod
  2001  071E  0870               	movf	?___awmod,w
  2002  071F  3183  2373  3186   	fcall	_encode_digit
  2003  0722  00FC               	movwf	??_rtc_display+2
  2004  0723  087C               	movf	??_rtc_display+2,w
  2005  0724  0020               	movlb	0	; select bank0
  2006  0725  00B5               	movwf	rtc_display@segments+1
  2007  0726                     l1525:
  2008                           
  2009                           ;DS3231.c: 106: segments[2] = encode_digit(sec / 10);
  2010  0726  300A               	movlw	10
  2011  0727  00F0               	movwf	___awdiv@divisor
  2012  0728  3000               	movlw	0
  2013  0729  00F1               	movwf	___awdiv@divisor+1
  2014  072A  0839               	movf	rtc_display@sec,w
  2015  072B  00FA               	movwf	??_rtc_display
  2016  072C  01FB               	clrf	??_rtc_display+1
  2017  072D  087A               	movf	??_rtc_display,w
  2018  072E  00F2               	movwf	___awdiv@dividend
  2019  072F  087B               	movf	??_rtc_display+1,w
  2020  0730  00F3               	movwf	___awdiv@dividend+1
  2021  0731  3186  2619  3186   	fcall	___awdiv
  2022  0734  0870               	movf	?___awdiv,w
  2023  0735  3183  2373  3186   	fcall	_encode_digit
  2024  0738  00FC               	movwf	??_rtc_display+2
  2025  0739  087C               	movf	??_rtc_display+2,w
  2026  073A  0020               	movlb	0	; select bank0
  2027  073B  00B6               	movwf	rtc_display@segments+2
  2028  073C                     l1527:
  2029                           
  2030                           ;DS3231.c: 107: segments[3] = encode_digit(sec % 10);
  2031  073C  300A               	movlw	10
  2032  073D  00F0               	movwf	___awmod@divisor
  2033  073E  3000               	movlw	0
  2034  073F  00F1               	movwf	___awmod@divisor+1
  2035  0740  0839               	movf	rtc_display@sec,w
  2036  0741  00FA               	movwf	??_rtc_display
  2037  0742  01FB               	clrf	??_rtc_display+1
  2038  0743  087A               	movf	??_rtc_display,w
  2039  0744  00F2               	movwf	___awmod@dividend
  2040  0745  087B               	movf	??_rtc_display+1,w
  2041  0746  00F3               	movwf	___awmod@dividend+1
  2042  0747  3185  256B  3186   	fcall	___awmod
  2043  074A  0870               	movf	?___awmod,w
  2044  074B  3183  2373  3186   	fcall	_encode_digit
  2045  074E  00FC               	movwf	??_rtc_display+2
  2046  074F  087C               	movf	??_rtc_display+2,w
  2047  0750  0020               	movlb	0	; select bank0
  2048  0751  00B7               	movwf	rtc_display@segments+3
  2049  0752                     l1529:
  2050                           
  2051                           ;DS3231.c: 109: set_segments(segments, 4, 0);
  2052  0752  3004               	movlw	4
  2053  0753  00FA               	movwf	??_rtc_display
  2054  0754  087A               	movf	??_rtc_display,w
  2055  0755  00F5               	movwf	set_segments@length
  2056  0756  01F6               	clrf	set_segments@pos
  2057  0757  3034               	movlw	(low (rtc_display@segments| 0))& (0+255)
  2058  0758  3184  24B7  3186   	fcall	_set_segments
  2059  075B                     l245:
  2060  075B  0008               	return
  2061  075C                     __end_of_rtc_display:
  2062                           
  2063                           	psect	text5
  2064  04B7                     __ptext5:	
  2065 ;; *************** function _set_segments *****************
  2066 ;; Defined at:
  2067 ;;		line 100 in file "i2c_pp.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  segments        1    wreg     PTR const unsigned char 
  2070 ;;		 -> rtc_display@segments(4), clear@data(4), 
  2071 ;;  length          1    5[COMMON] unsigned char 
  2072 ;;  pos             1    6[COMMON] unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  segments        1    8[COMMON] PTR const unsigned char 
  2075 ;;		 -> rtc_display@segments(4), clear@data(4), 
  2076 ;;  k               1    9[COMMON] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2086 ;;      Params:         2       0       0       0       0       0
  2087 ;;      Locals:         2       0       0       0       0       0
  2088 ;;      Temps:          1       0       0       0       0       0
  2089 ;;      Totals:         5       0       0       0       0       0
  2090 ;;Total ram usage:        5 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    2
  2093 ;; This function calls:
  2094 ;;		_start
  2095 ;;		_stop
  2096 ;;		_write_byte
  2097 ;; This function is called by:
  2098 ;;		_rtc_display
  2099 ;;		_clear
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _set_segments
  2105  04B7                     _set_segments:
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2109                           ;set_segments@segments stored from wreg
  2110  04B7  00F8               	movwf	set_segments@segments
  2111  04B8                     l1363:
  2112                           
  2113                           ;i2c_pp.c: 103: start();
  2114  04B8  3183  237B  3184   	fcall	_start
  2115  04BB                     l1365:
  2116                           
  2117                           ;i2c_pp.c: 104: write_byte(0x40);
  2118  04BB  3040               	movlw	64
  2119  04BC  3185  252C  3184   	fcall	_write_byte
  2120  04BF                     l1367:
  2121                           
  2122                           ;i2c_pp.c: 105: stop();
  2123  04BF  3183  2384  3184   	fcall	_stop
  2124  04C2                     l1369:
  2125                           
  2126                           ;i2c_pp.c: 108: start();
  2127  04C2  3183  237B  3184   	fcall	_start
  2128  04C5                     l1371:
  2129                           
  2130                           ;i2c_pp.c: 109: write_byte(0xC0 + (pos & 0x03));
  2131  04C5  0876               	movf	set_segments@pos,w
  2132  04C6  3903               	andlw	3
  2133  04C7  3EC0               	addlw	192
  2134  04C8  3185  252C  3184   	fcall	_write_byte
  2135  04CB                     l1373:
  2136                           
  2137                           ;i2c_pp.c: 112: for(uint8_t k = 0; k < length; k++){
  2138  04CB  01F9               	clrf	set_segments@k
  2139  04CC  2CDB               	goto	l1379
  2140  04CD                     l1375:
  2141                           
  2142                           ;i2c_pp.c: 113: write_byte(segments[k]);
  2143  04CD  0879               	movf	set_segments@k,w
  2144  04CE  0778               	addwf	set_segments@segments,w
  2145  04CF  00F7               	movwf	??_set_segments
  2146  04D0  0877               	movf	??_set_segments,w
  2147  04D1  0086               	movwf	6
  2148  04D2  0187               	clrf	7
  2149  04D3  0801               	movf	1,w
  2150  04D4  3185  252C  3184   	fcall	_write_byte
  2151  04D7                     l1377:
  2152  04D7  3001               	movlw	1
  2153  04D8  00F7               	movwf	??_set_segments
  2154  04D9  0877               	movf	??_set_segments,w
  2155  04DA  07F9               	addwf	set_segments@k,f
  2156  04DB                     l1379:
  2157  04DB  0875               	movf	set_segments@length,w
  2158  04DC  0279               	subwf	set_segments@k,w
  2159  04DD  1C03               	skipc
  2160  04DE  2CE0               	goto	u801
  2161  04DF  2CE1               	goto	u800
  2162  04E0                     u801:
  2163  04E0  2CCD               	goto	l1375
  2164  04E1                     u800:
  2165  04E1                     l1381:
  2166                           
  2167                           ;i2c_pp.c: 114: };i2c_pp.c: 116: stop();
  2168  04E1  3183  2384  3184   	fcall	_stop
  2169                           
  2170                           ;i2c_pp.c: 119: start();
  2171  04E4  3183  237B  3184   	fcall	_start
  2172  04E7                     l1383:
  2173                           
  2174                           ;i2c_pp.c: 120: write_byte(0x80 + (m_brightness & 0x0f));
  2175  04E7  087D               	movf	_m_brightness,w
  2176  04E8  390F               	andlw	15
  2177  04E9  3E80               	addlw	128
  2178  04EA  3185  252C  3184   	fcall	_write_byte
  2179  04ED                     l1385:
  2180                           
  2181                           ;i2c_pp.c: 121: stop();
  2182  04ED  3183  2384  3184   	fcall	_stop
  2183  04F0                     l163:
  2184  04F0  0008               	return
  2185  04F1                     __end_of_set_segments:
  2186                           
  2187                           	psect	text6
  2188  052C                     __ptext6:	
  2189 ;; *************** function _write_byte *****************
  2190 ;; Defined at:
  2191 ;;		line 51 in file "i2c_pp.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  b               1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  b               1    1[COMMON] unsigned char 
  2196 ;;  i               1    4[COMMON] unsigned char 
  2197 ;;  data            1    3[COMMON] unsigned char 
  2198 ;;  ack             1    2[COMMON] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      unsigned char 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0, pclath, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2208 ;;      Params:         0       0       0       0       0       0
  2209 ;;      Locals:         4       0       0       0       0       0
  2210 ;;      Temps:          1       0       0       0       0       0
  2211 ;;      Totals:         5       0       0       0       0       0
  2212 ;;Total ram usage:        5 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    1
  2215 ;; This function calls:
  2216 ;;		_bit_delay
  2217 ;; This function is called by:
  2218 ;;		_set_segments
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _write_byte
  2224  052C                     _write_byte:
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  2228                           ;write_byte@b stored from wreg
  2229  052C  00F1               	movwf	write_byte@b
  2230  052D                     l1221:
  2231                           
  2232                           ;i2c_pp.c: 52: uint8_t data = b;
  2233  052D  0871               	movf	write_byte@b,w
  2234  052E  00F0               	movwf	??_write_byte
  2235  052F  0870               	movf	??_write_byte,w
  2236  0530  00F3               	movwf	write_byte@data
  2237  0531                     l1223:
  2238  0531  0021               	movlb	1	; select bank1
  2239  0532  100C               	bcf	12,0	;volatile
  2240  0533                     l1225:
  2241                           
  2242                           ;i2c_pp.c: 55: for(uint8_t i = 0; i < 8; i++){
  2243  0533  01F4               	clrf	write_byte@i
  2244  0534                     l127:	
  2245                           ;i2c_pp.c: 56: do { LATAbits.LATA0 = 0; } while(0);
  2246                           
  2247  0534  0022               	movlb	2	; select bank2
  2248  0535  100C               	bcf	12,0	;volatile
  2249  0536                     l128:
  2250                           
  2251                           ;i2c_pp.c: 58: if(data & 0x01){
  2252  0536  1C73               	btfss	write_byte@data,0
  2253  0537  2D39               	goto	u561
  2254  0538  2D3A               	goto	u560
  2255  0539                     u561:
  2256  0539  2D3C               	goto	l133
  2257  053A                     u560:
  2258  053A                     l130:	
  2259                           ;i2c_pp.c: 59: do { LATAbits.LATA3 = 1; } while(0);
  2260                           
  2261  053A  158C               	bsf	12,3	;volatile
  2262  053B  2D3D               	goto	l135
  2263  053C                     l133:	
  2264                           ;i2c_pp.c: 61: do { LATAbits.LATA3 = 0; } while(0);
  2265                           
  2266  053C  118C               	bcf	12,3	;volatile
  2267  053D                     l135:	
  2268                           ;i2c_pp.c: 62: };i2c_pp.c: 64: do { LATAbits.LATA0 = 1; } while(0);
  2269                           
  2270  053D  140C               	bsf	12,0	;volatile
  2271  053E                     l1231:
  2272                           
  2273                           ;i2c_pp.c: 66: data = data >> 1;
  2274  053E  3673               	lsrf	write_byte@data,w
  2275  053F  00F0               	movwf	??_write_byte
  2276  0540  0870               	movf	??_write_byte,w
  2277  0541  00F3               	movwf	write_byte@data
  2278  0542  3001               	movlw	1
  2279  0543  00F0               	movwf	??_write_byte
  2280  0544  0870               	movf	??_write_byte,w
  2281  0545  07F4               	addwf	write_byte@i,f
  2282  0546                     l1233:
  2283  0546  3008               	movlw	8
  2284  0547  0274               	subwf	write_byte@i,w
  2285  0548  1C03               	skipc
  2286  0549  2D4B               	goto	u571
  2287  054A  2D4C               	goto	u570
  2288  054B                     u571:
  2289  054B  2D34               	goto	l127
  2290  054C                     u570:
  2291  054C                     l137:	
  2292                           ;i2c_pp.c: 67: };i2c_pp.c: 70: do { LATAbits.LATA0 = 0; } while(0);
  2293                           
  2294  054C  100C               	bcf	12,0	;volatile
  2295  054D                     l139:	
  2296                           ;i2c_pp.c: 71: do { LATAbits.LATA3 = 1; } while(0);
  2297                           
  2298  054D  158C               	bsf	12,3	;volatile
  2299  054E                     l141:	
  2300                           ;i2c_pp.c: 74: do { LATAbits.LATA0 = 1; } while(0);
  2301                           
  2302  054E  140C               	bsf	12,0	;volatile
  2303  054F                     l143:	
  2304                           ;i2c_pp.c: 76: do { TRISAbits.TRISA3 = 1; } while(0);
  2305                           
  2306  054F  0021               	movlb	1	; select bank1
  2307  0550  158C               	bsf	12,3	;volatile
  2308  0551                     l1235:
  2309                           
  2310                           ;i2c_pp.c: 77: bit_delay();
  2311  0551  3183  2361  3185   	fcall	_bit_delay
  2312  0554                     l1237:
  2313                           
  2314                           ;i2c_pp.c: 79: uint8_t ack = PORTAbits.RA3;
  2315  0554  3000               	movlw	0
  2316  0555  0020               	movlb	0	; select bank0
  2317  0556  198C               	btfsc	12,3	;volatile
  2318  0557  3001               	movlw	1
  2319  0558  00F2               	movwf	write_byte@ack
  2320  0559                     l1239:
  2321                           
  2322                           ;i2c_pp.c: 80: if(ack == 0){
  2323  0559  0872               	movf	write_byte@ack,w
  2324  055A  1D03               	btfss	3,2
  2325  055B  2D5D               	goto	u581
  2326  055C  2D5E               	goto	u580
  2327  055D                     u581:
  2328  055D  2D62               	goto	l1241
  2329  055E                     u580:
  2330  055E                     l146:	
  2331                           ;i2c_pp.c: 81: do { TRISAbits.TRISA3 = 0; } while(0);
  2332                           
  2333  055E  0021               	movlb	1	; select bank1
  2334  055F  118C               	bcf	12,3	;volatile
  2335  0560                     l148:	
  2336                           ;i2c_pp.c: 82: do { LATAbits.LATA3 = 0; } while(0);
  2337                           
  2338  0560  0022               	movlb	2	; select bank2
  2339  0561  118C               	bcf	12,3	;volatile
  2340  0562                     l1241:
  2341                           
  2342                           ;i2c_pp.c: 83: };i2c_pp.c: 85: bit_delay();
  2343  0562  3183  2361  3185   	fcall	_bit_delay
  2344  0565                     l1243:
  2345  0565  0021               	movlb	1	; select bank1
  2346  0566  118C               	bcf	12,3	;volatile
  2347  0567                     l151:
  2348                           
  2349                           ;i2c_pp.c: 87: bit_delay();
  2350  0567  3183  2361  3185   	fcall	_bit_delay
  2351  056A                     l152:
  2352  056A  0008               	return
  2353  056B                     __end_of_write_byte:
  2354                           
  2355                           	psect	text7
  2356  0361                     __ptext7:	
  2357 ;; *************** function _bit_delay *****************
  2358 ;; Defined at:
  2359 ;;		line 25 in file "i2c_pp.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		None
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2373 ;;      Params:         0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_write_byte
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _bit_delay
  2388  0361                     _bit_delay:
  2389  0361                     l90:	
  2390                           ;incstack = 0
  2391                           ; Regs used in _bit_delay: []
  2392                           
  2393  0361  0008               	return
  2394  0362                     __end_of_bit_delay:
  2395                           
  2396                           	psect	text8
  2397  0384                     __ptext8:	
  2398 ;; *************** function _stop *****************
  2399 ;; Defined at:
  2400 ;;		line 40 in file "i2c_pp.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		None
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2414 ;;      Params:         0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_set_segments
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _stop
  2429  0384                     _stop:
  2430  0384                     l108:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _stop: []
  2433                           ;i2c_pp.c: 41: do { TRISAbits.TRISA3 = 0; } while(0);
  2434                           
  2435  0384  0021               	movlb	1	; select bank1
  2436  0385  118C               	bcf	12,3	;volatile
  2437  0386                     l110:	
  2438                           ;i2c_pp.c: 42: do { TRISAbits.TRISA0 = 0; } while(0);
  2439                           
  2440  0386  100C               	bcf	12,0	;volatile
  2441  0387                     l112:	
  2442                           ;i2c_pp.c: 44: do { LATAbits.LATA0 = 0; } while(0);
  2443                           
  2444  0387  0022               	movlb	2	; select bank2
  2445  0388  100C               	bcf	12,0	;volatile
  2446  0389                     l114:	
  2447                           ;i2c_pp.c: 45: do { LATAbits.LATA3 = 0; } while(0);
  2448                           
  2449  0389  118C               	bcf	12,3	;volatile
  2450  038A                     l116:	
  2451                           ;i2c_pp.c: 47: do { LATAbits.LATA0 = 1; } while(0);
  2452                           
  2453  038A  140C               	bsf	12,0	;volatile
  2454  038B                     l118:	
  2455                           ;i2c_pp.c: 48: do { LATAbits.LATA3 = 1; } while(0);
  2456                           
  2457  038B  158C               	bsf	12,3	;volatile
  2458  038C                     l120:
  2459  038C  0008               	return
  2460  038D                     __end_of_stop:
  2461                           
  2462                           	psect	text9
  2463  037B                     __ptext9:	
  2464 ;; *************** function _start *****************
  2465 ;; Defined at:
  2466 ;;		line 29 in file "i2c_pp.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		None
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2480 ;;      Params:         0       0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_set_segments
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           
  2494                           ;psect for function _start
  2495  037B                     _start:
  2496  037B                     l93:	
  2497                           ;incstack = 0
  2498                           ; Regs used in _start: []
  2499                           ;i2c_pp.c: 30: do { TRISAbits.TRISA3 = 0; } while(0);
  2500                           
  2501  037B  0021               	movlb	1	; select bank1
  2502  037C  118C               	bcf	12,3	;volatile
  2503  037D                     l95:	
  2504                           ;i2c_pp.c: 31: do { TRISAbits.TRISA0 = 0; } while(0);
  2505                           
  2506  037D  100C               	bcf	12,0	;volatile
  2507  037E                     l97:	
  2508                           ;i2c_pp.c: 33: do { LATAbits.LATA3 = 1; } while(0);
  2509                           
  2510  037E  0022               	movlb	2	; select bank2
  2511  037F  158C               	bsf	12,3	;volatile
  2512  0380                     l99:	
  2513                           ;i2c_pp.c: 34: do { LATAbits.LATA0 = 1; } while(0);
  2514                           
  2515  0380  140C               	bsf	12,0	;volatile
  2516  0381                     l101:	
  2517                           ;i2c_pp.c: 36: do { LATAbits.LATA3 = 0; } while(0);
  2518                           
  2519  0381  118C               	bcf	12,3	;volatile
  2520  0382                     l103:	
  2521                           ;i2c_pp.c: 37: do { LATAbits.LATA0 = 0; } while(0);
  2522                           
  2523  0382  100C               	bcf	12,0	;volatile
  2524  0383                     l105:
  2525  0383  0008               	return
  2526  0384                     __end_of_start:
  2527                           
  2528                           	psect	text10
  2529  0373                     __ptext10:	
  2530 ;; *************** function _encode_digit *****************
  2531 ;; Defined at:
  2532 ;;		line 129 in file "i2c_pp.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  digit           1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  digit           1    0[COMMON] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      unsigned char 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2546 ;;      Params:         0       0       0       0       0       0
  2547 ;;      Locals:         1       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0
  2549 ;;      Totals:         1       0       0       0       0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_rtc_display
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _encode_digit
  2561  0373                     _encode_digit:
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2565                           ;encode_digit@digit stored from wreg
  2566  0373  00F0               	movwf	encode_digit@digit
  2567  0374                     l1387:
  2568                           
  2569                           ;i2c_pp.c: 130: return segdata[digit & 0x0f];
  2570  0374  0870               	movf	encode_digit@digit,w
  2571  0375  390F               	andlw	15
  2572  0376  3E20               	addlw	(low (_segdata| 0))& (0+255)
  2573  0377  0086               	movwf	6
  2574  0378  0187               	clrf	7
  2575  0379  0801               	movf	1,w
  2576  037A                     l171:
  2577  037A  0008               	return
  2578  037B                     __end_of_encode_digit:
  2579                           
  2580                           	psect	text11
  2581  03E0                     __ptext11:	
  2582 ;; *************** function _bcd_2_decimal *****************
  2583 ;; Defined at:
  2584 ;;		line 53 in file "DS3231.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  number          1    wreg     unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  number          1    7[COMMON] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2598 ;;      Params:         0       0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0       0
  2600 ;;      Temps:          3       0       0       0       0       0
  2601 ;;      Totals:         4       0       0       0       0       0
  2602 ;;Total ram usage:        4 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    1
  2605 ;; This function calls:
  2606 ;;		___bmul
  2607 ;; This function is called by:
  2608 ;;		_rtc_display
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _bcd_2_decimal
  2614  03E0                     _bcd_2_decimal:
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  2618                           ;bcd_2_decimal@number stored from wreg
  2619  03E0  00F7               	movwf	bcd_2_decimal@number
  2620  03E1                     l1427:
  2621                           
  2622                           ;DS3231.c: 54: return ((number >> 4) * 10 + (number & 0x0F));
  2623  03E1  300F               	movlw	15
  2624  03E2  0577               	andwf	bcd_2_decimal@number,w
  2625  03E3  00F4               	movwf	??_bcd_2_decimal
  2626  03E4  300A               	movlw	10
  2627  03E5  00F5               	movwf	??_bcd_2_decimal+1
  2628  03E6  0875               	movf	??_bcd_2_decimal+1,w
  2629  03E7  00F0               	movwf	___bmul@multiplicand
  2630  03E8  0877               	movf	bcd_2_decimal@number,w
  2631  03E9  00F6               	movwf	??_bcd_2_decimal+2
  2632  03EA  3004               	movlw	4
  2633  03EB                     u975:
  2634  03EB  36F6               	lsrf	??_bcd_2_decimal+2,f
  2635  03EC  0B89               	decfsz	9,f
  2636  03ED  2BEB               	goto	u975
  2637  03EE  0876               	movf	??_bcd_2_decimal+2,w
  2638  03EF  3184  2408  3183   	fcall	___bmul
  2639  03F2  0774               	addwf	??_bcd_2_decimal,w
  2640  03F3                     l231:
  2641  03F3  0008               	return
  2642  03F4                     __end_of_bcd_2_decimal:
  2643                           
  2644                           	psect	text12
  2645  0408                     __ptext12:	
  2646 ;; *************** function ___bmul *****************
  2647 ;; Defined at:
  2648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  multiplier      1    wreg     unsigned char 
  2651 ;;  multiplicand    1    0[COMMON] unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  multiplier      1    3[COMMON] unsigned char 
  2654 ;;  product         1    2[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      unsigned char 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2664 ;;      Params:         1       0       0       0       0       0
  2665 ;;      Locals:         2       0       0       0       0       0
  2666 ;;      Temps:          1       0       0       0       0       0
  2667 ;;      Totals:         4       0       0       0       0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_bcd_2_decimal
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function ___bmul
  2679  0408                     ___bmul:
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2683                           ;___bmul@multiplier stored from wreg
  2684  0408  00F3               	movwf	___bmul@multiplier
  2685  0409                     l1247:
  2686  0409  01F2               	clrf	___bmul@product
  2687  040A                     l1249:
  2688  040A  1C73               	btfss	___bmul@multiplier,0
  2689  040B  2C0D               	goto	u591
  2690  040C  2C0E               	goto	u590
  2691  040D                     u591:
  2692  040D  2C12               	goto	l1253
  2693  040E                     u590:
  2694  040E                     l1251:
  2695  040E  0870               	movf	___bmul@multiplicand,w
  2696  040F  00F1               	movwf	??___bmul
  2697  0410  0871               	movf	??___bmul,w
  2698  0411  07F2               	addwf	___bmul@product,f
  2699  0412                     l1253:
  2700  0412  1003               	clrc
  2701  0413  0DF0               	rlf	___bmul@multiplicand,f
  2702  0414                     l1255:
  2703  0414  1003               	clrc
  2704  0415  0CF3               	rrf	___bmul@multiplier,f
  2705  0416  0873               	movf	___bmul@multiplier,w
  2706  0417  1D03               	btfss	3,2
  2707  0418  2C1A               	goto	u601
  2708  0419  2C1B               	goto	u600
  2709  041A                     u601:
  2710  041A  2C0A               	goto	l1249
  2711  041B                     u600:
  2712  041B                     l1257:
  2713  041B  0872               	movf	___bmul@product,w
  2714  041C                     l421:
  2715  041C  0008               	return
  2716  041D                     __end_of___bmul:
  2717                           
  2718                           	psect	text13
  2719  056B                     __ptext13:	
  2720 ;; *************** function ___awmod *****************
  2721 ;; Defined at:
  2722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  divisor         2    0[COMMON] int 
  2725 ;;  dividend        2    2[COMMON] int 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  sign            1    6[COMMON] unsigned char 
  2728 ;;  counter         1    5[COMMON] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2    0[COMMON] int 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2738 ;;      Params:         4       0       0       0       0       0
  2739 ;;      Locals:         2       0       0       0       0       0
  2740 ;;      Temps:          1       0       0       0       0       0
  2741 ;;      Totals:         7       0       0       0       0       0
  2742 ;;Total ram usage:        7 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_decimal_2_bcd
  2748 ;;		_rtc_display
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function ___awmod
  2754  056B                     ___awmod:
  2755  056B                     l1305:	
  2756                           ;incstack = 0
  2757                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2758                           
  2759  056B  01F6               	clrf	___awmod@sign
  2760  056C                     l1307:
  2761  056C  1FF3               	btfss	___awmod@dividend+1,7
  2762  056D  2D6F               	goto	u711
  2763  056E  2D70               	goto	u710
  2764  056F                     u711:
  2765  056F  2D77               	goto	l1313
  2766  0570                     u710:
  2767  0570                     l1309:
  2768  0570  09F2               	comf	___awmod@dividend,f
  2769  0571  09F3               	comf	___awmod@dividend+1,f
  2770  0572  0AF2               	incf	___awmod@dividend,f
  2771  0573  1903               	skipnz
  2772  0574  0AF3               	incf	___awmod@dividend+1,f
  2773  0575                     l1311:
  2774  0575  01F6               	clrf	___awmod@sign
  2775  0576  0AF6               	incf	___awmod@sign,f
  2776  0577                     l1313:
  2777  0577  1FF1               	btfss	___awmod@divisor+1,7
  2778  0578  2D7A               	goto	u721
  2779  0579  2D7B               	goto	u720
  2780  057A                     u721:
  2781  057A  2D80               	goto	l1317
  2782  057B                     u720:
  2783  057B                     l1315:
  2784  057B  09F0               	comf	___awmod@divisor,f
  2785  057C  09F1               	comf	___awmod@divisor+1,f
  2786  057D  0AF0               	incf	___awmod@divisor,f
  2787  057E  1903               	skipnz
  2788  057F  0AF1               	incf	___awmod@divisor+1,f
  2789  0580                     l1317:
  2790  0580  0870               	movf	___awmod@divisor,w
  2791  0581  0471               	iorwf	___awmod@divisor+1,w
  2792  0582  1903               	btfsc	3,2
  2793  0583  2D85               	goto	u731
  2794  0584  2D86               	goto	u730
  2795  0585                     u731:
  2796  0585  2DAF               	goto	l1335
  2797  0586                     u730:
  2798  0586                     l1319:
  2799  0586  01F5               	clrf	___awmod@counter
  2800  0587  0AF5               	incf	___awmod@counter,f
  2801  0588  2D92               	goto	l1325
  2802  0589                     l1321:
  2803  0589  3001               	movlw	1
  2804  058A                     u745:
  2805  058A  35F0               	lslf	___awmod@divisor,f
  2806  058B  0DF1               	rlf	___awmod@divisor+1,f
  2807  058C  0B89               	decfsz	9,f
  2808  058D  2D8A               	goto	u745
  2809  058E                     l1323:
  2810  058E  3001               	movlw	1
  2811  058F  00F4               	movwf	??___awmod
  2812  0590  0874               	movf	??___awmod,w
  2813  0591  07F5               	addwf	___awmod@counter,f
  2814  0592                     l1325:
  2815  0592  1FF1               	btfss	___awmod@divisor+1,7
  2816  0593  2D95               	goto	u751
  2817  0594  2D96               	goto	u750
  2818  0595                     u751:
  2819  0595  2D89               	goto	l1321
  2820  0596                     u750:
  2821  0596                     l1327:
  2822  0596  0871               	movf	___awmod@divisor+1,w
  2823  0597  0273               	subwf	___awmod@dividend+1,w
  2824  0598  1D03               	skipz
  2825  0599  2D9C               	goto	u765
  2826  059A  0870               	movf	___awmod@divisor,w
  2827  059B  0272               	subwf	___awmod@dividend,w
  2828  059C                     u765:
  2829  059C  1C03               	skipc
  2830  059D  2D9F               	goto	u761
  2831  059E  2DA0               	goto	u760
  2832  059F                     u761:
  2833  059F  2DA4               	goto	l1331
  2834  05A0                     u760:
  2835  05A0                     l1329:
  2836  05A0  0870               	movf	___awmod@divisor,w
  2837  05A1  02F2               	subwf	___awmod@dividend,f
  2838  05A2  0871               	movf	___awmod@divisor+1,w
  2839  05A3  3BF3               	subwfb	___awmod@dividend+1,f
  2840  05A4                     l1331:
  2841  05A4  3001               	movlw	1
  2842  05A5                     u775:
  2843  05A5  36F1               	lsrf	___awmod@divisor+1,f
  2844  05A6  0CF0               	rrf	___awmod@divisor,f
  2845  05A7  0B89               	decfsz	9,f
  2846  05A8  2DA5               	goto	u775
  2847  05A9                     l1333:
  2848  05A9  3001               	movlw	1
  2849  05AA  02F5               	subwf	___awmod@counter,f
  2850  05AB  1D03               	btfss	3,2
  2851  05AC  2DAE               	goto	u781
  2852  05AD  2DAF               	goto	u780
  2853  05AE                     u781:
  2854  05AE  2D96               	goto	l1327
  2855  05AF                     u780:
  2856  05AF                     l1335:
  2857  05AF  0876               	movf	___awmod@sign,w
  2858  05B0  1903               	btfsc	3,2
  2859  05B1  2DB3               	goto	u791
  2860  05B2  2DB4               	goto	u790
  2861  05B3                     u791:
  2862  05B3  2DB9               	goto	l1339
  2863  05B4                     u790:
  2864  05B4                     l1337:
  2865  05B4  09F2               	comf	___awmod@dividend,f
  2866  05B5  09F3               	comf	___awmod@dividend+1,f
  2867  05B6  0AF2               	incf	___awmod@dividend,f
  2868  05B7  1903               	skipnz
  2869  05B8  0AF3               	incf	___awmod@dividend+1,f
  2870  05B9                     l1339:
  2871  05B9  0873               	movf	___awmod@dividend+1,w
  2872  05BA  00F1               	movwf	?___awmod+1
  2873  05BB  0872               	movf	___awmod@dividend,w
  2874  05BC  00F0               	movwf	?___awmod
  2875  05BD                     l561:
  2876  05BD  0008               	return
  2877  05BE                     __end_of___awmod:
  2878                           
  2879                           	psect	text14
  2880  0619                     __ptext14:	
  2881 ;; *************** function ___awdiv *****************
  2882 ;; Defined at:
  2883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  divisor         2    0[COMMON] int 
  2886 ;;  dividend        2    2[COMMON] int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  quotient        2    7[COMMON] int 
  2889 ;;  sign            1    6[COMMON] unsigned char 
  2890 ;;  counter         1    5[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    0[COMMON] int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2900 ;;      Params:         4       0       0       0       0       0
  2901 ;;      Locals:         4       0       0       0       0       0
  2902 ;;      Temps:          1       0       0       0       0       0
  2903 ;;      Totals:         9       0       0       0       0       0
  2904 ;;Total ram usage:        9 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_decimal_2_bcd
  2910 ;;		_rtc_display
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function ___awdiv
  2916  0619                     ___awdiv:
  2917  0619                     l1261:	
  2918                           ;incstack = 0
  2919                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2920                           
  2921  0619  01F6               	clrf	___awdiv@sign
  2922  061A                     l1263:
  2923  061A  1FF1               	btfss	___awdiv@divisor+1,7
  2924  061B  2E1D               	goto	u611
  2925  061C  2E1E               	goto	u610
  2926  061D                     u611:
  2927  061D  2E25               	goto	l1269
  2928  061E                     u610:
  2929  061E                     l1265:
  2930  061E  09F0               	comf	___awdiv@divisor,f
  2931  061F  09F1               	comf	___awdiv@divisor+1,f
  2932  0620  0AF0               	incf	___awdiv@divisor,f
  2933  0621  1903               	skipnz
  2934  0622  0AF1               	incf	___awdiv@divisor+1,f
  2935  0623                     l1267:
  2936  0623  01F6               	clrf	___awdiv@sign
  2937  0624  0AF6               	incf	___awdiv@sign,f
  2938  0625                     l1269:
  2939  0625  1FF3               	btfss	___awdiv@dividend+1,7
  2940  0626  2E28               	goto	u621
  2941  0627  2E29               	goto	u620
  2942  0628                     u621:
  2943  0628  2E32               	goto	l1275
  2944  0629                     u620:
  2945  0629                     l1271:
  2946  0629  09F2               	comf	___awdiv@dividend,f
  2947  062A  09F3               	comf	___awdiv@dividend+1,f
  2948  062B  0AF2               	incf	___awdiv@dividend,f
  2949  062C  1903               	skipnz
  2950  062D  0AF3               	incf	___awdiv@dividend+1,f
  2951  062E                     l1273:
  2952  062E  3001               	movlw	1
  2953  062F  00F4               	movwf	??___awdiv
  2954  0630  0874               	movf	??___awdiv,w
  2955  0631  06F6               	xorwf	___awdiv@sign,f
  2956  0632                     l1275:
  2957  0632  01F7               	clrf	___awdiv@quotient
  2958  0633  01F8               	clrf	___awdiv@quotient+1
  2959  0634                     l1277:
  2960  0634  0870               	movf	___awdiv@divisor,w
  2961  0635  0471               	iorwf	___awdiv@divisor+1,w
  2962  0636  1903               	btfsc	3,2
  2963  0637  2E39               	goto	u631
  2964  0638  2E3A               	goto	u630
  2965  0639                     u631:
  2966  0639  2E69               	goto	l1297
  2967  063A                     u630:
  2968  063A                     l1279:
  2969  063A  01F5               	clrf	___awdiv@counter
  2970  063B  0AF5               	incf	___awdiv@counter,f
  2971  063C  2E46               	goto	l1285
  2972  063D                     l1281:
  2973  063D  3001               	movlw	1
  2974  063E                     u645:
  2975  063E  35F0               	lslf	___awdiv@divisor,f
  2976  063F  0DF1               	rlf	___awdiv@divisor+1,f
  2977  0640  0B89               	decfsz	9,f
  2978  0641  2E3E               	goto	u645
  2979  0642                     l1283:
  2980  0642  3001               	movlw	1
  2981  0643  00F4               	movwf	??___awdiv
  2982  0644  0874               	movf	??___awdiv,w
  2983  0645  07F5               	addwf	___awdiv@counter,f
  2984  0646                     l1285:
  2985  0646  1FF1               	btfss	___awdiv@divisor+1,7
  2986  0647  2E49               	goto	u651
  2987  0648  2E4A               	goto	u650
  2988  0649                     u651:
  2989  0649  2E3D               	goto	l1281
  2990  064A                     u650:
  2991  064A                     l1287:
  2992  064A  3001               	movlw	1
  2993  064B                     u665:
  2994  064B  35F7               	lslf	___awdiv@quotient,f
  2995  064C  0DF8               	rlf	___awdiv@quotient+1,f
  2996  064D  0B89               	decfsz	9,f
  2997  064E  2E4B               	goto	u665
  2998  064F  0871               	movf	___awdiv@divisor+1,w
  2999  0650  0273               	subwf	___awdiv@dividend+1,w
  3000  0651  1D03               	skipz
  3001  0652  2E55               	goto	u675
  3002  0653  0870               	movf	___awdiv@divisor,w
  3003  0654  0272               	subwf	___awdiv@dividend,w
  3004  0655                     u675:
  3005  0655  1C03               	skipc
  3006  0656  2E58               	goto	u671
  3007  0657  2E59               	goto	u670
  3008  0658                     u671:
  3009  0658  2E5E               	goto	l1293
  3010  0659                     u670:
  3011  0659                     l1289:
  3012  0659  0870               	movf	___awdiv@divisor,w
  3013  065A  02F2               	subwf	___awdiv@dividend,f
  3014  065B  0871               	movf	___awdiv@divisor+1,w
  3015  065C  3BF3               	subwfb	___awdiv@dividend+1,f
  3016  065D                     l1291:
  3017  065D  1477               	bsf	___awdiv@quotient,0
  3018  065E                     l1293:
  3019  065E  3001               	movlw	1
  3020  065F                     u685:
  3021  065F  36F1               	lsrf	___awdiv@divisor+1,f
  3022  0660  0CF0               	rrf	___awdiv@divisor,f
  3023  0661  0B89               	decfsz	9,f
  3024  0662  2E5F               	goto	u685
  3025  0663                     l1295:
  3026  0663  3001               	movlw	1
  3027  0664  02F5               	subwf	___awdiv@counter,f
  3028  0665  1D03               	btfss	3,2
  3029  0666  2E68               	goto	u691
  3030  0667  2E69               	goto	u690
  3031  0668                     u691:
  3032  0668  2E4A               	goto	l1287
  3033  0669                     u690:
  3034  0669                     l1297:
  3035  0669  0876               	movf	___awdiv@sign,w
  3036  066A  1903               	btfsc	3,2
  3037  066B  2E6D               	goto	u701
  3038  066C  2E6E               	goto	u700
  3039  066D                     u701:
  3040  066D  2E73               	goto	l1301
  3041  066E                     u700:
  3042  066E                     l1299:
  3043  066E  09F7               	comf	___awdiv@quotient,f
  3044  066F  09F8               	comf	___awdiv@quotient+1,f
  3045  0670  0AF7               	incf	___awdiv@quotient,f
  3046  0671  1903               	skipnz
  3047  0672  0AF8               	incf	___awdiv@quotient+1,f
  3048  0673                     l1301:
  3049  0673  0878               	movf	___awdiv@quotient+1,w
  3050  0674  00F1               	movwf	?___awdiv+1
  3051  0675  0877               	movf	___awdiv@quotient,w
  3052  0676  00F0               	movwf	?___awdiv
  3053  0677                     l548:
  3054  0677  0008               	return
  3055  0678                     __end_of___awdiv:
  3056                           
  3057                           	psect	text15
  3058  05BE                     __ptext15:	
  3059 ;; *************** function _read_date *****************
  3060 ;; Defined at:
  3061 ;;		line 78 in file "DS3231.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  date            1    wreg     PTR struct Date
  3064 ;;		 -> main@date(6), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  date            1    4[COMMON] PTR struct Date
  3067 ;;		 -> main@date(6), 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3077 ;;      Params:         0       0       0       0       0       0
  3078 ;;      Locals:         1       0       0       0       0       0
  3079 ;;      Temps:          1       0       0       0       0       0
  3080 ;;      Totals:         2       0       0       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    1
  3084 ;; This function calls:
  3085 ;;		_i2c_read
  3086 ;;		_i2c_repeated_start
  3087 ;;		_i2c_start
  3088 ;;		_i2c_stop
  3089 ;;		_i2c_write
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _read_date
  3097  05BE                     _read_date:
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3101                           ;read_date@date stored from wreg
  3102  05BE  00F4               	movwf	read_date@date
  3103  05BF                     l1503:
  3104                           
  3105                           ;DS3231.c: 79: i2c_start();
  3106  05BF  3183  23A4  3185   	fcall	_i2c_start
  3107                           
  3108                           ;DS3231.c: 80: i2c_write(0x68);
  3109  05C2  3068               	movlw	104
  3110  05C3  3183  23BE  3185   	fcall	_i2c_write
  3111                           
  3112                           ;DS3231.c: 81: i2c_write(0);
  3113  05C6  3000               	movlw	0
  3114  05C7  3183  23BE  3185   	fcall	_i2c_write
  3115                           
  3116                           ;DS3231.c: 82: i2c_repeated_start();
  3117  05CA  3183  2397  3185   	fcall	_i2c_repeated_start
  3118                           
  3119                           ;DS3231.c: 83: i2c_write(0xD1);
  3120  05CD  30D1               	movlw	209
  3121  05CE  3183  23BE  3185   	fcall	_i2c_write
  3122  05D1                     l1505:
  3123                           
  3124                           ;DS3231.c: 85: date->sec = i2c_read(1);
  3125  05D1  3001               	movlw	1
  3126  05D2  3184  2486  3185   	fcall	_i2c_read
  3127  05D5  00F3               	movwf	??_read_date
  3128  05D6  0874               	movf	read_date@date,w
  3129  05D7  3E05               	addlw	5
  3130  05D8  0086               	movwf	6
  3131  05D9  0187               	clrf	7
  3132  05DA  0873               	movf	??_read_date,w
  3133  05DB  0081               	movwf	1
  3134  05DC                     l1507:
  3135                           
  3136                           ;DS3231.c: 86: date->min = i2c_read(1);
  3137  05DC  3001               	movlw	1
  3138  05DD  3184  2486  3185   	fcall	_i2c_read
  3139  05E0  00F3               	movwf	??_read_date
  3140  05E1  0874               	movf	read_date@date,w
  3141  05E2  3E04               	addlw	4
  3142  05E3  0086               	movwf	6
  3143  05E4  0187               	clrf	7
  3144  05E5  0873               	movf	??_read_date,w
  3145  05E6  0081               	movwf	1
  3146  05E7                     l1509:
  3147                           
  3148                           ;DS3231.c: 87: date->hour = i2c_read(1);
  3149  05E7  3001               	movlw	1
  3150  05E8  3184  2486  3185   	fcall	_i2c_read
  3151  05EB  00F3               	movwf	??_read_date
  3152  05EC  0874               	movf	read_date@date,w
  3153  05ED  3E03               	addlw	3
  3154  05EE  0086               	movwf	6
  3155  05EF  0187               	clrf	7
  3156  05F0  0873               	movf	??_read_date,w
  3157  05F1  0081               	movwf	1
  3158  05F2                     l1511:
  3159                           
  3160                           ;DS3231.c: 88: i2c_read(1);
  3161  05F2  3001               	movlw	1
  3162  05F3  3184  2486  3185   	fcall	_i2c_read
  3163                           
  3164                           ;DS3231.c: 89: date->day = i2c_read(1);
  3165  05F6  3001               	movlw	1
  3166  05F7  3184  2486  3185   	fcall	_i2c_read
  3167  05FA  00F3               	movwf	??_read_date
  3168  05FB  0874               	movf	read_date@date,w
  3169  05FC  3E02               	addlw	2
  3170  05FD  0086               	movwf	6
  3171  05FE  0187               	clrf	7
  3172  05FF  0873               	movf	??_read_date,w
  3173  0600  0081               	movwf	1
  3174                           
  3175                           ;DS3231.c: 90: date->month = i2c_read(1);
  3176  0601  3001               	movlw	1
  3177  0602  3184  2486  3185   	fcall	_i2c_read
  3178  0605  00F3               	movwf	??_read_date
  3179  0606  0A74               	incf	read_date@date,w
  3180  0607  0086               	movwf	6
  3181  0608  0187               	clrf	7
  3182  0609  0873               	movf	??_read_date,w
  3183  060A  0081               	movwf	1
  3184                           
  3185                           ;DS3231.c: 91: date->year = i2c_read(0);
  3186  060B  3000               	movlw	0
  3187  060C  3184  2486  3185   	fcall	_i2c_read
  3188  060F  00F3               	movwf	??_read_date
  3189  0610  0874               	movf	read_date@date,w
  3190  0611  0086               	movwf	6
  3191  0612  0187               	clrf	7
  3192  0613  0873               	movf	??_read_date,w
  3193  0614  0081               	movwf	1
  3194  0615                     l1513:
  3195                           
  3196                           ;DS3231.c: 93: i2c_stop();
  3197  0615  3183  23B1  3185   	fcall	_i2c_stop
  3198  0618                     l240:
  3199  0618  0008               	return
  3200  0619                     __end_of_read_date:
  3201                           
  3202                           	psect	text16
  3203  03BE                     __ptext16:	
  3204 ;; *************** function _i2c_write *****************
  3205 ;; Defined at:
  3206 ;;		line 34 in file "DS3231.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  data            1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  data            1    0[COMMON] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3220 ;;      Params:         0       0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0
  3223 ;;      Totals:         1       0       0       0       0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_write_date
  3230 ;;		_read_date
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _i2c_write
  3236  03BE                     _i2c_write:
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _i2c_write: [wreg+status,2]
  3240                           ;i2c_write@data stored from wreg
  3241  03BE  00F0               	movwf	i2c_write@data
  3242  03BF                     l1403:
  3243  03BF                     l213:	
  3244                           ;DS3231.c: 35: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3245                           
  3246  03BF  0024               	movlb	4	; select bank4
  3247  03C0  1914               	btfsc	20,2	;volatile
  3248  03C1  2BC3               	goto	u871
  3249  03C2  2BC4               	goto	u870
  3250  03C3                     u871:
  3251  03C3  2BBF               	goto	l213
  3252  03C4                     u870:
  3253  03C4                     l1405:
  3254  03C4  0816               	movf	22,w	;volatile
  3255  03C5  391F               	andlw	31
  3256  03C6  1D03               	btfss	3,2
  3257  03C7  2BC9               	goto	u881
  3258  03C8  2BCA               	goto	u880
  3259  03C9                     u881:
  3260  03C9  2BBF               	goto	l213
  3261  03CA                     u880:
  3262  03CA                     l1407:
  3263                           
  3264                           ;DS3231.c: 36: SSPBUF = data;
  3265  03CA  0870               	movf	i2c_write@data,w
  3266  03CB  0091               	movwf	17	;volatile
  3267  03CC                     l216:
  3268  03CC  0008               	return
  3269  03CD                     __end_of_i2c_write:
  3270                           
  3271                           	psect	text17
  3272  03B1                     __ptext17:	
  3273 ;; *************** function _i2c_stop *****************
  3274 ;; Defined at:
  3275 ;;		line 24 in file "DS3231.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3289 ;;      Params:         0       0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_write_date
  3299 ;;		_read_date
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _i2c_stop
  3305  03B1                     _i2c_stop:
  3306  03B1                     l1395:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _i2c_stop: [wreg+status,2]
  3309                           
  3310  03B1                     l201:	
  3311                           ;DS3231.c: 25: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3312                           
  3313  03B1  0024               	movlb	4	; select bank4
  3314  03B2  1914               	btfsc	20,2	;volatile
  3315  03B3  2BB5               	goto	u831
  3316  03B4  2BB6               	goto	u830
  3317  03B5                     u831:
  3318  03B5  2BB1               	goto	l201
  3319  03B6                     u830:
  3320  03B6                     l1397:
  3321  03B6  0816               	movf	22,w	;volatile
  3322  03B7  391F               	andlw	31
  3323  03B8  1D03               	btfss	3,2
  3324  03B9  2BBB               	goto	u841
  3325  03BA  2BBC               	goto	u840
  3326  03BB                     u841:
  3327  03BB  2BB1               	goto	l201
  3328  03BC                     u840:
  3329  03BC                     l203:
  3330                           
  3331                           ;DS3231.c: 26: SSP2CON2bits.PEN = 1;
  3332  03BC  151E               	bsf	30,2	;volatile
  3333  03BD                     l204:
  3334  03BD  0008               	return
  3335  03BE                     __end_of_i2c_stop:
  3336                           
  3337                           	psect	text18
  3338  03A4                     __ptext18:	
  3339 ;; *************** function _i2c_start *****************
  3340 ;; Defined at:
  3341 ;;		line 19 in file "DS3231.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3355 ;;      Params:         0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_write_date
  3365 ;;		_read_date
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _i2c_start
  3371  03A4                     _i2c_start:
  3372  03A4                     l1391:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _i2c_start: [wreg+status,2]
  3375                           
  3376  03A4                     l195:	
  3377                           ;DS3231.c: 20: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3378                           
  3379  03A4  0024               	movlb	4	; select bank4
  3380  03A5  1914               	btfsc	20,2	;volatile
  3381  03A6  2BA8               	goto	u811
  3382  03A7  2BA9               	goto	u810
  3383  03A8                     u811:
  3384  03A8  2BA4               	goto	l195
  3385  03A9                     u810:
  3386  03A9                     l1393:
  3387  03A9  0816               	movf	22,w	;volatile
  3388  03AA  391F               	andlw	31
  3389  03AB  1D03               	btfss	3,2
  3390  03AC  2BAE               	goto	u821
  3391  03AD  2BAF               	goto	u820
  3392  03AE                     u821:
  3393  03AE  2BA4               	goto	l195
  3394  03AF                     u820:
  3395  03AF                     l197:
  3396                           
  3397                           ;DS3231.c: 21: SSP2CON2bits.SEN = 1;
  3398  03AF  141E               	bsf	30,0	;volatile
  3399  03B0                     l198:
  3400  03B0  0008               	return
  3401  03B1                     __end_of_i2c_start:
  3402                           
  3403                           	psect	text19
  3404  0397                     __ptext19:	
  3405 ;; *************** function _i2c_repeated_start *****************
  3406 ;; Defined at:
  3407 ;;		line 29 in file "DS3231.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3421 ;;      Params:         0       0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_read_date
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _i2c_repeated_start
  3436  0397                     _i2c_repeated_start:
  3437  0397                     l1399:	
  3438                           ;incstack = 0
  3439                           ; Regs used in _i2c_repeated_start: [wreg+status,2]
  3440                           
  3441  0397                     l207:	
  3442                           ;DS3231.c: 30: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3443                           
  3444  0397  0024               	movlb	4	; select bank4
  3445  0398  1914               	btfsc	20,2	;volatile
  3446  0399  2B9B               	goto	u851
  3447  039A  2B9C               	goto	u850
  3448  039B                     u851:
  3449  039B  2B97               	goto	l207
  3450  039C                     u850:
  3451  039C                     l1401:
  3452  039C  0816               	movf	22,w	;volatile
  3453  039D  391F               	andlw	31
  3454  039E  1D03               	btfss	3,2
  3455  039F  2BA1               	goto	u861
  3456  03A0  2BA2               	goto	u860
  3457  03A1                     u861:
  3458  03A1  2B97               	goto	l207
  3459  03A2                     u860:
  3460  03A2                     l209:
  3461                           
  3462                           ;DS3231.c: 31: SSP2CON2bits.RSEN = 1;
  3463  03A2  149E               	bsf	30,1	;volatile
  3464  03A3                     l210:
  3465  03A3  0008               	return
  3466  03A4                     __end_of_i2c_repeated_start:
  3467                           
  3468                           	psect	text20
  3469  0486                     __ptext20:	
  3470 ;; *************** function _i2c_read *****************
  3471 ;; Defined at:
  3472 ;;		line 39 in file "DS3231.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  ack             1    wreg     unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  ack             1    1[COMMON] unsigned char 
  3477 ;;  data            1    2[COMMON] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      unsigned char 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3487 ;;      Params:         0       0       0       0       0       0
  3488 ;;      Locals:         2       0       0       0       0       0
  3489 ;;      Temps:          1       0       0       0       0       0
  3490 ;;      Totals:         3       0       0       0       0       0
  3491 ;;Total ram usage:        3 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_read_date
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _i2c_read
  3502  0486                     _i2c_read:
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  3506                           ;i2c_read@ack stored from wreg
  3507  0486  00F1               	movwf	i2c_read@ack
  3508  0487                     l1409:
  3509  0487                     l219:	
  3510                           ;DS3231.c: 40: uint8_t data;;DS3231.c: 41: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3511                           
  3512  0487  0024               	movlb	4	; select bank4
  3513  0488  1914               	btfsc	20,2	;volatile
  3514  0489  2C8B               	goto	u891
  3515  048A  2C8C               	goto	u890
  3516  048B                     u891:
  3517  048B  2C87               	goto	l219
  3518  048C                     u890:
  3519  048C                     l1411:
  3520  048C  0816               	movf	22,w	;volatile
  3521  048D  391F               	andlw	31
  3522  048E  1D03               	btfss	3,2
  3523  048F  2C91               	goto	u901
  3524  0490  2C92               	goto	u900
  3525  0491                     u901:
  3526  0491  2C87               	goto	l219
  3527  0492                     u900:
  3528  0492                     l221:
  3529                           
  3530                           ;DS3231.c: 42: SSP2CON2bits.RCEN = 1;
  3531  0492  159E               	bsf	30,3	;volatile
  3532  0493                     l222:	
  3533                           ;DS3231.c: 43: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3534                           
  3535  0493  1914               	btfsc	20,2	;volatile
  3536  0494  2C96               	goto	u911
  3537  0495  2C97               	goto	u910
  3538  0496                     u911:
  3539  0496  2C93               	goto	l222
  3540  0497                     u910:
  3541  0497                     l1413:
  3542  0497  0816               	movf	22,w	;volatile
  3543  0498  391F               	andlw	31
  3544  0499  1D03               	btfss	3,2
  3545  049A  2C9C               	goto	u921
  3546  049B  2C9D               	goto	u920
  3547  049C                     u921:
  3548  049C  2C93               	goto	l222
  3549  049D                     u920:
  3550  049D                     l1415:
  3551                           
  3552                           ;DS3231.c: 44: data = SSPBUF;
  3553  049D  0811               	movf	17,w	;volatile
  3554  049E  00F0               	movwf	??_i2c_read
  3555  049F  0870               	movf	??_i2c_read,w
  3556  04A0  00F2               	movwf	i2c_read@data
  3557  04A1                     l225:	
  3558                           ;DS3231.c: 45: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3559                           
  3560  04A1  1914               	btfsc	20,2	;volatile
  3561  04A2  2CA4               	goto	u931
  3562  04A3  2CA5               	goto	u930
  3563  04A4                     u931:
  3564  04A4  2CA1               	goto	l225
  3565  04A5                     u930:
  3566  04A5                     l1417:
  3567  04A5  0816               	movf	22,w	;volatile
  3568  04A6  391F               	andlw	31
  3569  04A7  1D03               	btfss	3,2
  3570  04A8  2CAA               	goto	u941
  3571  04A9  2CAB               	goto	u940
  3572  04AA                     u941:
  3573  04AA  2CA1               	goto	l225
  3574  04AB                     u940:
  3575  04AB                     l1419:
  3576                           
  3577                           ;DS3231.c: 47: SSP2CON2bits.ACKDT = !ack;
  3578  04AB  0871               	movf	i2c_read@ack,w
  3579  04AC  1903               	btfsc	3,2
  3580  04AD  2CAF               	goto	u951
  3581  04AE  2CB2               	goto	u950
  3582  04AF                     u951:
  3583  04AF  0024               	movlb	4	; select bank4
  3584  04B0  169E               	bsf	30,5	;volatile
  3585  04B1  2CB4               	goto	u964
  3586  04B2                     u950:
  3587  04B2  0024               	movlb	4	; select bank4
  3588  04B3  129E               	bcf	30,5	;volatile
  3589  04B4                     u964:
  3590  04B4                     l1421:
  3591                           
  3592                           ;DS3231.c: 48: SSP2CON2bits.ACKEN = 1;
  3593  04B4  161E               	bsf	30,4	;volatile
  3594  04B5                     l1423:
  3595                           
  3596                           ;DS3231.c: 50: return data;
  3597  04B5  0872               	movf	i2c_read@data,w
  3598  04B6                     l228:
  3599  04B6  0008               	return
  3600  04B7                     __end_of_i2c_read:
  3601                           
  3602                           	psect	text21
  3603  0433                     __ptext21:	
  3604 ;; *************** function _i2c_init *****************
  3605 ;; Defined at:
  3606 ;;		line 13 in file "DS3231.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  clk_freq        1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  clk_freq        1   11[COMMON] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3620 ;;      Params:         0       0       0       0       0       0
  3621 ;;      Locals:         1       0       0       0       0       0
  3622 ;;      Temps:          2       0       0       0       0       0
  3623 ;;      Totals:         3       0       0       0       0       0
  3624 ;;Total ram usage:        3 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    1
  3627 ;; This function calls:
  3628 ;;		___aldiv
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _i2c_init
  3636  0433                     _i2c_init:
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _i2c_init: [wreg+status,2+status,0+pclath+cstack]
  3640                           ;i2c_init@clk_freq stored from wreg
  3641  0433  00FB               	movwf	i2c_init@clk_freq
  3642  0434                     l1477:
  3643                           
  3644                           ;DS3231.c: 14: SSPCON = 0x28;
  3645  0434  3028               	movlw	40
  3646  0435  0024               	movlb	4	; select bank4
  3647  0436  0095               	movwf	21	;volatile
  3648  0437                     l1479:
  3649                           
  3650                           ;DS3231.c: 15: SSPADD = (16000000/(4 * clk_freq)) -1;
  3651  0437  087B               	movf	i2c_init@clk_freq,w
  3652  0438  00F9               	movwf	??_i2c_init
  3653  0439  01FA               	clrf	??_i2c_init+1
  3654  043A  35F9               	lslf	??_i2c_init,f
  3655  043B  0DFA               	rlf	??_i2c_init+1,f
  3656  043C  35F9               	lslf	??_i2c_init,f
  3657  043D  0DFA               	rlf	??_i2c_init+1,f
  3658  043E  0879               	movf	??_i2c_init,w
  3659  043F  00F0               	movwf	___aldiv@divisor
  3660  0440  087A               	movf	??_i2c_init+1,w
  3661  0441  00F1               	movwf	___aldiv@divisor+1
  3662  0442  0D89               	rlf	9,f
  3663  0443  3B89               	subwfb	9,f
  3664  0444  0989               	comf	9,f
  3665  0445  00F2               	movwf	___aldiv@divisor+2
  3666  0446  00F3               	movwf	___aldiv@divisor+3
  3667  0447  3000               	movlw	0
  3668  0448  00F7               	movwf	___aldiv@dividend+3
  3669  0449  30F4               	movlw	244
  3670  044A  00F6               	movwf	___aldiv@dividend+2
  3671  044B  3024               	movlw	36
  3672  044C  00F5               	movwf	___aldiv@dividend+1
  3673  044D  3000               	movlw	0
  3674  044E  00F4               	movwf	___aldiv@dividend
  3675  044F  3187  275C  3184   	fcall	___aldiv
  3676  0452  0870               	movf	?___aldiv,w
  3677  0453  3EFF               	addlw	255
  3678  0454  0024               	movlb	4	; select bank4
  3679  0455  0092               	movwf	18	;volatile
  3680  0456                     l1481:
  3681                           
  3682                           ;DS3231.c: 16: SSPSTAT = 0;
  3683  0456  0194               	clrf	20	;volatile
  3684  0457                     l192:
  3685  0457  0008               	return
  3686  0458                     __end_of_i2c_init:
  3687                           
  3688                           	psect	text22
  3689  075C                     __ptext22:	
  3690 ;; *************** function ___aldiv *****************
  3691 ;; Defined at:
  3692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  divisor         4    0[COMMON] long 
  3695 ;;  dividend        4    4[COMMON] long 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  quotient        4    2[BANK0 ] long 
  3698 ;;  sign            1    1[BANK0 ] unsigned char 
  3699 ;;  counter         1    0[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  4    0[COMMON] long 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3709 ;;      Params:         8       0       0       0       0       0
  3710 ;;      Locals:         0       6       0       0       0       0
  3711 ;;      Temps:          1       0       0       0       0       0
  3712 ;;      Totals:         9       6       0       0       0       0
  3713 ;;Total ram usage:       15 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_i2c_init
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function ___aldiv
  3724  075C                     ___aldiv:
  3725  075C                     l1435:	
  3726                           ;incstack = 0
  3727                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3728                           
  3729  075C  0020               	movlb	0	; select bank0
  3730  075D  01B5               	clrf	___aldiv@sign
  3731  075E                     l1437:
  3732  075E  1FF3               	btfss	___aldiv@divisor+3,7
  3733  075F  2F61               	goto	u991
  3734  0760  2F62               	goto	u990
  3735  0761                     u991:
  3736  0761  2F6F               	goto	l460
  3737  0762                     u990:
  3738  0762                     l1439:
  3739  0762  09F0               	comf	___aldiv@divisor,f
  3740  0763  09F1               	comf	___aldiv@divisor+1,f
  3741  0764  09F2               	comf	___aldiv@divisor+2,f
  3742  0765  09F3               	comf	___aldiv@divisor+3,f
  3743  0766  0AF0               	incf	___aldiv@divisor,f
  3744  0767  1903               	skipnz
  3745  0768  0AF1               	incf	___aldiv@divisor+1,f
  3746  0769  1903               	skipnz
  3747  076A  0AF2               	incf	___aldiv@divisor+2,f
  3748  076B  1903               	skipnz
  3749  076C  0AF3               	incf	___aldiv@divisor+3,f
  3750  076D  01B5               	clrf	___aldiv@sign
  3751  076E  0AB5               	incf	___aldiv@sign,f
  3752  076F                     l460:
  3753  076F  1FF7               	btfss	___aldiv@dividend+3,7
  3754  0770  2F72               	goto	u1001
  3755  0771  2F73               	goto	u1000
  3756  0772                     u1001:
  3757  0772  2F82               	goto	l1445
  3758  0773                     u1000:
  3759  0773                     l1441:
  3760  0773  09F4               	comf	___aldiv@dividend,f
  3761  0774  09F5               	comf	___aldiv@dividend+1,f
  3762  0775  09F6               	comf	___aldiv@dividend+2,f
  3763  0776  09F7               	comf	___aldiv@dividend+3,f
  3764  0777  0AF4               	incf	___aldiv@dividend,f
  3765  0778  1903               	skipnz
  3766  0779  0AF5               	incf	___aldiv@dividend+1,f
  3767  077A  1903               	skipnz
  3768  077B  0AF6               	incf	___aldiv@dividend+2,f
  3769  077C  1903               	skipnz
  3770  077D  0AF7               	incf	___aldiv@dividend+3,f
  3771  077E                     l1443:
  3772  077E  3001               	movlw	1
  3773  077F  00F8               	movwf	??___aldiv
  3774  0780  0878               	movf	??___aldiv,w
  3775  0781  06B5               	xorwf	___aldiv@sign,f
  3776  0782                     l1445:
  3777  0782  3000               	movlw	0
  3778  0783  00B9               	movwf	___aldiv@quotient+3
  3779  0784  3000               	movlw	0
  3780  0785  00B8               	movwf	___aldiv@quotient+2
  3781  0786  3000               	movlw	0
  3782  0787  00B7               	movwf	___aldiv@quotient+1
  3783  0788  3000               	movlw	0
  3784  0789  00B6               	movwf	___aldiv@quotient
  3785  078A                     l1447:
  3786  078A  0873               	movf	___aldiv@divisor+3,w
  3787  078B  0472               	iorwf	___aldiv@divisor+2,w
  3788  078C  0471               	iorwf	___aldiv@divisor+1,w
  3789  078D  0470               	iorwf	___aldiv@divisor,w
  3790  078E  1903               	skipnz
  3791  078F  2F91               	goto	u1011
  3792  0790  2F92               	goto	u1010
  3793  0791                     u1011:
  3794  0791  2FD3               	goto	l1467
  3795  0792                     u1010:
  3796  0792                     l1449:
  3797  0792  01B4               	clrf	___aldiv@counter
  3798  0793  0AB4               	incf	___aldiv@counter,f
  3799  0794  2FA0               	goto	l1453
  3800  0795                     l1451:
  3801  0795  3001               	movlw	1
  3802  0796                     u1025:
  3803  0796  35F0               	lslf	___aldiv@divisor,f
  3804  0797  0DF1               	rlf	___aldiv@divisor+1,f
  3805  0798  0DF2               	rlf	___aldiv@divisor+2,f
  3806  0799  0DF3               	rlf	___aldiv@divisor+3,f
  3807  079A  0B89               	decfsz	9,f
  3808  079B  2F96               	goto	u1025
  3809  079C  3001               	movlw	1
  3810  079D  00F8               	movwf	??___aldiv
  3811  079E  0878               	movf	??___aldiv,w
  3812  079F  07B4               	addwf	___aldiv@counter,f
  3813  07A0                     l1453:
  3814  07A0  1FF3               	btfss	___aldiv@divisor+3,7
  3815  07A1  2FA3               	goto	u1031
  3816  07A2  2FA4               	goto	u1030
  3817  07A3                     u1031:
  3818  07A3  2F95               	goto	l1451
  3819  07A4                     u1030:
  3820  07A4                     l1455:
  3821  07A4  3001               	movlw	1
  3822  07A5                     u1045:
  3823  07A5  35B6               	lslf	___aldiv@quotient,f
  3824  07A6  0DB7               	rlf	___aldiv@quotient+1,f
  3825  07A7  0DB8               	rlf	___aldiv@quotient+2,f
  3826  07A8  0DB9               	rlf	___aldiv@quotient+3,f
  3827  07A9  0B89               	decfsz	9,f
  3828  07AA  2FA5               	goto	u1045
  3829  07AB                     l1457:
  3830  07AB  0873               	movf	___aldiv@divisor+3,w
  3831  07AC  0277               	subwf	___aldiv@dividend+3,w
  3832  07AD  1D03               	skipz
  3833  07AE  2FB9               	goto	u1055
  3834  07AF  0872               	movf	___aldiv@divisor+2,w
  3835  07B0  0276               	subwf	___aldiv@dividend+2,w
  3836  07B1  1D03               	skipz
  3837  07B2  2FB9               	goto	u1055
  3838  07B3  0871               	movf	___aldiv@divisor+1,w
  3839  07B4  0275               	subwf	___aldiv@dividend+1,w
  3840  07B5  1D03               	skipz
  3841  07B6  2FB9               	goto	u1055
  3842  07B7  0870               	movf	___aldiv@divisor,w
  3843  07B8  0274               	subwf	___aldiv@dividend,w
  3844  07B9                     u1055:
  3845  07B9  1C03               	skipc
  3846  07BA  2FBC               	goto	u1051
  3847  07BB  2FBD               	goto	u1050
  3848  07BC                     u1051:
  3849  07BC  2FC6               	goto	l1463
  3850  07BD                     u1050:
  3851  07BD                     l1459:
  3852  07BD  0870               	movf	___aldiv@divisor,w
  3853  07BE  02F4               	subwf	___aldiv@dividend,f
  3854  07BF  0871               	movf	___aldiv@divisor+1,w
  3855  07C0  3BF5               	subwfb	___aldiv@dividend+1,f
  3856  07C1  0872               	movf	___aldiv@divisor+2,w
  3857  07C2  3BF6               	subwfb	___aldiv@dividend+2,f
  3858  07C3  0873               	movf	___aldiv@divisor+3,w
  3859  07C4  3BF7               	subwfb	___aldiv@dividend+3,f
  3860  07C5                     l1461:
  3861  07C5  1436               	bsf	___aldiv@quotient,0
  3862  07C6                     l1463:
  3863  07C6  3001               	movlw	1
  3864  07C7                     u1065:
  3865  07C7  36F3               	lsrf	___aldiv@divisor+3,f
  3866  07C8  0CF2               	rrf	___aldiv@divisor+2,f
  3867  07C9  0CF1               	rrf	___aldiv@divisor+1,f
  3868  07CA  0CF0               	rrf	___aldiv@divisor,f
  3869  07CB  0B89               	decfsz	9,f
  3870  07CC  2FC7               	goto	u1065
  3871  07CD                     l1465:
  3872  07CD  3001               	movlw	1
  3873  07CE  02B4               	subwf	___aldiv@counter,f
  3874  07CF  1D03               	btfss	3,2
  3875  07D0  2FD2               	goto	u1071
  3876  07D1  2FD3               	goto	u1070
  3877  07D2                     u1071:
  3878  07D2  2FA4               	goto	l1455
  3879  07D3                     u1070:
  3880  07D3                     l1467:
  3881  07D3  0835               	movf	___aldiv@sign,w
  3882  07D4  1903               	btfsc	3,2
  3883  07D5  2FD7               	goto	u1081
  3884  07D6  2FD8               	goto	u1080
  3885  07D7                     u1081:
  3886  07D7  2FE3               	goto	l1471
  3887  07D8                     u1080:
  3888  07D8                     l1469:
  3889  07D8  09B6               	comf	___aldiv@quotient,f
  3890  07D9  09B7               	comf	___aldiv@quotient+1,f
  3891  07DA  09B8               	comf	___aldiv@quotient+2,f
  3892  07DB  09B9               	comf	___aldiv@quotient+3,f
  3893  07DC  0AB6               	incf	___aldiv@quotient,f
  3894  07DD  1903               	skipnz
  3895  07DE  0AB7               	incf	___aldiv@quotient+1,f
  3896  07DF  1903               	skipnz
  3897  07E0  0AB8               	incf	___aldiv@quotient+2,f
  3898  07E1  1903               	skipnz
  3899  07E2  0AB9               	incf	___aldiv@quotient+3,f
  3900  07E3                     l1471:
  3901  07E3  0839               	movf	___aldiv@quotient+3,w
  3902  07E4  00F3               	movwf	?___aldiv+3
  3903  07E5  0838               	movf	___aldiv@quotient+2,w
  3904  07E6  00F2               	movwf	?___aldiv+2
  3905  07E7  0837               	movf	___aldiv@quotient+1,w
  3906  07E8  00F1               	movwf	?___aldiv+1
  3907  07E9  0836               	movf	___aldiv@quotient,w
  3908  07EA  00F0               	movwf	?___aldiv
  3909  07EB                     l470:
  3910  07EB  0008               	return
  3911  07EC                     __end_of___aldiv:
  3912                           
  3913                           	psect	text23
  3914  038D                     __ptext23:	
  3915 ;; *************** function _SYSTEM_Initialize *****************
  3916 ;; Defined at:
  3917 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3931 ;;      Params:         0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    1
  3938 ;; This function calls:
  3939 ;;		_OSCILLATOR_Initialize
  3940 ;;		_PIN_MANAGER_Initialize
  3941 ;;		_WDT_Initialize
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _SYSTEM_Initialize
  3949  038D                     _SYSTEM_Initialize:
  3950  038D                     l1475:	
  3951                           ;incstack = 0
  3952                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3953                           
  3954                           
  3955                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3956  038D  3184  241D  3183   	fcall	_PIN_MANAGER_Initialize
  3957                           
  3958                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3959  0390  3183  236C  3183   	fcall	_OSCILLATOR_Initialize
  3960                           
  3961                           ;mcc.c: 55: WDT_Initialize();
  3962  0393  3183  2362  3183   	fcall	_WDT_Initialize
  3963  0396                     l45:
  3964  0396  0008               	return
  3965  0397                     __end_of_SYSTEM_Initialize:
  3966                           
  3967                           	psect	text24
  3968  0362                     __ptext24:	
  3969 ;; *************** function _WDT_Initialize *****************
  3970 ;; Defined at:
  3971 ;;		line 68 in file "mcc_generated_files/mcc.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3985 ;;      Params:         0       0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_SYSTEM_Initialize
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _WDT_Initialize
  4000  0362                     _WDT_Initialize:
  4001  0362                     l1361:	
  4002                           ;incstack = 0
  4003                           ; Regs used in _WDT_Initialize: [wreg]
  4004                           
  4005                           
  4006                           ;mcc.c: 71: WDTCON = 0x16;
  4007  0362  3016               	movlw	22
  4008  0363  0021               	movlb	1	; select bank1
  4009  0364  0097               	movwf	23	;volatile
  4010  0365                     l51:
  4011  0365  0008               	return
  4012  0366                     __end_of_WDT_Initialize:
  4013                           
  4014                           	psect	text25
  4015  041D                     __ptext25:	
  4016 ;; *************** function _PIN_MANAGER_Initialize *****************
  4017 ;; Defined at:
  4018 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4032 ;;      Params:         0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_SYSTEM_Initialize
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _PIN_MANAGER_Initialize
  4047  041D                     _PIN_MANAGER_Initialize:
  4048  041D                     l1343:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4051                           
  4052                           
  4053                           ;pin_manager.c: 60: LATA = 0x00;
  4054  041D  0022               	movlb	2	; select bank2
  4055  041E  018C               	clrf	12	;volatile
  4056                           
  4057                           ;pin_manager.c: 61: LATB = 0x00;
  4058  041F  018D               	clrf	13	;volatile
  4059  0420                     l1345:
  4060                           
  4061                           ;pin_manager.c: 66: TRISA = 0xFF;
  4062  0420  30FF               	movlw	255
  4063  0421  0021               	movlb	1	; select bank1
  4064  0422  008C               	movwf	12	;volatile
  4065  0423                     l1347:
  4066                           
  4067                           ;pin_manager.c: 67: TRISB = 0xFF;
  4068  0423  30FF               	movlw	255
  4069  0424  008D               	movwf	13	;volatile
  4070  0425                     l1349:
  4071                           
  4072                           ;pin_manager.c: 72: ANSELB = 0xFE;
  4073  0425  30FE               	movlw	254
  4074  0426  0023               	movlb	3	; select bank3
  4075  0427  008D               	movwf	13	;volatile
  4076  0428                     l1351:
  4077                           
  4078                           ;pin_manager.c: 73: ANSELA = 0x16;
  4079  0428  3016               	movlw	22
  4080  0429  008C               	movwf	12	;volatile
  4081                           
  4082                           ;pin_manager.c: 78: WPUB = 0x00;
  4083  042A  0024               	movlb	4	; select bank4
  4084  042B  018D               	clrf	13	;volatile
  4085                           
  4086                           ;pin_manager.c: 79: WPUA = 0x00;
  4087  042C  018C               	clrf	12	;volatile
  4088  042D                     l1353:
  4089                           
  4090                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  4091  042D  0021               	movlb	1	; select bank1
  4092  042E  1795               	bsf	21,7	;volatile
  4093                           
  4094                           ;pin_manager.c: 86: APFCON0 = 0x00;
  4095  042F  0022               	movlb	2	; select bank2
  4096  0430  019D               	clrf	29	;volatile
  4097                           
  4098                           ;pin_manager.c: 87: APFCON1 = 0x00;
  4099  0431  019E               	clrf	30	;volatile
  4100  0432                     l25:
  4101  0432  0008               	return
  4102  0433                     __end_of_PIN_MANAGER_Initialize:
  4103                           
  4104                           	psect	text26
  4105  036C                     __ptext26:	
  4106 ;; *************** function _OSCILLATOR_Initialize *****************
  4107 ;; Defined at:
  4108 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4122 ;;      Params:         0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0
  4125 ;;      Totals:         0       0       0       0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_SYSTEM_Initialize
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _OSCILLATOR_Initialize
  4137  036C                     _OSCILLATOR_Initialize:
  4138  036C                     l1355:	
  4139                           ;incstack = 0
  4140                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4141                           
  4142                           
  4143                           ;mcc.c: 61: OSCCON = 0x78;
  4144  036C  3078               	movlw	120
  4145  036D  0021               	movlb	1	; select bank1
  4146  036E  0099               	movwf	25	;volatile
  4147  036F                     l1357:
  4148                           
  4149                           ;mcc.c: 63: OSCTUNE = 0x00;
  4150  036F  0198               	clrf	24	;volatile
  4151  0370                     l1359:
  4152                           
  4153                           ;mcc.c: 65: BORCON = 0x00;
  4154  0370  0022               	movlb	2	; select bank2
  4155  0371  0196               	clrf	22	;volatile
  4156  0372                     l48:
  4157  0372  0008               	return
  4158  0373                     __end_of_OSCILLATOR_Initialize:
  4159  007E                     btemp	set	126	;btemp
  4160  007E                     wtemp0	set	126
  4161                           
  4162                           	psect	config
  4163                           
  4164                           ;Config register CONFIG1 @ 0x8007
  4165                           ;	Oscillator Selection
  4166                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4167                           ;	Watchdog Timer Enable
  4168                           ;	WDTE = OFF, WDT disabled
  4169                           ;	Power-up Timer Enable
  4170                           ;	PWRTE = OFF, PWRT disabled
  4171                           ;	MCLR Pin Function Select
  4172                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4173                           ;	Flash Program Memory Code Protection
  4174                           ;	CP = OFF, Program memory code protection is disabled
  4175                           ;	Data Memory Code Protection
  4176                           ;	CPD = OFF, Data memory code protection is disabled
  4177                           ;	Brown-out Reset Enable
  4178                           ;	BOREN = ON, Brown-out Reset enabled
  4179                           ;	Clock Out Enable
  4180                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4181                           ;	Internal/External Switchover
  4182                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4183                           ;	Fail-Safe Clock Monitor Enable
  4184                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4185  8007                     	org	32775
  4186  8007  3FE4               	dw	16356
  4187                           
  4188                           ;Config register CONFIG2 @ 0x8008
  4189                           ;	Flash Memory Self-Write Protection
  4190                           ;	WRT = OFF, Write protection off
  4191                           ;	PLL Enable
  4192                           ;	PLLEN = OFF, 4x PLL disabled
  4193                           ;	Stack Overflow/Underflow Reset Enable
  4194                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4195                           ;	Brown-out Reset Voltage Selection
  4196                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4197                           ;	Low-Voltage Programming Enable
  4198                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4199  8008                     	org	32776
  4200  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     15      39
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> rtc_display@segments(BANK0[4]), clear@data(COMMON[4]), 


Critical Paths under _main in COMMON

    _main->_rtc_display
    _main->_write_date
    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _rtc_display->_set_segments
    _set_segments->_write_byte
    _bcd_2_decimal->___bmul
    _read_date->_i2c_read
    _i2c_init->___aldiv

Critical Paths under _main in BANK0

    _main->_rtc_display
    _write_date->_decimal_2_bcd
    _i2c_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5305
                                              7 BANK0      8     8      0
                  _SYSTEM_Initialize
                           _i2c_init
                          _read_date
                        _rtc_display
                     _set_brigthness
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1739
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0    1552
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                         10    10      0    2631
                                             10 COMMON     3     3      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                      _bcd_2_decimal
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     625
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_byte
 ---------------------------------------------------------------------------------
 (3) _write_byte                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (4) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     232
                                              3 COMMON     2     2      0
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_repeated_start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             3     3      0     474
                                              9 COMMON     3     3      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _i2c_init
     ___aldiv
   _read_date
     _i2c_read
     _i2c_repeated_start
     _i2c_start
     _i2c_stop
     _i2c_write
   _rtc_display
     ___awdiv
     ___awmod
     _bcd_2_decimal
       ___bmul
     _encode_digit
     _set_segments
       _start
       _stop
       _write_byte
         _bit_delay
   _set_brigthness
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
     _i2c_stop
     _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      35       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      27       6       48.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      35      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Oct 14 03:09:35 2020

                 ___bmul@product 0072                               l25 0432                               l51 0365  
                             l45 0396                               l48 0372                               l90 0361  
                             l93 037B                               l95 037D                               l97 037E  
                             l99 0380                     ___awdiv@sign 0076            __end_of_decimal_2_bcd 0486  
                            l101 0381                              l110 0386                              l103 0382  
                            l120 038C                              l112 0387                              l201 03B1  
                            l105 0383                              l210 03A3                              l114 0389  
                            l130 053A                              l203 03BC                              l204 03BD  
                            l116 038A                              l108 0384                              l221 0492  
                            l213 03BF                              l141 054E                              l133 053C  
                            l222 0493                              l118 038B                              l207 0397  
                            l231 03F3                              l151 0567                              l143 054F  
                            l135 053D                              l127 0534                              l216 03CC  
                            l240 0618                              l152 056A                              l128 0536  
                            l225 04A1                              l209 03A2                              l137 054C  
                            l146 055E                              l234 0485                              l219 0487  
                            l171 037A                              l139 054D                              l163 04F0  
                            l228 04B6                              l148 0560                              l421 041C  
                            l245 075B                              l157 03DF                              l237 06D7  
                            l192 0457                              l195 03A4                              l460 076F  
                            l197 03AF                              l470 07EB                              l198 03B0  
                            l561 05BD                              l548 0677                              u600 041B  
                            u601 041A                              u610 061E                              u611 061D  
                            u700 066E                              u620 0629                              u701 066D  
                            u621 0628                              u630 063A                              u710 0570  
                            u631 0639                              u711 056F                              u720 057B  
                            u560 053A                              u800 04E1                              u721 057A  
                            u561 0539                              u801 04E0                              u810 03A9  
                            u650 064A                              u730 0586                              u570 054C  
                            u811 03A8                              u651 0649                              u731 0585  
                            u571 054B                              u900 0492                              u820 03AF  
                            u580 055E                              u901 0491                              u821 03AE  
                            u645 063E                              u581 055D                              u910 0497  
                            u830 03B6                              u670 0659                              u750 0596  
                            u590 040E                              u911 0496                              u831 03B5  
                            u671 0658                              u751 0595                              u591 040D  
                            u920 049D                              u840 03BC                              u760 05A0  
                            u921 049C                              u841 03BB                              u665 064B  
                            u761 059F                              u745 058A                              u930 04A5  
                            u850 039C                              u690 0669                              u931 04A4  
                            u851 039B                              u691 0668                              u675 0655  
                            u940 04AB                              u860 03A2                              u780 05AF  
                            u941 04AA                              u861 03A1                              u685 065F  
                            u781 05AE                              u765 059C                              u950 04B2  
                            u870 03C4                              u790 05B4                              u951 04AF  
                            u871 03C3                              u791 05B3                              u775 05A5  
                            u880 03CA                              u881 03C9                              u890 048C  
                            u891 048B                              u964 04B4                              u990 0762  
                            u991 0761                              u975 03EB                              u985 047F  
                   ___awmod@sign 0076                   rtc_display@min 0038                   rtc_display@sec 0039  
                            wreg 0009              bcd_2_decimal@number 0077                   ?_bcd_2_decimal 0070  
                 ??_encode_digit 0070                             l1301 0673                             l1221 052D  
                           l1311 0575                             l1231 053E                             l1223 0531  
                           l1401 039C                             l1321 0589                             l1313 0577  
                           l1305 056B                             l1241 0562                             l1233 0546  
                           l1225 0533                             l1411 048C                             l1403 03BF  
                           l1331 05A4                             l1323 058E                             l1315 057B  
                           l1307 056C                             l1251 040E                             l1243 0565  
                           l1235 0551                             l1421 04B4                             l1413 0497  
                           l1405 03C4                             l1261 0619                             l1333 05A9  
                           l1325 0592                             l1317 0580                             l1309 0570  
                           l1253 0412                             l1237 0554                             l1501 03DA  
                           l1351 0428                             l1343 041D                             l1423 04B5  
                           l1415 049D                             l1407 03CA                             l1511 05F2  
                           l1503 05BF                             l1271 0629                             l1263 061A  
                           l1327 0596                             l1319 0586                             l1335 05AF  
                           l1255 0414                             l1247 0409                             l1239 0559  
                           l1431 0459                             l1353 042D                             l1345 0420  
                           l1361 0362                             l1441 0773                             l1417 04A5  
                           l1409 0487                             l1513 0615                             l1505 05D1  
                           l1281 063D                             l1273 062E                             l1265 061E  
                           l1337 05B4                             l1329 05A0                             l1257 041B  
                           l1249 040A                             l1521 06FA                             l1355 036C  
                           l1347 0423                             l1451 0795                             l1443 077E  
                           l1435 075C                             l1419 04AB                             l1507 05DC  
                           l1291 065D                             l1283 0642                             l1275 0632  
                           l1267 0623                             l1339 05B9                             l1427 03E1  
                           l1371 04C5                             l1363 04B8                             l1523 0710  
                           l1515 06DA                             l1531 04F1                             l1357 036F  
                           l1349 0425                             l1461 07C5                             l1453 07A0  
                           l1445 0782                             l1437 075E                             l1509 05E7  
                           l1293 065E                             l1285 0646                             l1277 0634  
                           l1269 0625                             l1381 04E1                             l1373 04CB  
                           l1365 04BB                             l1525 0726                             l1517 06E2  
                           l1541 050E                             l1533 04F4                             l1359 0370  
                           l1471 07E3                             l1463 07C6                             l1455 07A4  
                           l1447 078A                             l1439 0762                             l1391 03A4  
                           l1295 0663                             l1287 064A                             l1279 063A  
                           l1383 04E7                             l1375 04CD                             l1367 04BF  
                           l1527 073C                             l1519 06EE                             l1543 0514  
                           l1535 04F7                             l1465 07CD                             l1457 07AB  
                           l1449 0792                             l1481 0456                             l1393 03A9  
                           l1289 0659                             l1297 0669                             l1385 04ED  
                           l1377 04D7                             l1369 04C2                             l1529 0752  
                           l1545 0518                             l1537 04FB                             l1475 038D  
                           l1459 07BD                             l1467 07D3                             l1395 03B1  
                           l1299 066E                             l1387 0374                             l1379 04DB  
                           l1491 06A5                             l1483 0679                             l1547 051C  
                           l1539 050A                             l1469 07D8                             l1477 0434  
                           l1397 03B6                             l1493 06C8                             l1485 0684  
                           l1479 0437                             l1399 0397                             l1495 06CB  
                           l1487 068F                             l1497 03CE                             l1489 069A  
                           l1499 03D3                             u1000 0773                             u1001 0772  
                           u1010 0792                             u1011 0791                             u1100 0506  
                           u1030 07A4                             u1031 07A3                             u1025 0796  
                           u1050 07BD                             u1051 07BC                             u1045 07A5  
                           u1117 0522                             u1070 07D3                             u1071 07D2  
                           u1055 07B9                             u1127 06D0                             u1080 07D8  
                           u1081 07D7                             u1065 07C7                             u1090 03D3  
                           u1091 03D2                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 04F1  
                  write_byte@ack 0072                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             _stop 0384                  rtc_display@date 003A  
                           start 0002                ___bmul@multiplier 0073                   write_date@date 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0373                  __end_of___aldiv 07EC  
                          ?_main 0070                  __end_of___awdiv 0678                  __end_of___awmod 05BE  
                          ?_stop 0070                      i2c_read@ack 0071                  ___awdiv@divisor 0070  
                ___awdiv@counter 0075                            _TRISA 008C                            _TRISB 008D  
               rtc_display@F2405 0030                   _WDT_Initialize 0362                   write_byte@data 0073  
                          _start 037B                            status 0003                            wtemp0 007E  
                __initialization 07EC                     __end_of_main 052C                     __end_of_stop 038D  
               __end_of_i2c_init 0458                 __end_of_i2c_read 04B7                 __end_of_i2c_stop 03BE  
                         ??_main 003B                           ??_stop 0070                  ??_bcd_2_decimal 0074  
         __end_of_WDT_Initialize 0366                  set_segments@pos 0076                 ___awdiv@dividend 0072  
                         _ANSELA 018C                           _ANSELB 018D                           ?_start 0070  
                         _BORCON 0116                     i2c_read@data 0072                           _OSCCON 0099  
                         _WDTCON 0097                           _SSPADD 0212                           _SSPCON 0215  
                         _SSPBUF 0211               __size_of_i2c_start 000D               __size_of_i2c_write 000F  
                         ___bmul 0408                        ??___aldiv 0078                        ??___awdiv 0074  
                      ??___awmod 0074             __end_of_encode_digit 037B                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075               _i2c_repeated_start 0397  
                ?_WDT_Initialize 0070                     ?_rtc_display 0070          __size_of_set_brigthness 0013  
            ?_i2c_repeated_start 0070                _SYSTEM_Initialize 038D          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070              ___bmul@multiplicand 0070         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 03F4              ??_SYSTEM_Initialize 0070  
           ??_i2c_repeated_start 0070                    __end_of_start 0384               __size_of_bit_delay 0001  
              __end_of_i2c_start 03B1                __end_of_i2c_write 03CD                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 0397                          ??_start 0070                       __pbssBANK0 0043  
                      ?_i2c_init 0070                        ?_i2c_read 0070                        ?_i2c_stop 0070  
             __size_of_read_date 005B                       __pmaintext 04F1                          ?___bmul 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0075  
                        _OSCTUNE 0098                          _SSPCON2 0216                          _SSPSTAT 0214  
                     ??_i2c_init 0079                       ??_i2c_read 0070                       ??_i2c_stop 0070  
              __end_of_bit_delay 0362           __size_of_decimal_2_bcd 002E            __size_of_encode_digit 0008  
                        ___aldiv 075C                  __size_of___bmul 0015                          ___awdiv 0619  
                        ___awmod 056B                       clear@F2384 0043                    ?_set_segments 0075  
                        __ptext1 0678                          __ptext2 0458                          __ptext3 03CD  
                        __ptext4 06D8                          __ptext5 04B7                          __ptext6 052C  
                        __ptext7 0361                          __ptext8 0384                          __ptext9 037B  
          _OSCILLATOR_Initialize 036C                __end_of_read_date 0619                 ___awmod@dividend 0072  
                        _segdata 0020                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 03CD       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
           __size_of_rtc_display 0084                     _encode_digit 0373                          init_ram 0366  
                        initloop 0367             set_segments@segments 0078                 ___aldiv@quotient 0036  
                 ??_set_segments 0077                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                   _m_brightness 007D                    _decimal_2_bcd 0458                    i2c_write@data 0070  
         __end_of_set_brigthness 03E0                        _TRISAbits 008C            __end_of_bcd_2_decimal 03F4  
                 __end_of___bmul 041D                       _write_date 0678                       _write_byte 052C  
                 ?_decimal_2_bcd 0070           ?_OSCILLATOR_Initialize 0070              start_initialization 07EC  
                ?_set_brigthness 0070  __size_of_PIN_MANAGER_Initialize 0016                        _i2c_start 03A4  
                      _i2c_write 03BE                __size_of_i2c_init 0025                __size_of_i2c_read 0031  
              __size_of_i2c_stop 000D                         ??___bmul 0071                      __pdataBANK0 0020  
    __size_of_i2c_repeated_start 000D                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 0034                       ?_i2c_start 0070                       ?_i2c_write 0070  
           __end_of_set_segments 04F1                 set_brigthness@on 0070           _PIN_MANAGER_Initialize 041D  
                      _bit_delay 0361                         ?___aldiv 0070                         ?___awdiv 0070  
                       ?___awmod 0070                  ??_decimal_2_bcd 0034                      ?_write_date 0070  
                    ?_write_byte 0070                        _read_date 05BE                   __size_of_start 0009  
                ___aldiv@divisor 0070                  ___aldiv@counter 0034                         _LATAbits 010C  
                     ?_bit_delay 0070                        main@F2397 002A                encode_digit@digit 0070  
                    write_byte@b 0071                      write_byte@i 0074                    ??_rtc_display 007A  
                    ??_i2c_start 0070                      ??_i2c_write 0070                       ?_read_date 0070  
                       _i2c_init 0433                         _i2c_read 0486                         _i2c_stop 03B1  
            __size_of_write_date 0060              __size_of_write_byte 003F                    set_segments@k 0079  
        ??_OSCILLATOR_Initialize 0070                 __size_of___aldiv 0090                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 i2c_init@clk_freq 007B                 ??_set_brigthness 0071  
          __size_of_set_segments 003A                         __ptext10 0373                         __ptext11 03E0  
                       __ptext20 0486                         __ptext12 0408                         __ptext21 0433  
                       __ptext13 056B                         __ptext22 075C                         __ptext14 0619  
                       __ptext23 038D                         __ptext15 05BE                         __ptext24 0362  
                       __ptext16 03BE                         __ptext25 041D                         __ptext17 03B1  
                       __ptext26 036C                         __ptext18 03A4                         __ptext19 0397  
                   _SSP2CON2bits 021E              __end_of_rtc_display 075C                    __size_of_main 003B  
                  __size_of_stop 0009                      ??_bit_delay 0070           __size_of_bcd_2_decimal 0014  
                       main@date 003D                     _set_segments 04B7                    read_date@date 0074  
                    ??_read_date 0073          __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070  
     __end_of_i2c_repeated_start 03A4                     ??_write_date 007A                     ??_write_byte 0070  
            decimal_2_bcd@number 0079              rtc_display@segments 0034                     ___aldiv@sign 0035  
                    _rtc_display 06D8                    _bcd_2_decimal 03E0                    ?_encode_digit 0070  
 __end_of_PIN_MANAGER_Initialize 0433               __end_of_write_date 06D8               __end_of_write_byte 056B  
