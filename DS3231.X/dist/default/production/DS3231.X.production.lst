

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 15 15:12:50 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.30
    55                           ; Generated 26/08/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1827 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011D                     	;# 
   149  011E                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  029E                     	;# 
   213  029E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0318                     	;# 
   219  0318                     	;# 
   220  0319                     	;# 
   221  031A                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  039A                     	;# 
   226  039C                     	;# 
   227  039D                     	;# 
   228  039E                     	;# 
   229  039F                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0113                     	;# 
   298  0114                     	;# 
   299  0115                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  0118                     	;# 
   303  0119                     	;# 
   304  011A                     	;# 
   305  011B                     	;# 
   306  011D                     	;# 
   307  011E                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020C                     	;# 
   331  020D                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0219                     	;# 
   348  021A                     	;# 
   349  021B                     	;# 
   350  021C                     	;# 
   351  021D                     	;# 
   352  021E                     	;# 
   353  021F                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  029E                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  039A                     	;# 
   384  039C                     	;# 
   385  039D                     	;# 
   386  039E                     	;# 
   387  039F                     	;# 
   388  0415                     	;# 
   389  0416                     	;# 
   390  0417                     	;# 
   391  041C                     	;# 
   392  041D                     	;# 
   393  041E                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011E                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  020D                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0219                     	;# 
   506  021A                     	;# 
   507  021B                     	;# 
   508  021C                     	;# 
   509  021D                     	;# 
   510  021E                     	;# 
   511  021F                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  029B                     	;# 
   525  029C                     	;# 
   526  029C                     	;# 
   527  029D                     	;# 
   528  029E                     	;# 
   529  029E                     	;# 
   530  0311                     	;# 
   531  0311                     	;# 
   532  0312                     	;# 
   533  0313                     	;# 
   534  0318                     	;# 
   535  0318                     	;# 
   536  0319                     	;# 
   537  031A                     	;# 
   538  0394                     	;# 
   539  0395                     	;# 
   540  0396                     	;# 
   541  039A                     	;# 
   542  039C                     	;# 
   543  039D                     	;# 
   544  039E                     	;# 
   545  039F                     	;# 
   546  0415                     	;# 
   547  0416                     	;# 
   548  0417                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  0111                     	;# 
   612  0112                     	;# 
   613  0113                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011A                     	;# 
   621  011B                     	;# 
   622  011D                     	;# 
   623  011E                     	;# 
   624  018C                     	;# 
   625  018D                     	;# 
   626  0191                     	;# 
   627  0191                     	;# 
   628  0192                     	;# 
   629  0193                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0194                     	;# 
   633  0195                     	;# 
   634  0196                     	;# 
   635  0199                     	;# 
   636  019A                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019E                     	;# 
   645  019F                     	;# 
   646  020C                     	;# 
   647  020D                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  0219                     	;# 
   664  021A                     	;# 
   665  021B                     	;# 
   666  021C                     	;# 
   667  021D                     	;# 
   668  021E                     	;# 
   669  021F                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029C                     	;# 
   685  029D                     	;# 
   686  029E                     	;# 
   687  029E                     	;# 
   688  0311                     	;# 
   689  0311                     	;# 
   690  0312                     	;# 
   691  0313                     	;# 
   692  0318                     	;# 
   693  0318                     	;# 
   694  0319                     	;# 
   695  031A                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  039A                     	;# 
   700  039C                     	;# 
   701  039D                     	;# 
   702  039E                     	;# 
   703  039F                     	;# 
   704  0415                     	;# 
   705  0416                     	;# 
   706  0417                     	;# 
   707  041C                     	;# 
   708  041D                     	;# 
   709  041E                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001E                     	;# 
   749  001F                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0093                     	;# 
   755  0094                     	;# 
   756  0095                     	;# 
   757  0096                     	;# 
   758  0097                     	;# 
   759  0098                     	;# 
   760  0099                     	;# 
   761  009A                     	;# 
   762  009B                     	;# 
   763  009B                     	;# 
   764  009C                     	;# 
   765  009D                     	;# 
   766  009E                     	;# 
   767  010C                     	;# 
   768  010D                     	;# 
   769  0111                     	;# 
   770  0112                     	;# 
   771  0113                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  0118                     	;# 
   777  0119                     	;# 
   778  011A                     	;# 
   779  011B                     	;# 
   780  011D                     	;# 
   781  011E                     	;# 
   782  018C                     	;# 
   783  018D                     	;# 
   784  0191                     	;# 
   785  0191                     	;# 
   786  0192                     	;# 
   787  0193                     	;# 
   788  0193                     	;# 
   789  0193                     	;# 
   790  0194                     	;# 
   791  0195                     	;# 
   792  0196                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019C                     	;# 
   800  019C                     	;# 
   801  019D                     	;# 
   802  019E                     	;# 
   803  019F                     	;# 
   804  020C                     	;# 
   805  020D                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0216                     	;# 
   818  0216                     	;# 
   819  0217                     	;# 
   820  0217                     	;# 
   821  0219                     	;# 
   822  021A                     	;# 
   823  021B                     	;# 
   824  021C                     	;# 
   825  021D                     	;# 
   826  021E                     	;# 
   827  021F                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0294                     	;# 
   833  0295                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029C                     	;# 
   843  029D                     	;# 
   844  029E                     	;# 
   845  029E                     	;# 
   846  0311                     	;# 
   847  0311                     	;# 
   848  0312                     	;# 
   849  0313                     	;# 
   850  0318                     	;# 
   851  0318                     	;# 
   852  0319                     	;# 
   853  031A                     	;# 
   854  0394                     	;# 
   855  0395                     	;# 
   856  0396                     	;# 
   857  039A                     	;# 
   858  039C                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  0415                     	;# 
   863  0416                     	;# 
   864  0417                     	;# 
   865  041C                     	;# 
   866  041D                     	;# 
   867  041E                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000D                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0013                     	;# 
   896  0014                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0016                     	;# 
   900  0017                     	;# 
   901  0018                     	;# 
   902  0019                     	;# 
   903  001A                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001E                     	;# 
   907  001F                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  0091                     	;# 
   911  0092                     	;# 
   912  0093                     	;# 
   913  0094                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0098                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  0111                     	;# 
   928  0112                     	;# 
   929  0113                     	;# 
   930  0114                     	;# 
   931  0115                     	;# 
   932  0116                     	;# 
   933  0117                     	;# 
   934  0118                     	;# 
   935  0119                     	;# 
   936  011A                     	;# 
   937  011B                     	;# 
   938  011D                     	;# 
   939  011E                     	;# 
   940  018C                     	;# 
   941  018D                     	;# 
   942  0191                     	;# 
   943  0191                     	;# 
   944  0192                     	;# 
   945  0193                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0194                     	;# 
   949  0195                     	;# 
   950  0196                     	;# 
   951  0199                     	;# 
   952  019A                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019B                     	;# 
   957  019C                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  020D                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0219                     	;# 
   980  021A                     	;# 
   981  021B                     	;# 
   982  021C                     	;# 
   983  021D                     	;# 
   984  021E                     	;# 
   985  021F                     	;# 
   986  0291                     	;# 
   987  0291                     	;# 
   988  0292                     	;# 
   989  0293                     	;# 
   990  0294                     	;# 
   991  0295                     	;# 
   992  0295                     	;# 
   993  0296                     	;# 
   994  0298                     	;# 
   995  0298                     	;# 
   996  0299                     	;# 
   997  029A                     	;# 
   998  029B                     	;# 
   999  029C                     	;# 
  1000  029C                     	;# 
  1001  029D                     	;# 
  1002  029E                     	;# 
  1003  029E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0318                     	;# 
  1009  0318                     	;# 
  1010  0319                     	;# 
  1011  031A                     	;# 
  1012  0394                     	;# 
  1013  0395                     	;# 
  1014  0396                     	;# 
  1015  039A                     	;# 
  1016  039C                     	;# 
  1017  039D                     	;# 
  1018  039E                     	;# 
  1019  039F                     	;# 
  1020  0415                     	;# 
  1021  0416                     	;# 
  1022  0417                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  0FE4                     	;# 
  1027  0FE5                     	;# 
  1028  0FE6                     	;# 
  1029  0FE7                     	;# 
  1030  0FE8                     	;# 
  1031  0FE9                     	;# 
  1032  0FEA                     	;# 
  1033  0FEB                     	;# 
  1034  0FED                     	;# 
  1035  0FEE                     	;# 
  1036  0FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  0011                     	;# 
  1052  0012                     	;# 
  1053  0013                     	;# 
  1054  0014                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0016                     	;# 
  1058  0017                     	;# 
  1059  0018                     	;# 
  1060  0019                     	;# 
  1061  001A                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  001E                     	;# 
  1065  001F                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  0091                     	;# 
  1069  0092                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  010C                     	;# 
  1084  010D                     	;# 
  1085  0111                     	;# 
  1086  0112                     	;# 
  1087  0113                     	;# 
  1088  0114                     	;# 
  1089  0115                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  0118                     	;# 
  1093  0119                     	;# 
  1094  011A                     	;# 
  1095  011B                     	;# 
  1096  011D                     	;# 
  1097  011E                     	;# 
  1098  018C                     	;# 
  1099  018D                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019C                     	;# 
  1116  019C                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019F                     	;# 
  1120  020C                     	;# 
  1121  020D                     	;# 
  1122  0211                     	;# 
  1123  0211                     	;# 
  1124  0212                     	;# 
  1125  0212                     	;# 
  1126  0213                     	;# 
  1127  0213                     	;# 
  1128  0214                     	;# 
  1129  0214                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  0219                     	;# 
  1138  021A                     	;# 
  1139  021B                     	;# 
  1140  021C                     	;# 
  1141  021D                     	;# 
  1142  021E                     	;# 
  1143  021F                     	;# 
  1144  0291                     	;# 
  1145  0291                     	;# 
  1146  0292                     	;# 
  1147  0293                     	;# 
  1148  0294                     	;# 
  1149  0295                     	;# 
  1150  0295                     	;# 
  1151  0296                     	;# 
  1152  0298                     	;# 
  1153  0298                     	;# 
  1154  0299                     	;# 
  1155  029A                     	;# 
  1156  029B                     	;# 
  1157  029C                     	;# 
  1158  029C                     	;# 
  1159  029D                     	;# 
  1160  029E                     	;# 
  1161  029E                     	;# 
  1162  0311                     	;# 
  1163  0311                     	;# 
  1164  0312                     	;# 
  1165  0313                     	;# 
  1166  0318                     	;# 
  1167  0318                     	;# 
  1168  0319                     	;# 
  1169  031A                     	;# 
  1170  0394                     	;# 
  1171  0395                     	;# 
  1172  0396                     	;# 
  1173  039A                     	;# 
  1174  039C                     	;# 
  1175  039D                     	;# 
  1176  039E                     	;# 
  1177  039F                     	;# 
  1178  0415                     	;# 
  1179  0416                     	;# 
  1180  0417                     	;# 
  1181  041C                     	;# 
  1182  041D                     	;# 
  1183  041E                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  0011                     	;# 
  1210  0012                     	;# 
  1211  0013                     	;# 
  1212  0014                     	;# 
  1213  0015                     	;# 
  1214  0016                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001B                     	;# 
  1221  001C                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009B                     	;# 
  1238  009C                     	;# 
  1239  009D                     	;# 
  1240  009E                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  011A                     	;# 
  1253  011B                     	;# 
  1254  011D                     	;# 
  1255  011E                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  0191                     	;# 
  1259  0191                     	;# 
  1260  0192                     	;# 
  1261  0193                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0194                     	;# 
  1265  0195                     	;# 
  1266  0196                     	;# 
  1267  0199                     	;# 
  1268  019A                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019D                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  0211                     	;# 
  1281  0211                     	;# 
  1282  0212                     	;# 
  1283  0212                     	;# 
  1284  0213                     	;# 
  1285  0213                     	;# 
  1286  0214                     	;# 
  1287  0214                     	;# 
  1288  0215                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0219                     	;# 
  1296  021A                     	;# 
  1297  021B                     	;# 
  1298  021C                     	;# 
  1299  021D                     	;# 
  1300  021E                     	;# 
  1301  021F                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0294                     	;# 
  1307  0295                     	;# 
  1308  0295                     	;# 
  1309  0296                     	;# 
  1310  0298                     	;# 
  1311  0298                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  029B                     	;# 
  1315  029C                     	;# 
  1316  029C                     	;# 
  1317  029D                     	;# 
  1318  029E                     	;# 
  1319  029E                     	;# 
  1320  0311                     	;# 
  1321  0311                     	;# 
  1322  0312                     	;# 
  1323  0313                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  039A                     	;# 
  1332  039C                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0415                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353                           
  1354                           	psect	idataBANK0
  1355  0283                     __pidataBANK0:
  1356                           
  1357                           ;initializer for _segdata
  1358  0283  343F               	retlw	63
  1359  0284  3406               	retlw	6
  1360  0285  345B               	retlw	91
  1361  0286  344F               	retlw	79
  1362  0287  3466               	retlw	102
  1363  0288  346D               	retlw	109
  1364  0289  347D               	retlw	125
  1365  028A  3407               	retlw	7
  1366  028B  347F               	retlw	127
  1367  028C  346F               	retlw	111
  1368                           
  1369                           ;initializer for _m_segments
  1370  028D  340F               	retlw	15
  1371  028E  340F               	retlw	15
  1372  028F  340F               	retlw	15
  1373  0290  340F               	retlw	15
  1374                           
  1375                           ;initializer for _t_segments
  1376  0291  340F               	retlw	15
  1377  0292  340F               	retlw	15
  1378  0293  340F               	retlw	15
  1379  0294  340F               	retlw	15
  1380                           
  1381                           	psect	stringtext1
  1382  0800                     __pstringtext1:
  1383  0800                     _HOUR_4_MONEY:
  1384  0800  3454               	retlw	84
  1385  0801  3406               	retlw	6
  1386  0802                     __end_of_HOUR_4_MONEY:
  1387                           
  1388                           	psect	stringtext2
  1389  0802                     __pstringtext2:
  1390  0802                     _MIN_4_MONEY:
  1391  0802  341B               	retlw	27
  1392  0803  3400               	retlw	0
  1393  0804                     __end_of_MIN_4_MONEY:
  1394                           
  1395                           	psect	stringtext3
  1396  0804                     __pstringtext3:
  1397  0804                     _REGULAR_HOUR:
  1398  0804  3411               	retlw	17
  1399  0805  3400               	retlw	0
  1400  0806                     __end_of_REGULAR_HOUR:
  1401  000C                     _PORTAbits	set	12
  1402  008C                     _TRISAbits	set	140
  1403  0097                     _WDTCON	set	151
  1404  0098                     _OSCTUNE	set	152
  1405  0099                     _OSCCON	set	153
  1406  0095                     _OPTION_REGbits	set	149
  1407  008D                     _TRISB	set	141
  1408  008C                     _TRISA	set	140
  1409  046C                     _TRISB4	set	1132
  1410  046D                     _TRISB5	set	1133
  1411  046A                     _TRISB2	set	1130
  1412  010C                     _LATAbits	set	268
  1413  0116                     _BORCON	set	278
  1414  011E                     _APFCON1	set	286
  1415  011D                     _APFCON0	set	285
  1416  010D                     _LATB	set	269
  1417  010C                     _LATA	set	268
  1418  018C                     _ANSELA	set	396
  1419  018D                     _ANSELB	set	397
  1420  021D                     _SSP2CON1bits	set	541
  1421  021C                     _SSP2STATbits	set	540
  1422  0219                     _SSP2BUF	set	537
  1423  021E                     _SSP2CON2bits	set	542
  1424  021C                     _SSP2STAT	set	540
  1425  021E                     _SSP2CON2	set	542
  1426  021D                     _SSP2CON1	set	541
  1427  021A                     _SSP2ADD	set	538
  1428  020C                     _WPUA	set	524
  1429  020D                     _WPUB	set	525
  1430                           
  1431                           	psect	cinit
  1432  07EE                     start_initialization:	
  1433                           ; #config settings
  1434                           
  1435  07EE                     __initialization:
  1436                           
  1437                           ; Initialize objects allocated to BANK0
  1438  07EE  3083               	movlw	low __pidataBANK0
  1439  07EF  0084               	movwf	4
  1440  07F0  3082               	movlw	(high __pidataBANK0)| (0+128)
  1441  07F1  0085               	movwf	5
  1442  07F2  3020               	movlw	low __pdataBANK0
  1443  07F3  0086               	movwf	6
  1444  07F4  3000               	movlw	high __pdataBANK0
  1445  07F5  0087               	movwf	7
  1446  07F6  3012               	movlw	18
  1447  07F7  3182  2209  3187   	fcall	init_ram
  1448                           
  1449                           ; Clear objects allocated to COMMON
  1450  07FA  01FD               	clrf	__pbssCOMMON& (0+127)
  1451                           
  1452                           ; Clear objects allocated to BANK0
  1453  07FB  01C3               	clrf	__pbssBANK0& (0+127)
  1454  07FC  01C4               	clrf	(__pbssBANK0+1)& (0+127)
  1455  07FD                     end_of_initialization:	
  1456                           ;End of C runtime variable initialization code
  1457                           
  1458  07FD                     __end_of__initialization:
  1459  07FD  0020               	movlb	0
  1460  07FE  3187  2F56         	ljmp	_main	;jump to C main() function
  1461                           
  1462                           	psect	bssCOMMON
  1463  007D                     __pbssCOMMON:
  1464  007D                     _m_brightness:
  1465  007D                     	ds	1
  1466                           
  1467                           	psect	bssBANK0
  1468  0043                     __pbssBANK0:
  1469  0043                     _money:
  1470  0043                     	ds	2
  1471                           
  1472                           	psect	dataBANK0
  1473  0020                     __pdataBANK0:
  1474  0020                     _segdata:
  1475  0020                     	ds	10
  1476  002A                     _m_segments:
  1477  002A                     	ds	4
  1478  002E                     _t_segments:
  1479  002E                     	ds	4
  1480                           
  1481                           	psect	inittext
  1482  0209                     init_ram:
  1483  0209  00FE               	movwf	btemp
  1484  020A                     initloop:
  1485  020A  0012               	moviw fsr0++
  1486  020B  001E               	movwi fsr1++
  1487  020C  0BFE               	decfsz	btemp,f
  1488  020D  2A0A               	goto	initloop
  1489  020E  3400               	retlw	0
  1490                           
  1491                           	psect	cstackCOMMON
  1492  0070                     __pcstackCOMMON:
  1493  0070                     ?_OSCILLATOR_Initialize:
  1494  0070                     ??_OSCILLATOR_Initialize:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_WDT_Initialize:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ??_WDT_Initialize:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_write_date:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_set_brigthness:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_m_set_brigthness:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_read_date:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_money_display:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_rtc_display:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_encode_digit:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_encode_digit:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_PIN_MANAGER_Initialize:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ??_PIN_MANAGER_Initialize:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_SYSTEM_Initialize:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ??_SYSTEM_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_main:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_i2c_wait:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ??_i2c_wait:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_i2c_start:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ??_i2c_start:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_i2c_stop:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_i2c_stop:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_i2c_repeated_start:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ??_i2c_repeated_start:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_i2c_write:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ??_i2c_write:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_i2c_read:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??_i2c_read:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_bcd_2_decimal:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_decimal_2_bcd:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?__read:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_start:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ??_start:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_stop:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ??_stop:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_write_data:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ??_write_data:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_m_start:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ??_m_start:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_m_stop:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ??_m_stop:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_m_write_data:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ??_m_write_data:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ?___bmul:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?___wmul:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?___awdiv:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0070                     ?___awmod:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0070                     ?___lwdiv:	
  1636                           ; 2 bytes @ 0x0
  1637                           
  1638  0070                     ?___lwmod:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641  0070                     i2c_write@data:	
  1642                           ; 2 bytes @ 0x0
  1643                           
  1644  0070                     set_brigthness@on:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     encode_digit@digit:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     m_set_brigthness@on:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ___bmul@multiplicand:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ___wmul@multiplier:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ___awdiv@divisor:	
  1660                           ; 2 bytes @ 0x0
  1661                           
  1662  0070                     ___awmod@divisor:	
  1663                           ; 2 bytes @ 0x0
  1664                           
  1665  0070                     ___lwdiv@divisor:	
  1666                           ; 2 bytes @ 0x0
  1667                           
  1668  0070                     ___lwmod@divisor:	
  1669                           ; 2 bytes @ 0x0
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x0
  1673  0070                     	ds	1
  1674  0071                     ??_set_brigthness:
  1675  0071                     ??_m_set_brigthness:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0071                     ??___bmul:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0071                     i2c_read@ack:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684  0071                     write_data@b:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687  0071                     m_write_data@b:	
  1688                           ; 1 bytes @ 0x1
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x1
  1692  0071                     	ds	1
  1693  0072                     i2c_read@data:
  1694  0072                     write_data@ack:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0072                     set_brigthness@brightness:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0072                     m_write_data@ack:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0072                     m_set_brigthness@brightness:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0072                     ___bmul@product:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0072                     ___wmul@multiplicand:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712  0072                     ___awdiv@dividend:	
  1713                           ; 2 bytes @ 0x2
  1714                           
  1715  0072                     ___awmod@dividend:	
  1716                           ; 2 bytes @ 0x2
  1717                           
  1718  0072                     ___lwdiv@dividend:	
  1719                           ; 2 bytes @ 0x2
  1720                           
  1721  0072                     ___lwmod@dividend:	
  1722                           ; 2 bytes @ 0x2
  1723                           
  1724                           
  1725                           ; 2 bytes @ 0x2
  1726  0072                     	ds	1
  1727  0073                     write_data@data:
  1728  0073                     m_write_data@data:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0073                     ___bmul@multiplier:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734                           
  1735                           ; 1 bytes @ 0x3
  1736  0073                     	ds	1
  1737  0074                     ??_bcd_2_decimal:
  1738  0074                     ??___wmul:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0074                     ??___awdiv:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0074                     ??___awmod:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0074                     ??___lwdiv:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0074                     ??___lwmod:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0074                     write_data@i:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0074                     m_write_data@i:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0074                     ___wmul@product:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762                           
  1763                           ; 2 bytes @ 0x4
  1764  0074                     	ds	1
  1765  0075                     ?_set_segments:
  1766  0075                     ?_m_set_segments:	
  1767                           ; 1 bytes @ 0x5
  1768                           
  1769  0075                     set_segments@length:	
  1770                           ; 1 bytes @ 0x5
  1771                           
  1772  0075                     m_set_segments@length:	
  1773                           ; 1 bytes @ 0x5
  1774                           
  1775  0075                     ___awdiv@counter:	
  1776                           ; 1 bytes @ 0x5
  1777                           
  1778  0075                     ___awmod@counter:	
  1779                           ; 1 bytes @ 0x5
  1780                           
  1781  0075                     ___lwdiv@counter:	
  1782                           ; 1 bytes @ 0x5
  1783                           
  1784  0075                     ___lwmod@counter:	
  1785                           ; 1 bytes @ 0x5
  1786                           
  1787                           
  1788                           ; 1 bytes @ 0x5
  1789  0075                     	ds	1
  1790  0076                     ?_calc_money:
  1791  0076                     set_segments@pos:	
  1792                           ; 1 bytes @ 0x6
  1793                           
  1794  0076                     m_set_segments@pos:	
  1795                           ; 1 bytes @ 0x6
  1796                           
  1797  0076                     ___awdiv@sign:	
  1798                           ; 1 bytes @ 0x6
  1799                           
  1800  0076                     ___awmod@sign:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803  0076                     ___lwdiv@quotient:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806  0076                     calc_money@date:	
  1807                           ; 2 bytes @ 0x6
  1808                           
  1809                           
  1810                           ; 6 bytes @ 0x6
  1811  0076                     	ds	1
  1812  0077                     ??_set_segments:
  1813  0077                     ??_m_set_segments:	
  1814                           ; 1 bytes @ 0x7
  1815                           
  1816  0077                     bcd_2_decimal@number:	
  1817                           ; 1 bytes @ 0x7
  1818                           
  1819  0077                     ___awdiv@quotient:	
  1820                           ; 1 bytes @ 0x7
  1821                           
  1822                           
  1823                           ; 2 bytes @ 0x7
  1824  0077                     	ds	1
  1825  0078                     ??__read:
  1826  0078                     set_segments@segments:	
  1827                           ; 1 bytes @ 0x8
  1828                           
  1829  0078                     m_set_segments@segments:	
  1830                           ; 1 bytes @ 0x8
  1831                           
  1832                           
  1833                           ; 1 bytes @ 0x8
  1834  0078                     	ds	1
  1835  0079                     decimal_2_bcd@number:
  1836  0079                     __read@address:	
  1837                           ; 1 bytes @ 0x9
  1838                           
  1839  0079                     set_segments@k:	
  1840                           ; 1 bytes @ 0x9
  1841                           
  1842  0079                     m_set_segments@k:	
  1843                           ; 1 bytes @ 0x9
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x9
  1847  0079                     	ds	1
  1848  007A                     ??_write_date:
  1849  007A                     ??_money_display:	
  1850                           ; 1 bytes @ 0xA
  1851                           
  1852  007A                     ??_rtc_display:	
  1853                           ; 1 bytes @ 0xA
  1854                           
  1855  007A                     __read@data:	
  1856                           ; 1 bytes @ 0xA
  1857                           
  1858                           
  1859                           ; 1 bytes @ 0xA
  1860  007A                     	ds	1
  1861  007B                     ??_read_date:
  1862  007B                     money_display@value:	
  1863                           ; 1 bytes @ 0xB
  1864                           
  1865                           
  1866                           ; 2 bytes @ 0xB
  1867  007B                     	ds	1
  1868  007C                     write_date@date:
  1869  007C                     read_date@date:	
  1870                           ; 1 bytes @ 0xC
  1871                           
  1872                           
  1873                           ; 1 bytes @ 0xC
  1874  007C                     	ds	1
  1875                           
  1876                           	psect	cstackBANK0
  1877  0032                     __pcstackBANK0:
  1878  0032                     ??_calc_money:
  1879  0032                     ??_decimal_2_bcd:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882  0032                     rtc_display@date:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x0
  1887  0032                     	ds	1
  1888  0033                     rtc_display@hour:
  1889                           
  1890                           ; 1 bytes @ 0x1
  1891  0033                     	ds	1
  1892  0034                     rtc_display@min:
  1893                           
  1894                           ; 1 bytes @ 0x2
  1895  0034                     	ds	2
  1896  0036                     calc_money@hour:
  1897                           
  1898                           ; 2 bytes @ 0x4
  1899  0036                     	ds	2
  1900  0038                     calc_money@min:
  1901                           
  1902                           ; 2 bytes @ 0x6
  1903  0038                     	ds	2
  1904  003A                     ??_main:
  1905                           
  1906                           ; 1 bytes @ 0x8
  1907  003A                     	ds	3
  1908  003D                     main@date:
  1909                           
  1910                           ; 6 bytes @ 0xB
  1911  003D                     	ds	6
  1912                           
  1913                           	psect	maintext
  1914  0756                     __pmaintext:	
  1915 ;;
  1916 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1917 ;;
  1918 ;; *************** function _main *****************
  1919 ;; Defined at:
  1920 ;;		line 24 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  date            6   11[BANK0 ] struct Date
  1925 ;;  prev            1    0        unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : B1F/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1935 ;;      Params:         0       0       0       0       0       0
  1936 ;;      Locals:         0       7       0       0       0       0
  1937 ;;      Temps:          0       2       0       0       0       0
  1938 ;;      Totals:         0       9       0       0       0       0
  1939 ;;Total ram usage:        9 bytes
  1940 ;; Hardware stack levels required when called:    4
  1941 ;; This function calls:
  1942 ;;		_SYSTEM_Initialize
  1943 ;;		_calc_money
  1944 ;;		_m_set_brigthness
  1945 ;;		_money_display
  1946 ;;		_read_date
  1947 ;;		_rtc_display
  1948 ;;		_set_brigthness
  1949 ;;		_write_date
  1950 ;; This function is called by:
  1951 ;;		Startup code after reset
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _main
  1957  0756                     _main:
  1958  0756                     l2119:	
  1959                           ;incstack = 0
  1960                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1961                           
  1962                           
  1963                           ;main.c: 27: SYSTEM_Initialize();
  1964  0756  3182  2249  3187   	fcall	_SYSTEM_Initialize
  1965  0759                     l2121:
  1966                           
  1967                           ;main.c: 29: ANSELB = 0xCA;
  1968  0759  30CA               	movlw	202
  1969  075A  0023               	movlb	3	; select bank3
  1970  075B  008D               	movwf	13	;volatile
  1971  075C                     l2123:
  1972                           
  1973                           ;main.c: 31: TRISB2 = 1;
  1974  075C  0021               	movlb	1	; select bank1
  1975  075D  150D               	bsf	13,2	;volatile
  1976  075E                     l2125:
  1977                           
  1978                           ;main.c: 32: TRISB5 = 1;
  1979  075E  168D               	bsf	13,5	;volatile
  1980  075F                     l2127:
  1981                           
  1982                           ;main.c: 34: uint8_t prev;;main.c: 35: TRISB4 = 1;
  1983  075F  160D               	bsf	13,4	;volatile
  1984  0760                     l2129:
  1985                           
  1986                           ;main.c: 37: WPUB = 0x34;
  1987  0760  3034               	movlw	52
  1988  0761  0024               	movlb	4	; select bank4
  1989  0762  008D               	movwf	13	;volatile
  1990  0763                     l2131:
  1991                           
  1992                           ;main.c: 39: SSP2ADD = 0x13;
  1993  0763  3013               	movlw	19
  1994  0764  009A               	movwf	26	;volatile
  1995  0765                     l2133:
  1996                           
  1997                           ;main.c: 40: SSP2CON1 = 0x28;
  1998  0765  3028               	movlw	40
  1999  0766  009D               	movwf	29	;volatile
  2000  0767                     l2135:
  2001                           
  2002                           ;main.c: 41: SSP2CON2 = 0x0;
  2003  0767  019E               	clrf	30	;volatile
  2004  0768                     l2137:
  2005                           
  2006                           ;main.c: 42: SSP2STAT = 0;
  2007  0768  019C               	clrf	28	;volatile
  2008  0769                     l2139:
  2009                           
  2010                           ;main.c: 44: struct Date date;;main.c: 45: date.year = 20;
  2011  0769  3014               	movlw	20
  2012  076A  0020               	movlb	0	; select bank0
  2013  076B  00BA               	movwf	??_main
  2014  076C  083A               	movf	??_main,w
  2015  076D  00BD               	movwf	main@date
  2016  076E                     l2141:
  2017                           
  2018                           ;main.c: 46: date.month = 11;
  2019  076E  300B               	movlw	11
  2020  076F  00BA               	movwf	??_main
  2021  0770  083A               	movf	??_main,w
  2022  0771  00BE               	movwf	main@date+1
  2023  0772                     l2143:
  2024                           
  2025                           ;main.c: 47: date.day = 15;
  2026  0772  300F               	movlw	15
  2027  0773  00BA               	movwf	??_main
  2028  0774  083A               	movf	??_main,w
  2029  0775  00BF               	movwf	main@date+2
  2030  0776                     l2145:
  2031                           
  2032                           ;main.c: 48: date.hour = 8;
  2033  0776  3008               	movlw	8
  2034  0777  00BA               	movwf	??_main
  2035  0778  083A               	movf	??_main,w
  2036  0779  00C0               	movwf	main@date+3
  2037  077A                     l2147:
  2038                           
  2039                           ;main.c: 49: date.min = 40;
  2040  077A  3028               	movlw	40
  2041  077B  00BA               	movwf	??_main
  2042  077C  083A               	movf	??_main,w
  2043  077D  00C1               	movwf	main@date+4
  2044  077E                     l2149:
  2045                           
  2046                           ;main.c: 50: date.sec = 0;
  2047  077E  01C2               	clrf	main@date+5
  2048  077F                     l2151:
  2049                           
  2050                           ;main.c: 52: write_date(&date);
  2051  077F  303D               	movlw	(low (main@date| 0))& (0+255)
  2052  0780  3186  260B  3187   	fcall	_write_date
  2053  0783                     l2153:
  2054                           
  2055                           ;main.c: 54: set_brigthness(0x0f, 1);
  2056  0783  01F0               	clrf	set_brigthness@on
  2057  0784  0AF0               	incf	set_brigthness@on,f
  2058  0785  300F               	movlw	15
  2059  0786  3182  22A8  3187   	fcall	_set_brigthness
  2060  0789                     l2155:
  2061                           
  2062                           ;main.c: 55: m_set_brigthness(0x0f, 1);
  2063  0789  01F0               	clrf	m_set_brigthness@on
  2064  078A  0AF0               	incf	m_set_brigthness@on,f
  2065  078B  300F               	movlw	15
  2066  078C  3182  2295  3187   	fcall	_m_set_brigthness
  2067  078F                     l2157:
  2068                           
  2069                           ;main.c: 57: read_date(&date);
  2070  078F  303D               	movlw	(low (main@date| 0))& (0+255)
  2071  0790  3185  2513  3187   	fcall	_read_date
  2072  0793                     l2159:
  2073                           
  2074                           ;main.c: 58: calc_money(date);
  2075  0793  303D               	movlw	low main@date
  2076  0794  0086               	movwf	6
  2077  0795  3000               	movlw	high main@date
  2078  0796  0087               	movwf	7
  2079  0797  3076               	movlw	low calc_money@date
  2080  0798  0084               	movwf	4
  2081  0799  3000               	movlw	high calc_money@date
  2082  079A  0085               	movwf	5
  2083  079B  3F40               	moviw [0]fsr1
  2084  079C  3F80               	movwi [0]fsr0
  2085  079D  3F41               	moviw [1]fsr1
  2086  079E  3F81               	movwi [1]fsr0
  2087  079F  3F42               	moviw [2]fsr1
  2088  07A0  3F82               	movwi [2]fsr0
  2089  07A1  3F43               	moviw [3]fsr1
  2090  07A2  3F83               	movwi [3]fsr0
  2091  07A3  3F44               	moviw [4]fsr1
  2092  07A4  3F84               	movwi [4]fsr0
  2093  07A5  3F45               	moviw [5]fsr1
  2094  07A6  3F85               	movwi [5]fsr0
  2095  07A7  3184  24D1  3187   	fcall	_calc_money
  2096  07AA                     l2161:
  2097                           
  2098                           ;main.c: 59: money_display();
  2099  07AA  3186  26D9  3187   	fcall	_money_display
  2100  07AD                     l2163:
  2101  07AD                     l2165:
  2102                           
  2103                           ;main.c: 64: {;main.c: 65: read_date(&date);
  2104  07AD  303D               	movlw	(low (main@date| 0))& (0+255)
  2105  07AE  3185  2513  3187   	fcall	_read_date
  2106  07B1                     l2167:
  2107                           
  2108                           ;main.c: 66: _delay((unsigned long)((20)*(8000000/4000.0)));
  2109  07B1  3034               	movlw	52
  2110  07B2  0020               	movlb	0	; select bank0
  2111  07B3  00BA               	movwf	??_main
  2112  07B4  30F1               	movlw	241
  2113  07B5                     u1407:
  2114  07B5  0B89               	decfsz	9,f
  2115  07B6  2FB5               	goto	u1407
  2116  07B7  0BBA               	decfsz	??_main,f
  2117  07B8  2FB5               	goto	u1407
  2118  07B9  3200               	nop2
  2119  07BA                     l2169:
  2120                           
  2121                           ;main.c: 84: rtc_display(&date);
  2122  07BA  303D               	movlw	(low (main@date| 0))& (0+255)
  2123  07BB  3186  266B  3187   	fcall	_rtc_display
  2124  07BE                     l2171:
  2125                           
  2126                           ;main.c: 86: if(date.sec == 0){
  2127  07BE  0020               	movlb	0	; select bank0
  2128  07BF  0842               	movf	main@date+5,w
  2129  07C0  1D03               	btfss	3,2
  2130  07C1  2FC3               	goto	u1391
  2131  07C2  2FC4               	goto	u1390
  2132  07C3                     u1391:
  2133  07C3  2FDB               	goto	l2175
  2134  07C4                     u1390:
  2135  07C4                     l2173:
  2136                           
  2137                           ;main.c: 87: calc_money(date);
  2138  07C4  303D               	movlw	low main@date
  2139  07C5  0086               	movwf	6
  2140  07C6  3000               	movlw	high main@date
  2141  07C7  0087               	movwf	7
  2142  07C8  3076               	movlw	low calc_money@date
  2143  07C9  0084               	movwf	4
  2144  07CA  3000               	movlw	high calc_money@date
  2145  07CB  0085               	movwf	5
  2146  07CC  3F40               	moviw [0]fsr1
  2147  07CD  3F80               	movwi [0]fsr0
  2148  07CE  3F41               	moviw [1]fsr1
  2149  07CF  3F81               	movwi [1]fsr0
  2150  07D0  3F42               	moviw [2]fsr1
  2151  07D1  3F82               	movwi [2]fsr0
  2152  07D2  3F43               	moviw [3]fsr1
  2153  07D3  3F83               	movwi [3]fsr0
  2154  07D4  3F44               	moviw [4]fsr1
  2155  07D5  3F84               	movwi [4]fsr0
  2156  07D6  3F45               	moviw [5]fsr1
  2157  07D7  3F85               	movwi [5]fsr0
  2158  07D8  3184  24D1  3187   	fcall	_calc_money
  2159  07DB                     l2175:
  2160                           
  2161                           ;main.c: 88: };main.c: 90: money_display();
  2162  07DB  3186  26D9  3187   	fcall	_money_display
  2163  07DE                     l2177:
  2164                           
  2165                           ;main.c: 91: _delay((unsigned long)((100)*(8000000/4000.0)));
  2166  07DE  3002               	movlw	2
  2167  07DF  0020               	movlb	0	; select bank0
  2168  07E0  00BB               	movwf	??_main+1
  2169  07E1  3004               	movlw	4
  2170  07E2  00BA               	movwf	??_main
  2171  07E3  30BA               	movlw	186
  2172  07E4                     u1417:
  2173  07E4  0B89               	decfsz	9,f
  2174  07E5  2FE4               	goto	u1417
  2175  07E6  0BBA               	decfsz	??_main,f
  2176  07E7  2FE4               	goto	u1417
  2177  07E8  0BBB               	decfsz	??_main+1,f
  2178  07E9  2FE4               	goto	u1417
  2179  07EA  0000               	nop
  2180  07EB  2FAD               	goto	l2165
  2181  07EC  3180  2802         	ljmp	start
  2182  07EE                     __end_of_main:
  2183                           
  2184                           	psect	text1
  2185  060B                     __ptext1:	
  2186 ;; *************** function _write_date *****************
  2187 ;; Defined at:
  2188 ;;		line 36 in file "DS3231.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  date            1    wreg     PTR struct Date
  2191 ;;		 -> add_time@date(1), main@date(6), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  date            1   12[COMMON] PTR struct Date
  2194 ;;		 -> add_time@date(1), main@date(6), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2204 ;;      Params:         0       0       0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0       0
  2206 ;;      Temps:          2       0       0       0       0       0
  2207 ;;      Totals:         3       0       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		_decimal_2_bcd
  2213 ;;		_i2c_start
  2214 ;;		_i2c_stop
  2215 ;;		_i2c_write
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;;		_add_time
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _write_date
  2224  060B                     _write_date:
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2228                           ;write_date@date stored from wreg
  2229  060B  00FC               	movwf	write_date@date
  2230  060C                     l1827:
  2231                           
  2232                           ;DS3231.c: 37: i2c_start();
  2233  060C  3182  225D  3186   	fcall	_i2c_start
  2234                           
  2235                           ;DS3231.c: 38: i2c_write(0xD0);
  2236  060F  30D0               	movlw	208
  2237  0610  3182  2273  3186   	fcall	_i2c_write
  2238                           
  2239                           ;DS3231.c: 39: i2c_write(0x00);
  2240  0613  3000               	movlw	0
  2241  0614  3182  2273  3186   	fcall	_i2c_write
  2242  0617                     l1829:
  2243                           
  2244                           ;DS3231.c: 41: i2c_write(decimal_2_bcd(date->sec));
  2245  0617  087C               	movf	write_date@date,w
  2246  0618  3E05               	addlw	5
  2247  0619  0086               	movwf	6
  2248  061A  0187               	clrf	7
  2249  061B  0801               	movf	1,w
  2250  061C  3183  2353  3186   	fcall	_decimal_2_bcd
  2251  061F  3182  2273  3186   	fcall	_i2c_write
  2252  0622                     l1831:
  2253                           
  2254                           ;DS3231.c: 42: i2c_write(decimal_2_bcd(date->min));
  2255  0622  087C               	movf	write_date@date,w
  2256  0623  3E04               	addlw	4
  2257  0624  0086               	movwf	6
  2258  0625  0187               	clrf	7
  2259  0626  0801               	movf	1,w
  2260  0627  3183  2353  3186   	fcall	_decimal_2_bcd
  2261  062A  3182  2273  3186   	fcall	_i2c_write
  2262  062D                     l1833:
  2263                           
  2264                           ;DS3231.c: 43: i2c_write(decimal_2_bcd(date->hour));
  2265  062D  087C               	movf	write_date@date,w
  2266  062E  3E03               	addlw	3
  2267  062F  0086               	movwf	6
  2268  0630  0187               	clrf	7
  2269  0631  0801               	movf	1,w
  2270  0632  3183  2353  3186   	fcall	_decimal_2_bcd
  2271  0635  3182  2273  3186   	fcall	_i2c_write
  2272  0638                     l1835:
  2273                           
  2274                           ;DS3231.c: 44: i2c_write(1);
  2275  0638  3001               	movlw	1
  2276  0639  3182  2273  3186   	fcall	_i2c_write
  2277                           
  2278                           ;DS3231.c: 45: i2c_write(decimal_2_bcd(date->day));
  2279  063C  087C               	movf	write_date@date,w
  2280  063D  3E02               	addlw	2
  2281  063E  0086               	movwf	6
  2282  063F  0187               	clrf	7
  2283  0640  0801               	movf	1,w
  2284  0641  3183  2353  3186   	fcall	_decimal_2_bcd
  2285  0644  3182  2273  3186   	fcall	_i2c_write
  2286                           
  2287                           ;DS3231.c: 46: i2c_write(decimal_2_bcd(date->month));
  2288  0647  0A7C               	incf	write_date@date,w
  2289  0648  0086               	movwf	6
  2290  0649  0187               	clrf	7
  2291  064A  0801               	movf	1,w
  2292  064B  3183  2353  3186   	fcall	_decimal_2_bcd
  2293  064E  3182  2273  3186   	fcall	_i2c_write
  2294                           
  2295                           ;DS3231.c: 47: i2c_write(decimal_2_bcd(date->year));
  2296  0651  087C               	movf	write_date@date,w
  2297  0652  0086               	movwf	6
  2298  0653  0187               	clrf	7
  2299  0654  0801               	movf	1,w
  2300  0655  3183  2353  3186   	fcall	_decimal_2_bcd
  2301  0658  3182  2273  3186   	fcall	_i2c_write
  2302  065B                     l1837:
  2303                           
  2304                           ;DS3231.c: 48: i2c_stop();
  2305  065B  3182  2216  3186   	fcall	_i2c_stop
  2306  065E                     l1839:
  2307                           
  2308                           ;DS3231.c: 50: _delay((unsigned long)((200)*(8000000/4000.0)));
  2309  065E  3003               	movlw	3
  2310  065F  00FB               	movwf	??_write_date+1
  2311  0660  3008               	movlw	8
  2312  0661  00FA               	movwf	??_write_date
  2313  0662  3077               	movlw	119
  2314  0663                     u1427:
  2315  0663  0B89               	decfsz	9,f
  2316  0664  2E63               	goto	u1427
  2317  0665  0BFA               	decfsz	??_write_date,f
  2318  0666  2E63               	goto	u1427
  2319  0667  0BFB               	decfsz	??_write_date+1,f
  2320  0668  2E63               	goto	u1427
  2321  0669  0000               	nop
  2322  066A                     l204:
  2323  066A  0008               	return
  2324  066B                     __end_of_write_date:
  2325                           
  2326                           	psect	text2
  2327  0353                     __ptext2:	
  2328 ;; *************** function _decimal_2_bcd *****************
  2329 ;; Defined at:
  2330 ;;		line 28 in file "DS3231.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  number          1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  number          1    9[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2344 ;;      Params:         0       0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0       0
  2346 ;;      Temps:          0       7       0       0       0       0
  2347 ;;      Totals:         1       7       0       0       0       0
  2348 ;;Total ram usage:        8 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    1
  2351 ;; This function calls:
  2352 ;;		___awdiv
  2353 ;;		___awmod
  2354 ;; This function is called by:
  2355 ;;		_write_date
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _decimal_2_bcd
  2361  0353                     _decimal_2_bcd:
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  2365                           ;decimal_2_bcd@number stored from wreg
  2366  0353  00F9               	movwf	decimal_2_bcd@number
  2367  0354                     l1753:
  2368                           
  2369                           ;DS3231.c: 29: return (((number / 10) << 4) + (number % 10));
  2370  0354  300A               	movlw	10
  2371  0355  00F0               	movwf	___awmod@divisor
  2372  0356  3000               	movlw	0
  2373  0357  00F1               	movwf	___awmod@divisor+1
  2374  0358  0879               	movf	decimal_2_bcd@number,w
  2375  0359  0020               	movlb	0	; select bank0
  2376  035A  00B2               	movwf	??_decimal_2_bcd
  2377  035B  01B3               	clrf	??_decimal_2_bcd+1
  2378  035C  0832               	movf	??_decimal_2_bcd,w
  2379  035D  00F2               	movwf	___awmod@dividend
  2380  035E  0833               	movf	??_decimal_2_bcd+1,w
  2381  035F  00F3               	movwf	___awmod@dividend+1
  2382  0360  3185  2559  3183   	fcall	___awmod
  2383  0363  0870               	movf	?___awmod,w
  2384  0364  0020               	movlb	0	; select bank0
  2385  0365  00B4               	movwf	??_decimal_2_bcd+2
  2386  0366  0871               	movf	?___awmod+1,w
  2387  0367  00B5               	movwf	??_decimal_2_bcd+3
  2388  0368  300A               	movlw	10
  2389  0369  00F0               	movwf	___awdiv@divisor
  2390  036A  3000               	movlw	0
  2391  036B  00F1               	movwf	___awdiv@divisor+1
  2392  036C  0879               	movf	decimal_2_bcd@number,w
  2393  036D  00B6               	movwf	??_decimal_2_bcd+4
  2394  036E  01B7               	clrf	??_decimal_2_bcd+5
  2395  036F  0836               	movf	??_decimal_2_bcd+4,w
  2396  0370  00F2               	movwf	___awdiv@dividend
  2397  0371  0837               	movf	??_decimal_2_bcd+5,w
  2398  0372  00F3               	movwf	___awdiv@dividend+1
  2399  0373  3185  25AC  3183   	fcall	___awdiv
  2400  0376  0870               	movf	?___awdiv,w
  2401  0377  0020               	movlb	0	; select bank0
  2402  0378  00B8               	movwf	??_decimal_2_bcd+6
  2403  0379  3003               	movlw	3
  2404  037A                     u995:
  2405  037A  35B8               	lslf	??_decimal_2_bcd+6,f
  2406  037B  3EFF               	addlw	-1
  2407  037C  1D03               	skipz
  2408  037D  2B7A               	goto	u995
  2409  037E  3538               	lslf	??_decimal_2_bcd+6,w
  2410  037F  0734               	addwf	??_decimal_2_bcd+2,w
  2411  0380                     l201:
  2412  0380  0008               	return
  2413  0381                     __end_of_decimal_2_bcd:
  2414                           
  2415                           	psect	text3
  2416  02A8                     __ptext3:	
  2417 ;; *************** function _set_brigthness *****************
  2418 ;; Defined at:
  2419 ;;		line 74 in file "TM1637.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  brightness      1    wreg     unsigned char 
  2422 ;;  on              1    0[COMMON] unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  brightness      1    2[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2434 ;;      Params:         1       0       0       0       0       0
  2435 ;;      Locals:         1       0       0       0       0       0
  2436 ;;      Temps:          1       0       0       0       0       0
  2437 ;;      Totals:         3       0       0       0       0       0
  2438 ;;Total ram usage:        3 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _set_brigthness
  2449  02A8                     _set_brigthness:
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  2453                           ;set_brigthness@brightness stored from wreg
  2454  02A8  00F2               	movwf	set_brigthness@brightness
  2455  02A9                     l1841:
  2456                           
  2457                           ;TM1637.c: 75: if(on == 1){
  2458  02A9  0370               	decf	set_brigthness@on,w
  2459  02AA  1D03               	btfss	3,2
  2460  02AB  2AAD               	goto	u1171
  2461  02AC  2AAE               	goto	u1170
  2462  02AD                     u1171:
  2463  02AD  2AB5               	goto	l1845
  2464  02AE                     u1170:
  2465  02AE                     l1843:
  2466                           
  2467                           ;TM1637.c: 76: m_brightness = (brightness & 0x7 | 0x08);
  2468  02AE  0872               	movf	set_brigthness@brightness,w
  2469  02AF  3907               	andlw	7
  2470  02B0  3808               	iorlw	8
  2471  02B1  00F1               	movwf	??_set_brigthness
  2472  02B2  0871               	movf	??_set_brigthness,w
  2473  02B3  00FD               	movwf	_m_brightness
  2474                           
  2475                           ;TM1637.c: 77: }else{
  2476  02B4  2ABA               	goto	l287
  2477  02B5                     l1845:
  2478                           
  2479                           ;TM1637.c: 78: m_brightness = (brightness & 0x7 | 0x00);
  2480  02B5  0872               	movf	set_brigthness@brightness,w
  2481  02B6  3907               	andlw	7
  2482  02B7  00F1               	movwf	??_set_brigthness
  2483  02B8  0871               	movf	??_set_brigthness,w
  2484  02B9  00FD               	movwf	_m_brightness
  2485  02BA                     l287:
  2486  02BA  0008               	return
  2487  02BB                     __end_of_set_brigthness:
  2488                           
  2489                           	psect	text4
  2490  066B                     __ptext4:	
  2491 ;; *************** function _rtc_display *****************
  2492 ;; Defined at:
  2493 ;;		line 121 in file "main.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  date            1    wreg     PTR struct Date
  2496 ;;		 -> main@date(6), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  date            1    0[BANK0 ] PTR struct Date
  2499 ;;		 -> main@date(6), 
  2500 ;;  min             1    2[BANK0 ] unsigned char 
  2501 ;;  hour            1    1[BANK0 ] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2511 ;;      Params:         0       0       0       0       0       0
  2512 ;;      Locals:         0       3       0       0       0       0
  2513 ;;      Temps:          3       0       0       0       0       0
  2514 ;;      Totals:         3       3       0       0       0       0
  2515 ;;Total ram usage:        6 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    2
  2518 ;; This function calls:
  2519 ;;		___awdiv
  2520 ;;		___awmod
  2521 ;;		_encode_digit
  2522 ;;		_set_segments
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _rtc_display
  2530  066B                     _rtc_display:
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2534                           ;rtc_display@date stored from wreg
  2535  066B  0020               	movlb	0	; select bank0
  2536  066C  00B2               	movwf	rtc_display@date
  2537  066D                     l2107:
  2538                           
  2539                           ;main.c: 125: uint8_t hour = date->hour;
  2540  066D  0832               	movf	rtc_display@date,w
  2541  066E  0086               	movwf	6
  2542  066F  0187               	clrf	7
  2543  0670  3F43               	moviw [3]fsr1
  2544  0671  00B3               	movwf	rtc_display@hour
  2545                           
  2546                           ;main.c: 126: uint8_t min = date->min;
  2547  0672  0832               	movf	rtc_display@date,w
  2548  0673  0086               	movwf	6
  2549  0674  0187               	clrf	7
  2550  0675  3F44               	moviw [4]fsr1
  2551  0676  00B4               	movwf	rtc_display@min
  2552  0677                     l2109:
  2553                           
  2554                           ;main.c: 129: t_segments[0] = encode_digit(hour / 10);
  2555  0677  300A               	movlw	10
  2556  0678  00F0               	movwf	___awdiv@divisor
  2557  0679  3000               	movlw	0
  2558  067A  00F1               	movwf	___awdiv@divisor+1
  2559  067B  0833               	movf	rtc_display@hour,w
  2560  067C  00FA               	movwf	??_rtc_display
  2561  067D  01FB               	clrf	??_rtc_display+1
  2562  067E  087A               	movf	??_rtc_display,w
  2563  067F  00F2               	movwf	___awdiv@dividend
  2564  0680  087B               	movf	??_rtc_display+1,w
  2565  0681  00F3               	movwf	___awdiv@dividend+1
  2566  0682  3185  25AC  3186   	fcall	___awdiv
  2567  0685  0870               	movf	?___awdiv,w
  2568  0686  3182  221D  3186   	fcall	_encode_digit
  2569  0689  00FC               	movwf	??_rtc_display+2
  2570  068A  087C               	movf	??_rtc_display+2,w
  2571  068B  0020               	movlb	0	; select bank0
  2572  068C  00AE               	movwf	_t_segments
  2573  068D                     l2111:
  2574                           
  2575                           ;main.c: 130: t_segments[1] = encode_digit(hour % 10);
  2576  068D  300A               	movlw	10
  2577  068E  00F0               	movwf	___awmod@divisor
  2578  068F  3000               	movlw	0
  2579  0690  00F1               	movwf	___awmod@divisor+1
  2580  0691  0833               	movf	rtc_display@hour,w
  2581  0692  00FA               	movwf	??_rtc_display
  2582  0693  01FB               	clrf	??_rtc_display+1
  2583  0694  087A               	movf	??_rtc_display,w
  2584  0695  00F2               	movwf	___awmod@dividend
  2585  0696  087B               	movf	??_rtc_display+1,w
  2586  0697  00F3               	movwf	___awmod@dividend+1
  2587  0698  3185  2559  3186   	fcall	___awmod
  2588  069B  0870               	movf	?___awmod,w
  2589  069C  3182  221D  3186   	fcall	_encode_digit
  2590  069F  00FC               	movwf	??_rtc_display+2
  2591  06A0  087C               	movf	??_rtc_display+2,w
  2592  06A1  0020               	movlb	0	; select bank0
  2593  06A2  00AF               	movwf	_t_segments+1
  2594  06A3                     l2113:
  2595                           
  2596                           ;main.c: 131: t_segments[2] = encode_digit(min / 10);
  2597  06A3  300A               	movlw	10
  2598  06A4  00F0               	movwf	___awdiv@divisor
  2599  06A5  3000               	movlw	0
  2600  06A6  00F1               	movwf	___awdiv@divisor+1
  2601  06A7  0834               	movf	rtc_display@min,w
  2602  06A8  00FA               	movwf	??_rtc_display
  2603  06A9  01FB               	clrf	??_rtc_display+1
  2604  06AA  087A               	movf	??_rtc_display,w
  2605  06AB  00F2               	movwf	___awdiv@dividend
  2606  06AC  087B               	movf	??_rtc_display+1,w
  2607  06AD  00F3               	movwf	___awdiv@dividend+1
  2608  06AE  3185  25AC  3186   	fcall	___awdiv
  2609  06B1  0870               	movf	?___awdiv,w
  2610  06B2  3182  221D  3186   	fcall	_encode_digit
  2611  06B5  00FC               	movwf	??_rtc_display+2
  2612  06B6  087C               	movf	??_rtc_display+2,w
  2613  06B7  0020               	movlb	0	; select bank0
  2614  06B8  00B0               	movwf	_t_segments+2
  2615  06B9                     l2115:
  2616                           
  2617                           ;main.c: 132: t_segments[3] = encode_digit(min % 10);
  2618  06B9  300A               	movlw	10
  2619  06BA  00F0               	movwf	___awmod@divisor
  2620  06BB  3000               	movlw	0
  2621  06BC  00F1               	movwf	___awmod@divisor+1
  2622  06BD  0834               	movf	rtc_display@min,w
  2623  06BE  00FA               	movwf	??_rtc_display
  2624  06BF  01FB               	clrf	??_rtc_display+1
  2625  06C0  087A               	movf	??_rtc_display,w
  2626  06C1  00F2               	movwf	___awmod@dividend
  2627  06C2  087B               	movf	??_rtc_display+1,w
  2628  06C3  00F3               	movwf	___awmod@dividend+1
  2629  06C4  3185  2559  3186   	fcall	___awmod
  2630  06C7  0870               	movf	?___awmod,w
  2631  06C8  3182  221D  3186   	fcall	_encode_digit
  2632  06CB  00FC               	movwf	??_rtc_display+2
  2633  06CC  087C               	movf	??_rtc_display+2,w
  2634  06CD  0020               	movlb	0	; select bank0
  2635  06CE  00B1               	movwf	_t_segments+3
  2636  06CF                     l2117:
  2637                           
  2638                           ;main.c: 134: set_segments(t_segments, 4, 0);
  2639  06CF  3004               	movlw	4
  2640  06D0  00FA               	movwf	??_rtc_display
  2641  06D1  087A               	movf	??_rtc_display,w
  2642  06D2  00F5               	movwf	set_segments@length
  2643  06D3  01F6               	clrf	set_segments@pos
  2644  06D4  302E               	movlw	(low (_t_segments| 0))& (0+255)
  2645  06D5  3184  245B  3186   	fcall	_set_segments
  2646  06D8                     l129:
  2647  06D8  0008               	return
  2648  06D9                     __end_of_rtc_display:
  2649                           
  2650                           	psect	text5
  2651  045B                     __ptext5:	
  2652 ;; *************** function _set_segments *****************
  2653 ;; Defined at:
  2654 ;;		line 82 in file "TM1637.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  segments        1    wreg     PTR const unsigned char 
  2657 ;;		 -> t_segments(4), 
  2658 ;;  length          1    5[COMMON] unsigned char 
  2659 ;;  pos             1    6[COMMON] unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  segments        1    8[COMMON] PTR const unsigned char 
  2662 ;;		 -> t_segments(4), 
  2663 ;;  k               1    9[COMMON] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2673 ;;      Params:         2       0       0       0       0       0
  2674 ;;      Locals:         2       0       0       0       0       0
  2675 ;;      Temps:          1       0       0       0       0       0
  2676 ;;      Totals:         5       0       0       0       0       0
  2677 ;;Total ram usage:        5 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    1
  2680 ;; This function calls:
  2681 ;;		_start
  2682 ;;		_stop
  2683 ;;		_write_data
  2684 ;; This function is called by:
  2685 ;;		_rtc_display
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function _set_segments
  2691  045B                     _set_segments:
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2695                           ;set_segments@segments stored from wreg
  2696  045B  00F8               	movwf	set_segments@segments
  2697  045C                     l1993:
  2698                           
  2699                           ;TM1637.c: 85: start();
  2700  045C  3182  2237  3184   	fcall	_start
  2701  045F                     l1995:
  2702                           
  2703                           ;TM1637.c: 86: write_data(0x40);
  2704  045F  3040               	movlw	64
  2705  0460  3183  23EB  3184   	fcall	_write_data
  2706  0463                     l1997:
  2707                           
  2708                           ;TM1637.c: 87: stop();
  2709  0463  3182  2240  3184   	fcall	_stop
  2710  0466                     l1999:
  2711                           
  2712                           ;TM1637.c: 90: start();
  2713  0466  3182  2237  3184   	fcall	_start
  2714  0469                     l2001:
  2715                           
  2716                           ;TM1637.c: 91: write_data(0xC0 + (pos & 0x03));
  2717  0469  0876               	movf	set_segments@pos,w
  2718  046A  3903               	andlw	3
  2719  046B  3EC0               	addlw	192
  2720  046C  3183  23EB  3184   	fcall	_write_data
  2721  046F                     l2003:
  2722                           
  2723                           ;TM1637.c: 94: for(uint8_t k = 0; k < length; k++){
  2724  046F  01F9               	clrf	set_segments@k
  2725  0470  2C7F               	goto	l2009
  2726  0471                     l2005:
  2727                           
  2728                           ;TM1637.c: 95: write_data(segments[k]);
  2729  0471  0879               	movf	set_segments@k,w
  2730  0472  0778               	addwf	set_segments@segments,w
  2731  0473  00F7               	movwf	??_set_segments
  2732  0474  0877               	movf	??_set_segments,w
  2733  0475  0086               	movwf	6
  2734  0476  0187               	clrf	7
  2735  0477  0801               	movf	1,w
  2736  0478  3183  23EB  3184   	fcall	_write_data
  2737  047B                     l2007:
  2738  047B  3001               	movlw	1
  2739  047C  00F7               	movwf	??_set_segments
  2740  047D  0877               	movf	??_set_segments,w
  2741  047E  07F9               	addwf	set_segments@k,f
  2742  047F                     l2009:
  2743  047F  0875               	movf	set_segments@length,w
  2744  0480  0279               	subwf	set_segments@k,w
  2745  0481  1C03               	skipc
  2746  0482  2C84               	goto	u1241
  2747  0483  2C85               	goto	u1240
  2748  0484                     u1241:
  2749  0484  2C71               	goto	l2005
  2750  0485                     u1240:
  2751  0485                     l2011:
  2752                           
  2753                           ;TM1637.c: 96: };TM1637.c: 98: stop();
  2754  0485  3182  2240  3184   	fcall	_stop
  2755                           
  2756                           ;TM1637.c: 101: start();
  2757  0488  3182  2237  3184   	fcall	_start
  2758  048B                     l2013:
  2759                           
  2760                           ;TM1637.c: 102: write_data(0x80 + (m_brightness & 0x0f));
  2761  048B  087D               	movf	_m_brightness,w
  2762  048C  390F               	andlw	15
  2763  048D  3E80               	addlw	128
  2764  048E  3183  23EB  3184   	fcall	_write_data
  2765  0491                     l2015:
  2766                           
  2767                           ;TM1637.c: 103: stop();
  2768  0491  3182  2240  3184   	fcall	_stop
  2769  0494                     l293:
  2770  0494  0008               	return
  2771  0495                     __end_of_set_segments:
  2772                           
  2773                           	psect	text6
  2774  03EB                     __ptext6:	
  2775 ;; *************** function _write_data *****************
  2776 ;; Defined at:
  2777 ;;		line 36 in file "TM1637.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  b               1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  b               1    1[COMMON] unsigned char 
  2782 ;;  i               1    4[COMMON] unsigned char 
  2783 ;;  data            1    3[COMMON] unsigned char 
  2784 ;;  ack             1    2[COMMON] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      unsigned char 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2794 ;;      Params:         0       0       0       0       0       0
  2795 ;;      Locals:         4       0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0
  2797 ;;      Totals:         5       0       0       0       0       0
  2798 ;;Total ram usage:        5 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_set_segments
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _write_data
  2809  03EB                     _write_data:
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _write_data: [wreg+status,2+status,0]
  2813                           ;write_data@b stored from wreg
  2814  03EB  00F1               	movwf	write_data@b
  2815  03EC                     l1555:
  2816                           
  2817                           ;TM1637.c: 37: uint8_t data = b;
  2818  03EC  0871               	movf	write_data@b,w
  2819  03ED  00F0               	movwf	??_write_data
  2820  03EE  0870               	movf	??_write_data,w
  2821  03EF  00F3               	movwf	write_data@data
  2822  03F0                     l1557:
  2823  03F0  0021               	movlb	1	; select bank1
  2824  03F1  100C               	bcf	12,0	;volatile
  2825  03F2                     l1559:
  2826                           
  2827                           ;TM1637.c: 40: for(uint8_t i = 0; i < 8; i++){
  2828  03F2  01F4               	clrf	write_data@i
  2829  03F3                     l257:	
  2830                           ;TM1637.c: 41: do { LATAbits.LATA0 = 0; } while(0);
  2831                           
  2832  03F3  0022               	movlb	2	; select bank2
  2833  03F4  100C               	bcf	12,0	;volatile
  2834  03F5                     l258:
  2835                           
  2836                           ;TM1637.c: 43: if(data & 0x01){
  2837  03F5  1C73               	btfss	write_data@data,0
  2838  03F6  2BF8               	goto	u721
  2839  03F7  2BF9               	goto	u720
  2840  03F8                     u721:
  2841  03F8  2BFB               	goto	l263
  2842  03F9                     u720:
  2843  03F9                     l260:	
  2844                           ;TM1637.c: 44: do { LATAbits.LATA3 = 1; } while(0);
  2845                           
  2846  03F9  158C               	bsf	12,3	;volatile
  2847  03FA  2BFC               	goto	l265
  2848  03FB                     l263:	
  2849                           ;TM1637.c: 46: do { LATAbits.LATA3 = 0; } while(0);
  2850                           
  2851  03FB  118C               	bcf	12,3	;volatile
  2852  03FC                     l265:	
  2853                           ;TM1637.c: 47: };TM1637.c: 49: do { LATAbits.LATA0 = 1; } while(0);
  2854                           
  2855  03FC  140C               	bsf	12,0	;volatile
  2856  03FD                     l1565:
  2857                           
  2858                           ;TM1637.c: 51: data = data >> 1;
  2859  03FD  3673               	lsrf	write_data@data,w
  2860  03FE  00F0               	movwf	??_write_data
  2861  03FF  0870               	movf	??_write_data,w
  2862  0400  00F3               	movwf	write_data@data
  2863  0401  3001               	movlw	1
  2864  0402  00F0               	movwf	??_write_data
  2865  0403  0870               	movf	??_write_data,w
  2866  0404  07F4               	addwf	write_data@i,f
  2867  0405                     l1567:
  2868  0405  3008               	movlw	8
  2869  0406  0274               	subwf	write_data@i,w
  2870  0407  1C03               	skipc
  2871  0408  2C0A               	goto	u731
  2872  0409  2C0B               	goto	u730
  2873  040A                     u731:
  2874  040A  2BF3               	goto	l257
  2875  040B                     u730:
  2876  040B                     l267:	
  2877                           ;TM1637.c: 52: };TM1637.c: 55: do { LATAbits.LATA0 = 0; } while(0);
  2878                           
  2879  040B  100C               	bcf	12,0	;volatile
  2880  040C                     l269:	
  2881                           ;TM1637.c: 56: do { LATAbits.LATA3 = 1; } while(0);
  2882                           
  2883  040C  158C               	bsf	12,3	;volatile
  2884  040D                     l271:	
  2885                           ;TM1637.c: 59: do { LATAbits.LATA0 = 1; } while(0);
  2886                           
  2887  040D  140C               	bsf	12,0	;volatile
  2888  040E                     l273:	
  2889                           ;TM1637.c: 61: do { TRISAbits.TRISA3 = 1; } while(0);
  2890                           
  2891  040E  0021               	movlb	1	; select bank1
  2892  040F  158C               	bsf	12,3	;volatile
  2893  0410                     l1569:
  2894                           
  2895                           ;TM1637.c: 63: uint8_t ack = PORTAbits.RA3;
  2896  0410  3000               	movlw	0
  2897  0411  0020               	movlb	0	; select bank0
  2898  0412  198C               	btfsc	12,3	;volatile
  2899  0413  3001               	movlw	1
  2900  0414  00F2               	movwf	write_data@ack
  2901  0415                     l1571:
  2902                           
  2903                           ;TM1637.c: 64: if(ack == 0){
  2904  0415  0872               	movf	write_data@ack,w
  2905  0416  1D03               	btfss	3,2
  2906  0417  2C19               	goto	u741
  2907  0418  2C1A               	goto	u740
  2908  0419                     u741:
  2909  0419  2C1E               	goto	l280
  2910  041A                     u740:
  2911  041A                     l276:	
  2912                           ;TM1637.c: 65: do { TRISAbits.TRISA3 = 0; } while(0);
  2913                           
  2914  041A  0021               	movlb	1	; select bank1
  2915  041B  118C               	bcf	12,3	;volatile
  2916  041C                     l278:	
  2917                           ;TM1637.c: 66: do { LATAbits.LATA3 = 0; } while(0);
  2918                           
  2919  041C  0022               	movlb	2	; select bank2
  2920  041D  118C               	bcf	12,3	;volatile
  2921  041E                     l280:	
  2922                           ;TM1637.c: 67: };TM1637.c: 69: do { TRISAbits.TRISA3 = 0; } while(0);
  2923                           
  2924  041E  0021               	movlb	1	; select bank1
  2925  041F  118C               	bcf	12,3	;volatile
  2926  0420                     l282:
  2927  0420  0008               	return
  2928  0421                     __end_of_write_data:
  2929                           
  2930                           	psect	text7
  2931  0240                     __ptext7:	
  2932 ;; *************** function _stop *****************
  2933 ;; Defined at:
  2934 ;;		line 25 in file "TM1637.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		None
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2948 ;;      Params:         0       0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_set_segments
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _stop
  2963  0240                     _stop:
  2964  0240                     l238:	
  2965                           ;incstack = 0
  2966                           ; Regs used in _stop: []
  2967                           ;TM1637.c: 26: do { TRISAbits.TRISA3 = 0; } while(0);
  2968                           
  2969  0240  0021               	movlb	1	; select bank1
  2970  0241  118C               	bcf	12,3	;volatile
  2971  0242                     l240:	
  2972                           ;TM1637.c: 27: do { TRISAbits.TRISA0 = 0; } while(0);
  2973                           
  2974  0242  100C               	bcf	12,0	;volatile
  2975  0243                     l242:	
  2976                           ;TM1637.c: 29: do { LATAbits.LATA0 = 0; } while(0);
  2977                           
  2978  0243  0022               	movlb	2	; select bank2
  2979  0244  100C               	bcf	12,0	;volatile
  2980  0245                     l244:	
  2981                           ;TM1637.c: 30: do { LATAbits.LATA3 = 0; } while(0);
  2982                           
  2983  0245  118C               	bcf	12,3	;volatile
  2984  0246                     l246:	
  2985                           ;TM1637.c: 32: do { LATAbits.LATA0 = 1; } while(0);
  2986                           
  2987  0246  140C               	bsf	12,0	;volatile
  2988  0247                     l248:	
  2989                           ;TM1637.c: 33: do { LATAbits.LATA3 = 1; } while(0);
  2990                           
  2991  0247  158C               	bsf	12,3	;volatile
  2992  0248                     l250:
  2993  0248  0008               	return
  2994  0249                     __end_of_stop:
  2995                           
  2996                           	psect	text8
  2997  0237                     __ptext8:	
  2998 ;; *************** function _start *****************
  2999 ;; Defined at:
  3000 ;;		line 14 in file "TM1637.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		None
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3014 ;;      Params:         0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_set_segments
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _start
  3029  0237                     _start:
  3030  0237                     l223:	
  3031                           ;incstack = 0
  3032                           ; Regs used in _start: []
  3033                           ;TM1637.c: 15: do { TRISAbits.TRISA3 = 0; } while(0);
  3034                           
  3035  0237  0021               	movlb	1	; select bank1
  3036  0238  118C               	bcf	12,3	;volatile
  3037  0239                     l225:	
  3038                           ;TM1637.c: 16: do { TRISAbits.TRISA0 = 0; } while(0);
  3039                           
  3040  0239  100C               	bcf	12,0	;volatile
  3041  023A                     l227:	
  3042                           ;TM1637.c: 18: do { LATAbits.LATA3 = 1; } while(0);
  3043                           
  3044  023A  0022               	movlb	2	; select bank2
  3045  023B  158C               	bsf	12,3	;volatile
  3046  023C                     l229:	
  3047                           ;TM1637.c: 19: do { LATAbits.LATA0 = 1; } while(0);
  3048                           
  3049  023C  140C               	bsf	12,0	;volatile
  3050  023D                     l231:	
  3051                           ;TM1637.c: 21: do { LATAbits.LATA3 = 0; } while(0);
  3052                           
  3053  023D  118C               	bcf	12,3	;volatile
  3054  023E                     l233:	
  3055                           ;TM1637.c: 22: do { LATAbits.LATA0 = 0; } while(0);
  3056                           
  3057  023E  100C               	bcf	12,0	;volatile
  3058  023F                     l235:
  3059  023F  0008               	return
  3060  0240                     __end_of_start:
  3061                           
  3062                           	psect	text9
  3063  0559                     __ptext9:	
  3064 ;; *************** function ___awmod *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  divisor         2    0[COMMON] int 
  3069 ;;  dividend        2    2[COMMON] int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  sign            1    6[COMMON] unsigned char 
  3072 ;;  counter         1    5[COMMON] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  2    0[COMMON] int 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3082 ;;      Params:         4       0       0       0       0       0
  3083 ;;      Locals:         2       0       0       0       0       0
  3084 ;;      Temps:          1       0       0       0       0       0
  3085 ;;      Totals:         7       0       0       0       0       0
  3086 ;;Total ram usage:        7 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_rtc_display
  3092 ;;		_decimal_2_bcd
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function ___awmod
  3098  0559                     ___awmod:
  3099  0559                     l1635:	
  3100                           ;incstack = 0
  3101                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3102                           
  3103  0559  01F6               	clrf	___awmod@sign
  3104  055A                     l1637:
  3105  055A  1FF3               	btfss	___awmod@dividend+1,7
  3106  055B  2D5D               	goto	u881
  3107  055C  2D5E               	goto	u880
  3108  055D                     u881:
  3109  055D  2D65               	goto	l1643
  3110  055E                     u880:
  3111  055E                     l1639:
  3112  055E  09F2               	comf	___awmod@dividend,f
  3113  055F  09F3               	comf	___awmod@dividend+1,f
  3114  0560  0AF2               	incf	___awmod@dividend,f
  3115  0561  1903               	skipnz
  3116  0562  0AF3               	incf	___awmod@dividend+1,f
  3117  0563                     l1641:
  3118  0563  01F6               	clrf	___awmod@sign
  3119  0564  0AF6               	incf	___awmod@sign,f
  3120  0565                     l1643:
  3121  0565  1FF1               	btfss	___awmod@divisor+1,7
  3122  0566  2D68               	goto	u891
  3123  0567  2D69               	goto	u890
  3124  0568                     u891:
  3125  0568  2D6E               	goto	l1647
  3126  0569                     u890:
  3127  0569                     l1645:
  3128  0569  09F0               	comf	___awmod@divisor,f
  3129  056A  09F1               	comf	___awmod@divisor+1,f
  3130  056B  0AF0               	incf	___awmod@divisor,f
  3131  056C  1903               	skipnz
  3132  056D  0AF1               	incf	___awmod@divisor+1,f
  3133  056E                     l1647:
  3134  056E  0870               	movf	___awmod@divisor,w
  3135  056F  0471               	iorwf	___awmod@divisor+1,w
  3136  0570  1903               	btfsc	3,2
  3137  0571  2D73               	goto	u901
  3138  0572  2D74               	goto	u900
  3139  0573                     u901:
  3140  0573  2D9D               	goto	l1665
  3141  0574                     u900:
  3142  0574                     l1649:
  3143  0574  01F5               	clrf	___awmod@counter
  3144  0575  0AF5               	incf	___awmod@counter,f
  3145  0576  2D80               	goto	l1655
  3146  0577                     l1651:
  3147  0577  3001               	movlw	1
  3148  0578                     u915:
  3149  0578  35F0               	lslf	___awmod@divisor,f
  3150  0579  0DF1               	rlf	___awmod@divisor+1,f
  3151  057A  0B89               	decfsz	9,f
  3152  057B  2D78               	goto	u915
  3153  057C                     l1653:
  3154  057C  3001               	movlw	1
  3155  057D  00F4               	movwf	??___awmod
  3156  057E  0874               	movf	??___awmod,w
  3157  057F  07F5               	addwf	___awmod@counter,f
  3158  0580                     l1655:
  3159  0580  1FF1               	btfss	___awmod@divisor+1,7
  3160  0581  2D83               	goto	u921
  3161  0582  2D84               	goto	u920
  3162  0583                     u921:
  3163  0583  2D77               	goto	l1651
  3164  0584                     u920:
  3165  0584                     l1657:
  3166  0584  0871               	movf	___awmod@divisor+1,w
  3167  0585  0273               	subwf	___awmod@dividend+1,w
  3168  0586  1D03               	skipz
  3169  0587  2D8A               	goto	u935
  3170  0588  0870               	movf	___awmod@divisor,w
  3171  0589  0272               	subwf	___awmod@dividend,w
  3172  058A                     u935:
  3173  058A  1C03               	skipc
  3174  058B  2D8D               	goto	u931
  3175  058C  2D8E               	goto	u930
  3176  058D                     u931:
  3177  058D  2D92               	goto	l1661
  3178  058E                     u930:
  3179  058E                     l1659:
  3180  058E  0870               	movf	___awmod@divisor,w
  3181  058F  02F2               	subwf	___awmod@dividend,f
  3182  0590  0871               	movf	___awmod@divisor+1,w
  3183  0591  3BF3               	subwfb	___awmod@dividend+1,f
  3184  0592                     l1661:
  3185  0592  3001               	movlw	1
  3186  0593                     u945:
  3187  0593  36F1               	lsrf	___awmod@divisor+1,f
  3188  0594  0CF0               	rrf	___awmod@divisor,f
  3189  0595  0B89               	decfsz	9,f
  3190  0596  2D93               	goto	u945
  3191  0597                     l1663:
  3192  0597  3001               	movlw	1
  3193  0598  02F5               	subwf	___awmod@counter,f
  3194  0599  1D03               	btfss	3,2
  3195  059A  2D9C               	goto	u951
  3196  059B  2D9D               	goto	u950
  3197  059C                     u951:
  3198  059C  2D84               	goto	l1657
  3199  059D                     u950:
  3200  059D                     l1665:
  3201  059D  0876               	movf	___awmod@sign,w
  3202  059E  1903               	btfsc	3,2
  3203  059F  2DA1               	goto	u961
  3204  05A0  2DA2               	goto	u960
  3205  05A1                     u961:
  3206  05A1  2DA7               	goto	l1669
  3207  05A2                     u960:
  3208  05A2                     l1667:
  3209  05A2  09F2               	comf	___awmod@dividend,f
  3210  05A3  09F3               	comf	___awmod@dividend+1,f
  3211  05A4  0AF2               	incf	___awmod@dividend,f
  3212  05A5  1903               	skipnz
  3213  05A6  0AF3               	incf	___awmod@dividend+1,f
  3214  05A7                     l1669:
  3215  05A7  0873               	movf	___awmod@dividend+1,w
  3216  05A8  00F1               	movwf	?___awmod+1
  3217  05A9  0872               	movf	___awmod@dividend,w
  3218  05AA  00F0               	movwf	?___awmod
  3219  05AB                     l695:
  3220  05AB  0008               	return
  3221  05AC                     __end_of___awmod:
  3222                           
  3223                           	psect	text10
  3224  05AC                     __ptext10:	
  3225 ;; *************** function ___awdiv *****************
  3226 ;; Defined at:
  3227 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  divisor         2    0[COMMON] int 
  3230 ;;  dividend        2    2[COMMON] int 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  quotient        2    7[COMMON] int 
  3233 ;;  sign            1    6[COMMON] unsigned char 
  3234 ;;  counter         1    5[COMMON] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2    0[COMMON] int 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3244 ;;      Params:         4       0       0       0       0       0
  3245 ;;      Locals:         4       0       0       0       0       0
  3246 ;;      Temps:          1       0       0       0       0       0
  3247 ;;      Totals:         9       0       0       0       0       0
  3248 ;;Total ram usage:        9 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_rtc_display
  3254 ;;		_decimal_2_bcd
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function ___awdiv
  3260  05AC                     ___awdiv:
  3261  05AC                     l1591:	
  3262                           ;incstack = 0
  3263                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3264                           
  3265  05AC  01F6               	clrf	___awdiv@sign
  3266  05AD                     l1593:
  3267  05AD  1FF1               	btfss	___awdiv@divisor+1,7
  3268  05AE  2DB0               	goto	u781
  3269  05AF  2DB1               	goto	u780
  3270  05B0                     u781:
  3271  05B0  2DB8               	goto	l1599
  3272  05B1                     u780:
  3273  05B1                     l1595:
  3274  05B1  09F0               	comf	___awdiv@divisor,f
  3275  05B2  09F1               	comf	___awdiv@divisor+1,f
  3276  05B3  0AF0               	incf	___awdiv@divisor,f
  3277  05B4  1903               	skipnz
  3278  05B5  0AF1               	incf	___awdiv@divisor+1,f
  3279  05B6                     l1597:
  3280  05B6  01F6               	clrf	___awdiv@sign
  3281  05B7  0AF6               	incf	___awdiv@sign,f
  3282  05B8                     l1599:
  3283  05B8  1FF3               	btfss	___awdiv@dividend+1,7
  3284  05B9  2DBB               	goto	u791
  3285  05BA  2DBC               	goto	u790
  3286  05BB                     u791:
  3287  05BB  2DC5               	goto	l1605
  3288  05BC                     u790:
  3289  05BC                     l1601:
  3290  05BC  09F2               	comf	___awdiv@dividend,f
  3291  05BD  09F3               	comf	___awdiv@dividend+1,f
  3292  05BE  0AF2               	incf	___awdiv@dividend,f
  3293  05BF  1903               	skipnz
  3294  05C0  0AF3               	incf	___awdiv@dividend+1,f
  3295  05C1                     l1603:
  3296  05C1  3001               	movlw	1
  3297  05C2  00F4               	movwf	??___awdiv
  3298  05C3  0874               	movf	??___awdiv,w
  3299  05C4  06F6               	xorwf	___awdiv@sign,f
  3300  05C5                     l1605:
  3301  05C5  01F7               	clrf	___awdiv@quotient
  3302  05C6  01F8               	clrf	___awdiv@quotient+1
  3303  05C7                     l1607:
  3304  05C7  0870               	movf	___awdiv@divisor,w
  3305  05C8  0471               	iorwf	___awdiv@divisor+1,w
  3306  05C9  1903               	btfsc	3,2
  3307  05CA  2DCC               	goto	u801
  3308  05CB  2DCD               	goto	u800
  3309  05CC                     u801:
  3310  05CC  2DFC               	goto	l1627
  3311  05CD                     u800:
  3312  05CD                     l1609:
  3313  05CD  01F5               	clrf	___awdiv@counter
  3314  05CE  0AF5               	incf	___awdiv@counter,f
  3315  05CF  2DD9               	goto	l1615
  3316  05D0                     l1611:
  3317  05D0  3001               	movlw	1
  3318  05D1                     u815:
  3319  05D1  35F0               	lslf	___awdiv@divisor,f
  3320  05D2  0DF1               	rlf	___awdiv@divisor+1,f
  3321  05D3  0B89               	decfsz	9,f
  3322  05D4  2DD1               	goto	u815
  3323  05D5                     l1613:
  3324  05D5  3001               	movlw	1
  3325  05D6  00F4               	movwf	??___awdiv
  3326  05D7  0874               	movf	??___awdiv,w
  3327  05D8  07F5               	addwf	___awdiv@counter,f
  3328  05D9                     l1615:
  3329  05D9  1FF1               	btfss	___awdiv@divisor+1,7
  3330  05DA  2DDC               	goto	u821
  3331  05DB  2DDD               	goto	u820
  3332  05DC                     u821:
  3333  05DC  2DD0               	goto	l1611
  3334  05DD                     u820:
  3335  05DD                     l1617:
  3336  05DD  3001               	movlw	1
  3337  05DE                     u835:
  3338  05DE  35F7               	lslf	___awdiv@quotient,f
  3339  05DF  0DF8               	rlf	___awdiv@quotient+1,f
  3340  05E0  0B89               	decfsz	9,f
  3341  05E1  2DDE               	goto	u835
  3342  05E2  0871               	movf	___awdiv@divisor+1,w
  3343  05E3  0273               	subwf	___awdiv@dividend+1,w
  3344  05E4  1D03               	skipz
  3345  05E5  2DE8               	goto	u845
  3346  05E6  0870               	movf	___awdiv@divisor,w
  3347  05E7  0272               	subwf	___awdiv@dividend,w
  3348  05E8                     u845:
  3349  05E8  1C03               	skipc
  3350  05E9  2DEB               	goto	u841
  3351  05EA  2DEC               	goto	u840
  3352  05EB                     u841:
  3353  05EB  2DF1               	goto	l1623
  3354  05EC                     u840:
  3355  05EC                     l1619:
  3356  05EC  0870               	movf	___awdiv@divisor,w
  3357  05ED  02F2               	subwf	___awdiv@dividend,f
  3358  05EE  0871               	movf	___awdiv@divisor+1,w
  3359  05EF  3BF3               	subwfb	___awdiv@dividend+1,f
  3360  05F0                     l1621:
  3361  05F0  1477               	bsf	___awdiv@quotient,0
  3362  05F1                     l1623:
  3363  05F1  3001               	movlw	1
  3364  05F2                     u855:
  3365  05F2  36F1               	lsrf	___awdiv@divisor+1,f
  3366  05F3  0CF0               	rrf	___awdiv@divisor,f
  3367  05F4  0B89               	decfsz	9,f
  3368  05F5  2DF2               	goto	u855
  3369  05F6                     l1625:
  3370  05F6  3001               	movlw	1
  3371  05F7  02F5               	subwf	___awdiv@counter,f
  3372  05F8  1D03               	btfss	3,2
  3373  05F9  2DFB               	goto	u861
  3374  05FA  2DFC               	goto	u860
  3375  05FB                     u861:
  3376  05FB  2DDD               	goto	l1617
  3377  05FC                     u860:
  3378  05FC                     l1627:
  3379  05FC  0876               	movf	___awdiv@sign,w
  3380  05FD  1903               	btfsc	3,2
  3381  05FE  2E00               	goto	u871
  3382  05FF  2E01               	goto	u870
  3383  0600                     u871:
  3384  0600  2E06               	goto	l1631
  3385  0601                     u870:
  3386  0601                     l1629:
  3387  0601  09F7               	comf	___awdiv@quotient,f
  3388  0602  09F8               	comf	___awdiv@quotient+1,f
  3389  0603  0AF7               	incf	___awdiv@quotient,f
  3390  0604  1903               	skipnz
  3391  0605  0AF8               	incf	___awdiv@quotient+1,f
  3392  0606                     l1631:
  3393  0606  0878               	movf	___awdiv@quotient+1,w
  3394  0607  00F1               	movwf	?___awdiv+1
  3395  0608  0877               	movf	___awdiv@quotient,w
  3396  0609  00F0               	movwf	?___awdiv
  3397  060A                     l682:
  3398  060A  0008               	return
  3399  060B                     __end_of___awdiv:
  3400                           
  3401                           	psect	text11
  3402  0513                     __ptext11:	
  3403 ;; *************** function _read_date *****************
  3404 ;; Defined at:
  3405 ;;		line 78 in file "DS3231.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  date            1    wreg     PTR struct Date
  3408 ;;		 -> main@date(6), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  date            1   12[COMMON] PTR struct Date
  3411 ;;		 -> main@date(6), 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3421 ;;      Params:         0       0       0       0       0       0
  3422 ;;      Locals:         1       0       0       0       0       0
  3423 ;;      Temps:          1       0       0       0       0       0
  3424 ;;      Totals:         2       0       0       0       0       0
  3425 ;;Total ram usage:        2 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		__read
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _read_date
  3437  0513                     _read_date:
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3441                           ;read_date@date stored from wreg
  3442  0513  00FC               	movwf	read_date@date
  3443  0514                     l1853:
  3444                           
  3445                           ;DS3231.c: 79: date->year = _read(6);
  3446  0514  3006               	movlw	6
  3447  0515  3183  2331  3185   	fcall	__read
  3448  0518  00FB               	movwf	??_read_date
  3449  0519  087C               	movf	read_date@date,w
  3450  051A  0086               	movwf	6
  3451  051B  0187               	clrf	7
  3452  051C  087B               	movf	??_read_date,w
  3453  051D  0081               	movwf	1
  3454                           
  3455                           ;DS3231.c: 80: date->month = _read(5);
  3456  051E  3005               	movlw	5
  3457  051F  3183  2331  3185   	fcall	__read
  3458  0522  00FB               	movwf	??_read_date
  3459  0523  0A7C               	incf	read_date@date,w
  3460  0524  0086               	movwf	6
  3461  0525  0187               	clrf	7
  3462  0526  087B               	movf	??_read_date,w
  3463  0527  0081               	movwf	1
  3464                           
  3465                           ;DS3231.c: 81: date->day = _read(4);
  3466  0528  3004               	movlw	4
  3467  0529  3183  2331  3185   	fcall	__read
  3468  052C  00FB               	movwf	??_read_date
  3469  052D  087C               	movf	read_date@date,w
  3470  052E  3E02               	addlw	2
  3471  052F  0086               	movwf	6
  3472  0530  0187               	clrf	7
  3473  0531  087B               	movf	??_read_date,w
  3474  0532  0081               	movwf	1
  3475  0533                     l1855:
  3476                           
  3477                           ;DS3231.c: 82: _read(3);
  3478  0533  3003               	movlw	3
  3479  0534  3183  2331  3185   	fcall	__read
  3480  0537                     l1857:
  3481                           
  3482                           ;DS3231.c: 83: date->hour = _read(2);
  3483  0537  3002               	movlw	2
  3484  0538  3183  2331  3185   	fcall	__read
  3485  053B  00FB               	movwf	??_read_date
  3486  053C  087C               	movf	read_date@date,w
  3487  053D  3E03               	addlw	3
  3488  053E  0086               	movwf	6
  3489  053F  0187               	clrf	7
  3490  0540  087B               	movf	??_read_date,w
  3491  0541  0081               	movwf	1
  3492  0542                     l1859:
  3493                           
  3494                           ;DS3231.c: 84: date->min = _read(1);
  3495  0542  3001               	movlw	1
  3496  0543  3183  2331  3185   	fcall	__read
  3497  0546  00FB               	movwf	??_read_date
  3498  0547  087C               	movf	read_date@date,w
  3499  0548  3E04               	addlw	4
  3500  0549  0086               	movwf	6
  3501  054A  0187               	clrf	7
  3502  054B  087B               	movf	??_read_date,w
  3503  054C  0081               	movwf	1
  3504  054D                     l1861:
  3505                           
  3506                           ;DS3231.c: 85: date->sec = _read(0);
  3507  054D  3000               	movlw	0
  3508  054E  3183  2331  3185   	fcall	__read
  3509  0551  00FB               	movwf	??_read_date
  3510  0552  087C               	movf	read_date@date,w
  3511  0553  3E05               	addlw	5
  3512  0554  0086               	movwf	6
  3513  0555  0187               	clrf	7
  3514  0556  087B               	movf	??_read_date,w
  3515  0557  0081               	movwf	1
  3516  0558                     l210:
  3517  0558  0008               	return
  3518  0559                     __end_of_read_date:
  3519                           
  3520                           	psect	text12
  3521  0331                     __ptext12:	
  3522 ;; *************** function __read *****************
  3523 ;; Defined at:
  3524 ;;		line 59 in file "DS3231.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  address         1    wreg     unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  address         1    9[COMMON] unsigned char 
  3529 ;;  data            1   10[COMMON] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      unsigned char 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3539 ;;      Params:         0       0       0       0       0       0
  3540 ;;      Locals:         2       0       0       0       0       0
  3541 ;;      Temps:          1       0       0       0       0       0
  3542 ;;      Totals:         3       0       0       0       0       0
  3543 ;;Total ram usage:        3 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		_bcd_2_decimal
  3548 ;;		_i2c_read
  3549 ;;		_i2c_repeated_start
  3550 ;;		_i2c_start
  3551 ;;		_i2c_stop
  3552 ;;		_i2c_write
  3553 ;; This function is called by:
  3554 ;;		_read_date
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function __read
  3560  0331                     __read:
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3564                           ;__read@address stored from wreg
  3565  0331  00F9               	movwf	__read@address
  3566  0332                     l1757:
  3567                           
  3568                           ;DS3231.c: 60: uint8_t data;;DS3231.c: 61: i2c_start();
  3569  0332  3182  225D  3183   	fcall	_i2c_start
  3570                           
  3571                           ;DS3231.c: 62: i2c_write(0xD0);
  3572  0335  30D0               	movlw	208
  3573  0336  3182  2273  3183   	fcall	_i2c_write
  3574                           
  3575                           ;DS3231.c: 63: i2c_write(address);
  3576  0339  0879               	movf	__read@address,w
  3577  033A  3182  2273  3183   	fcall	_i2c_write
  3578                           
  3579                           ;DS3231.c: 65: i2c_repeated_start();
  3580  033D  3182  2253  3183   	fcall	_i2c_repeated_start
  3581                           
  3582                           ;DS3231.c: 67: i2c_write(0xD0 | 0x01);
  3583  0340  30D1               	movlw	209
  3584  0341  3182  2273  3183   	fcall	_i2c_write
  3585                           
  3586                           ;DS3231.c: 68: data = bcd_2_decimal(i2c_read(1));
  3587  0344  3001               	movlw	1
  3588  0345  3182  22FB  3183   	fcall	_i2c_read
  3589  0348  3182  22BB  3183   	fcall	_bcd_2_decimal
  3590  034B  00F8               	movwf	??__read
  3591  034C  0878               	movf	??__read,w
  3592  034D  00FA               	movwf	__read@data
  3593  034E                     l1759:
  3594                           
  3595                           ;DS3231.c: 69: i2c_stop();
  3596  034E  3182  2216  3183   	fcall	_i2c_stop
  3597                           
  3598                           ;DS3231.c: 71: return data;
  3599  0351  087A               	movf	__read@data,w
  3600  0352                     l207:
  3601  0352  0008               	return
  3602  0353                     __end_of__read:
  3603                           
  3604                           	psect	text13
  3605  0273                     __ptext13:	
  3606 ;; *************** function _i2c_write *****************
  3607 ;; Defined at:
  3608 ;;		line 26 in file "i2c.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  data            1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  data            1    0[COMMON] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3622 ;;      Params:         0       0       0       0       0       0
  3623 ;;      Locals:         1       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0
  3625 ;;      Totals:         1       0       0       0       0       0
  3626 ;;Total ram usage:        1 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		_i2c_wait
  3631 ;; This function is called by:
  3632 ;;		_write_date
  3633 ;;		__read
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _i2c_write
  3639  0273                     _i2c_write:
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3643                           ;i2c_write@data stored from wreg
  3644  0273  00F0               	movwf	i2c_write@data
  3645  0274                     l1533:
  3646                           
  3647                           ;i2c.c: 27: SSP2BUF = data;
  3648  0274  0870               	movf	i2c_write@data,w
  3649  0275  0024               	movlb	4	; select bank4
  3650  0276  0099               	movwf	25	;volatile
  3651  0277                     l171:	
  3652                           ;i2c.c: 28: while(SSP2STATbits.BF);
  3653                           
  3654  0277  181C               	btfsc	28,0	;volatile
  3655  0278  2A7A               	goto	u681
  3656  0279  2A7B               	goto	u680
  3657  027A                     u681:
  3658  027A  2A77               	goto	l171
  3659  027B                     u680:
  3660  027B                     l174:
  3661  027B  1B1E               	btfsc	30,6	;volatile
  3662  027C  2A7E               	goto	u691
  3663  027D  2A7F               	goto	u690
  3664  027E                     u691:
  3665  027E  2A7B               	goto	l174
  3666  027F                     u690:
  3667  027F                     l1535:
  3668                           
  3669                           ;i2c.c: 30: i2c_wait();
  3670  027F  3182  2267  3182   	fcall	_i2c_wait
  3671  0282                     l177:
  3672  0282  0008               	return
  3673  0283                     __end_of_i2c_write:
  3674                           
  3675                           	psect	text14
  3676  0216                     __ptext14:	
  3677 ;; *************** function _i2c_stop *****************
  3678 ;; Defined at:
  3679 ;;		line 15 in file "i2c.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		None
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3693 ;;      Params:         0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_write_date
  3703 ;;		__read
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _i2c_stop
  3709  0216                     _i2c_stop:
  3710  0216                     l1527:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _i2c_stop: []
  3713                           
  3714                           
  3715                           ;i2c.c: 16: SSP2CON2bits.PEN = 1;
  3716  0216  0024               	movlb	4	; select bank4
  3717  0217  151E               	bsf	30,2	;volatile
  3718  0218                     l159:	
  3719                           ;i2c.c: 17: while(SSP2CON2bits.PEN);
  3720                           
  3721  0218  191E               	btfsc	30,2	;volatile
  3722  0219  2A1B               	goto	u661
  3723  021A  2A1C               	goto	u660
  3724  021B                     u661:
  3725  021B  2A18               	goto	l159
  3726  021C                     u660:
  3727  021C                     l162:
  3728  021C  0008               	return
  3729  021D                     __end_of_i2c_stop:
  3730                           
  3731                           	psect	text15
  3732  025D                     __ptext15:	
  3733 ;; *************** function _i2c_start *****************
  3734 ;; Defined at:
  3735 ;;		line 9 in file "i2c.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3749 ;;      Params:         0       0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		_i2c_wait
  3758 ;; This function is called by:
  3759 ;;		_write_date
  3760 ;;		__read
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _i2c_start
  3766  025D                     _i2c_start:
  3767  025D                     l1523:	
  3768                           ;incstack = 0
  3769                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3770                           
  3771                           
  3772                           ;i2c.c: 10: i2c_wait();
  3773  025D  3182  2267  3182   	fcall	_i2c_wait
  3774  0260                     l1525:
  3775                           
  3776                           ;i2c.c: 11: SSP2CON2bits.SEN = 1;
  3777  0260  0024               	movlb	4	; select bank4
  3778  0261  141E               	bsf	30,0	;volatile
  3779  0262                     l153:	
  3780                           ;i2c.c: 12: while(SSP2CON2bits.SEN);
  3781                           
  3782  0262  181E               	btfsc	30,0	;volatile
  3783  0263  2A65               	goto	u651
  3784  0264  2A66               	goto	u650
  3785  0265                     u651:
  3786  0265  2A62               	goto	l153
  3787  0266                     u650:
  3788  0266                     l156:
  3789  0266  0008               	return
  3790  0267                     __end_of_i2c_start:
  3791                           
  3792                           	psect	text16
  3793  0253                     __ptext16:	
  3794 ;; *************** function _i2c_repeated_start *****************
  3795 ;; Defined at:
  3796 ;;		line 20 in file "i2c.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3810 ;;      Params:         0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    1
  3817 ;; This function calls:
  3818 ;;		_i2c_wait
  3819 ;; This function is called by:
  3820 ;;		__read
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _i2c_repeated_start
  3826  0253                     _i2c_repeated_start:
  3827  0253                     l1529:	
  3828                           ;incstack = 0
  3829                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3830                           
  3831                           
  3832                           ;i2c.c: 21: i2c_wait();
  3833  0253  3182  2267  3182   	fcall	_i2c_wait
  3834  0256                     l1531:
  3835                           
  3836                           ;i2c.c: 22: SSP2CON2bits.RSEN = 1;
  3837  0256  0024               	movlb	4	; select bank4
  3838  0257  149E               	bsf	30,1	;volatile
  3839  0258                     l165:	
  3840                           ;i2c.c: 23: while(SSP2CON2bits.RSEN);
  3841                           
  3842  0258  189E               	btfsc	30,1	;volatile
  3843  0259  2A5B               	goto	u671
  3844  025A  2A5C               	goto	u670
  3845  025B                     u671:
  3846  025B  2A58               	goto	l165
  3847  025C                     u670:
  3848  025C                     l168:
  3849  025C  0008               	return
  3850  025D                     __end_of_i2c_repeated_start:
  3851                           
  3852                           	psect	text17
  3853  02FB                     __ptext17:	
  3854 ;; *************** function _i2c_read *****************
  3855 ;; Defined at:
  3856 ;;		line 33 in file "i2c.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  ack             1    wreg     unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  ack             1    1[COMMON] unsigned char 
  3861 ;;  data            1    2[COMMON] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      unsigned char 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3871 ;;      Params:         0       0       0       0       0       0
  3872 ;;      Locals:         2       0       0       0       0       0
  3873 ;;      Temps:          1       0       0       0       0       0
  3874 ;;      Totals:         3       0       0       0       0       0
  3875 ;;Total ram usage:        3 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    1
  3878 ;; This function calls:
  3879 ;;		_i2c_wait
  3880 ;; This function is called by:
  3881 ;;		__read
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _i2c_read
  3887  02FB                     _i2c_read:
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3891                           ;i2c_read@ack stored from wreg
  3892  02FB  00F1               	movwf	i2c_read@ack
  3893  02FC                     l1537:
  3894                           
  3895                           ;i2c.c: 34: uint8_t data;;i2c.c: 36: SSP2CON2bits.ACKDT = ack;
  3896  02FC  0C71               	rrf	i2c_read@ack,w
  3897  02FD  0024               	movlb	4	; select bank4
  3898  02FE  1C03               	skipc
  3899  02FF  129E               	bcf	30,5	;volatile
  3900  0300  1803               	skipnc
  3901  0301  169E               	bsf	30,5	;volatile
  3902  0302                     l1539:
  3903                           
  3904                           ;i2c.c: 37: SSP2CON2bits.RCEN = 1;
  3905  0302  159E               	bsf	30,3	;volatile
  3906  0303                     l180:	
  3907                           ;i2c.c: 38: while(!SSP2STATbits.BF);
  3908                           
  3909  0303  1C1C               	btfss	28,0	;volatile
  3910  0304  2B06               	goto	u701
  3911  0305  2B07               	goto	u700
  3912  0306                     u701:
  3913  0306  2B03               	goto	l180
  3914  0307                     u700:
  3915  0307                     l182:
  3916                           
  3917                           ;i2c.c: 39: SSP2CON2bits.ACKEN = 1;
  3918  0307  161E               	bsf	30,4	;volatile
  3919  0308                     l1541:
  3920                           
  3921                           ;i2c.c: 40: data = SSP2BUF;
  3922  0308  0819               	movf	25,w	;volatile
  3923  0309  00F0               	movwf	??_i2c_read
  3924  030A  0870               	movf	??_i2c_read,w
  3925  030B  00F2               	movwf	i2c_read@data
  3926  030C                     l1543:
  3927                           
  3928                           ;i2c.c: 41: SSP2CON1bits.SSPOV = 0;
  3929  030C  131D               	bcf	29,6	;volatile
  3930  030D                     l1545:
  3931                           
  3932                           ;i2c.c: 42: i2c_wait();
  3933  030D  3182  2267  3182   	fcall	_i2c_wait
  3934  0310                     l1547:
  3935                           
  3936                           ;i2c.c: 44: return data;
  3937  0310  0872               	movf	i2c_read@data,w
  3938  0311                     l183:
  3939  0311  0008               	return
  3940  0312                     __end_of_i2c_read:
  3941                           
  3942                           	psect	text18
  3943  0267                     __ptext18:	
  3944 ;; *************** function _i2c_wait *****************
  3945 ;; Defined at:
  3946 ;;		line 5 in file "i2c.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3960 ;;      Params:         0       0       0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0
  3963 ;;      Totals:         0       0       0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_i2c_start
  3970 ;;		_i2c_repeated_start
  3971 ;;		_i2c_write
  3972 ;;		_i2c_read
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _i2c_wait
  3978  0267                     _i2c_wait:
  3979  0267                     l1503:	
  3980                           ;incstack = 0
  3981                           ; Regs used in _i2c_wait: [wreg+status,2]
  3982                           
  3983  0267                     l1505:	
  3984                           ;i2c.c: 6: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  3985                           
  3986  0267  0024               	movlb	4	; select bank4
  3987  0268  081E               	movf	30,w	;volatile
  3988  0269  391F               	andlw	31
  3989  026A  1D03               	btfss	3,2
  3990  026B  2A6D               	goto	u611
  3991  026C  2A6E               	goto	u610
  3992  026D                     u611:
  3993  026D  2A67               	goto	l1505
  3994  026E                     u610:
  3995  026E                     l1507:
  3996  026E  191C               	btfsc	28,2	;volatile
  3997  026F  2A71               	goto	u621
  3998  0270  2A72               	goto	u620
  3999  0271                     u621:
  4000  0271  2A67               	goto	l1505
  4001  0272                     u620:
  4002  0272                     l150:
  4003  0272  0008               	return
  4004  0273                     __end_of_i2c_wait:
  4005                           
  4006                           	psect	text19
  4007  02BB                     __ptext19:	
  4008 ;; *************** function _bcd_2_decimal *****************
  4009 ;; Defined at:
  4010 ;;		line 19 in file "DS3231.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  number          1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  number          1    7[COMMON] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      unsigned char 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4024 ;;      Params:         0       0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0
  4026 ;;      Temps:          3       0       0       0       0       0
  4027 ;;      Totals:         4       0       0       0       0       0
  4028 ;;Total ram usage:        4 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    1
  4031 ;; This function calls:
  4032 ;;		___bmul
  4033 ;; This function is called by:
  4034 ;;		__read
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _bcd_2_decimal
  4040  02BB                     _bcd_2_decimal:
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  4044                           ;bcd_2_decimal@number stored from wreg
  4045  02BB  00F7               	movwf	bcd_2_decimal@number
  4046  02BC                     l1551:
  4047                           
  4048                           ;DS3231.c: 20: return ((number >> 4) * 10 + (number & 0x0F));
  4049  02BC  300F               	movlw	15
  4050  02BD  0577               	andwf	bcd_2_decimal@number,w
  4051  02BE  00F4               	movwf	??_bcd_2_decimal
  4052  02BF  300A               	movlw	10
  4053  02C0  00F5               	movwf	??_bcd_2_decimal+1
  4054  02C1  0875               	movf	??_bcd_2_decimal+1,w
  4055  02C2  00F0               	movwf	___bmul@multiplicand
  4056  02C3  0877               	movf	bcd_2_decimal@number,w
  4057  02C4  00F6               	movwf	??_bcd_2_decimal+2
  4058  02C5  3004               	movlw	4
  4059  02C6                     u715:
  4060  02C6  36F6               	lsrf	??_bcd_2_decimal+2,f
  4061  02C7  0B89               	decfsz	9,f
  4062  02C8  2AC6               	goto	u715
  4063  02C9  0876               	movf	??_bcd_2_decimal+2,w
  4064  02CA  3182  22CF  3182   	fcall	___bmul
  4065  02CD  0774               	addwf	??_bcd_2_decimal,w
  4066  02CE                     l198:
  4067  02CE  0008               	return
  4068  02CF                     __end_of_bcd_2_decimal:
  4069                           
  4070                           	psect	text20
  4071  02CF                     __ptext20:	
  4072 ;; *************** function ___bmul *****************
  4073 ;; Defined at:
  4074 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  multiplier      1    wreg     unsigned char 
  4077 ;;  multiplicand    1    0[COMMON] unsigned char 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  multiplier      1    3[COMMON] unsigned char 
  4080 ;;  product         1    2[COMMON] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      unsigned char 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4090 ;;      Params:         1       0       0       0       0       0
  4091 ;;      Locals:         2       0       0       0       0       0
  4092 ;;      Temps:          1       0       0       0       0       0
  4093 ;;      Totals:         4       0       0       0       0       0
  4094 ;;Total ram usage:        4 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_bcd_2_decimal
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function ___bmul
  4105  02CF                     ___bmul:
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4109                           ;___bmul@multiplier stored from wreg
  4110  02CF  00F3               	movwf	___bmul@multiplier
  4111  02D0                     l1509:
  4112  02D0  01F2               	clrf	___bmul@product
  4113  02D1                     l1511:
  4114  02D1  1C73               	btfss	___bmul@multiplier,0
  4115  02D2  2AD4               	goto	u631
  4116  02D3  2AD5               	goto	u630
  4117  02D4                     u631:
  4118  02D4  2AD9               	goto	l1515
  4119  02D5                     u630:
  4120  02D5                     l1513:
  4121  02D5  0870               	movf	___bmul@multiplicand,w
  4122  02D6  00F1               	movwf	??___bmul
  4123  02D7  0871               	movf	??___bmul,w
  4124  02D8  07F2               	addwf	___bmul@product,f
  4125  02D9                     l1515:
  4126  02D9  1003               	clrc
  4127  02DA  0DF0               	rlf	___bmul@multiplicand,f
  4128  02DB                     l1517:
  4129  02DB  1003               	clrc
  4130  02DC  0CF3               	rrf	___bmul@multiplier,f
  4131  02DD  0873               	movf	___bmul@multiplier,w
  4132  02DE  1D03               	btfss	3,2
  4133  02DF  2AE1               	goto	u641
  4134  02E0  2AE2               	goto	u640
  4135  02E1                     u641:
  4136  02E1  2AD1               	goto	l1511
  4137  02E2                     u640:
  4138  02E2                     l1519:
  4139  02E2  0872               	movf	___bmul@product,w
  4140  02E3                     l555:
  4141  02E3  0008               	return
  4142  02E4                     __end_of___bmul:
  4143                           
  4144                           	psect	text21
  4145  06D9                     __ptext21:	
  4146 ;; *************** function _money_display *****************
  4147 ;; Defined at:
  4148 ;;		line 137 in file "main.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  value           2   11[COMMON] unsigned int 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4162 ;;      Params:         0       0       0       0       0       0
  4163 ;;      Locals:         2       0       0       0       0       0
  4164 ;;      Temps:          1       0       0       0       0       0
  4165 ;;      Totals:         3       0       0       0       0       0
  4166 ;;Total ram usage:        3 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		___lwdiv
  4171 ;;		___lwmod
  4172 ;;		_encode_digit
  4173 ;;		_m_set_segments
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           
  4180                           ;psect for function _money_display
  4181  06D9                     _money_display:
  4182  06D9                     l2089:	
  4183                           ;incstack = 0
  4184                           ; Regs used in _money_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4185                           
  4186                           
  4187                           ;main.c: 138: uint16_t value = money;
  4188  06D9  0020               	movlb	0	; select bank0
  4189  06DA  0844               	movf	_money+1,w
  4190  06DB  00FC               	movwf	money_display@value+1
  4191  06DC  0843               	movf	_money,w
  4192  06DD  00FB               	movwf	money_display@value
  4193  06DE                     l2091:
  4194                           
  4195                           ;main.c: 140: m_segments[0] = encode_digit(value / 1000);
  4196  06DE  30E8               	movlw	232
  4197  06DF  00F0               	movwf	___lwdiv@divisor
  4198  06E0  3003               	movlw	3
  4199  06E1  00F1               	movwf	___lwdiv@divisor+1
  4200  06E2  087C               	movf	money_display@value+1,w
  4201  06E3  00F3               	movwf	___lwdiv@dividend+1
  4202  06E4  087B               	movf	money_display@value,w
  4203  06E5  00F2               	movwf	___lwdiv@dividend
  4204  06E6  3184  2495  3186   	fcall	___lwdiv
  4205  06E9  0870               	movf	?___lwdiv,w
  4206  06EA  3182  221D  3186   	fcall	_encode_digit
  4207  06ED  00FA               	movwf	??_money_display
  4208  06EE  087A               	movf	??_money_display,w
  4209  06EF  0020               	movlb	0	; select bank0
  4210  06F0  00AA               	movwf	_m_segments
  4211  06F1                     l2093:
  4212                           
  4213                           ;main.c: 141: value %= 1000;
  4214  06F1  30E8               	movlw	232
  4215  06F2  00F0               	movwf	___lwmod@divisor
  4216  06F3  3003               	movlw	3
  4217  06F4  00F1               	movwf	___lwmod@divisor+1
  4218  06F5  087C               	movf	money_display@value+1,w
  4219  06F6  00F3               	movwf	___lwmod@dividend+1
  4220  06F7  087B               	movf	money_display@value,w
  4221  06F8  00F2               	movwf	___lwmod@dividend
  4222  06F9  3183  2381  3186   	fcall	___lwmod
  4223  06FC  0871               	movf	?___lwmod+1,w
  4224  06FD  00FC               	movwf	money_display@value+1
  4225  06FE  0870               	movf	?___lwmod,w
  4226  06FF  00FB               	movwf	money_display@value
  4227  0700                     l2095:
  4228                           
  4229                           ;main.c: 142: m_segments[1] = encode_digit(value / 100);
  4230  0700  3064               	movlw	100
  4231  0701  00F0               	movwf	___lwdiv@divisor
  4232  0702  3000               	movlw	0
  4233  0703  00F1               	movwf	___lwdiv@divisor+1
  4234  0704  087C               	movf	money_display@value+1,w
  4235  0705  00F3               	movwf	___lwdiv@dividend+1
  4236  0706  087B               	movf	money_display@value,w
  4237  0707  00F2               	movwf	___lwdiv@dividend
  4238  0708  3184  2495  3186   	fcall	___lwdiv
  4239  070B  0870               	movf	?___lwdiv,w
  4240  070C  3182  221D  3186   	fcall	_encode_digit
  4241  070F  00FA               	movwf	??_money_display
  4242  0710  087A               	movf	??_money_display,w
  4243  0711  0020               	movlb	0	; select bank0
  4244  0712  00AB               	movwf	_m_segments+1
  4245  0713                     l2097:
  4246                           
  4247                           ;main.c: 143: value %= 100;
  4248  0713  3064               	movlw	100
  4249  0714  00F0               	movwf	___lwmod@divisor
  4250  0715  3000               	movlw	0
  4251  0716  00F1               	movwf	___lwmod@divisor+1
  4252  0717  087C               	movf	money_display@value+1,w
  4253  0718  00F3               	movwf	___lwmod@dividend+1
  4254  0719  087B               	movf	money_display@value,w
  4255  071A  00F2               	movwf	___lwmod@dividend
  4256  071B  3183  2381  3186   	fcall	___lwmod
  4257  071E  0871               	movf	?___lwmod+1,w
  4258  071F  00FC               	movwf	money_display@value+1
  4259  0720  0870               	movf	?___lwmod,w
  4260  0721  00FB               	movwf	money_display@value
  4261  0722                     l2099:
  4262                           
  4263                           ;main.c: 144: m_segments[2] = encode_digit(value / 10);
  4264  0722  300A               	movlw	10
  4265  0723  00F0               	movwf	___lwdiv@divisor
  4266  0724  3000               	movlw	0
  4267  0725  00F1               	movwf	___lwdiv@divisor+1
  4268  0726  087C               	movf	money_display@value+1,w
  4269  0727  00F3               	movwf	___lwdiv@dividend+1
  4270  0728  087B               	movf	money_display@value,w
  4271  0729  00F2               	movwf	___lwdiv@dividend
  4272  072A  3184  2495  3186   	fcall	___lwdiv
  4273  072D  0870               	movf	?___lwdiv,w
  4274  072E  3182  221D  3186   	fcall	_encode_digit
  4275  0731  00FA               	movwf	??_money_display
  4276  0732  087A               	movf	??_money_display,w
  4277  0733  0020               	movlb	0	; select bank0
  4278  0734  00AC               	movwf	_m_segments+2
  4279  0735                     l2101:
  4280                           
  4281                           ;main.c: 145: value %= 10;
  4282  0735  300A               	movlw	10
  4283  0736  00F0               	movwf	___lwmod@divisor
  4284  0737  3000               	movlw	0
  4285  0738  00F1               	movwf	___lwmod@divisor+1
  4286  0739  087C               	movf	money_display@value+1,w
  4287  073A  00F3               	movwf	___lwmod@dividend+1
  4288  073B  087B               	movf	money_display@value,w
  4289  073C  00F2               	movwf	___lwmod@dividend
  4290  073D  3183  2381  3186   	fcall	___lwmod
  4291  0740  0871               	movf	?___lwmod+1,w
  4292  0741  00FC               	movwf	money_display@value+1
  4293  0742  0870               	movf	?___lwmod,w
  4294  0743  00FB               	movwf	money_display@value
  4295  0744                     l2103:
  4296                           
  4297                           ;main.c: 146: m_segments[3] = encode_digit(value);
  4298  0744  087B               	movf	money_display@value,w
  4299  0745  3182  221D  3186   	fcall	_encode_digit
  4300  0748  00FA               	movwf	??_money_display
  4301  0749  087A               	movf	??_money_display,w
  4302  074A  0020               	movlb	0	; select bank0
  4303  074B  00AD               	movwf	_m_segments+3
  4304  074C                     l2105:
  4305                           
  4306                           ;main.c: 148: m_set_segments(m_segments, 4, 0);
  4307  074C  3004               	movlw	4
  4308  074D  00FA               	movwf	??_money_display
  4309  074E  087A               	movf	??_money_display,w
  4310  074F  00F5               	movwf	m_set_segments@length
  4311  0750  01F6               	clrf	m_set_segments@pos
  4312  0751  302A               	movlw	(low (_m_segments| 0))& (0+255)
  4313  0752  3184  2421  3186   	fcall	_m_set_segments
  4314  0755                     l132:
  4315  0755  0008               	return
  4316  0756                     __end_of_money_display:
  4317                           
  4318                           	psect	text22
  4319  0421                     __ptext22:	
  4320 ;; *************** function _m_set_segments *****************
  4321 ;; Defined at:
  4322 ;;		line 84 in file "TM1637_m.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  segments        1    wreg     PTR const unsigned char 
  4325 ;;		 -> m_segments(4), 
  4326 ;;  length          1    5[COMMON] unsigned char 
  4327 ;;  pos             1    6[COMMON] unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  segments        1    8[COMMON] PTR const unsigned char 
  4330 ;;		 -> m_segments(4), 
  4331 ;;  k               1    9[COMMON] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4341 ;;      Params:         2       0       0       0       0       0
  4342 ;;      Locals:         2       0       0       0       0       0
  4343 ;;      Temps:          1       0       0       0       0       0
  4344 ;;      Totals:         5       0       0       0       0       0
  4345 ;;Total ram usage:        5 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    1
  4348 ;; This function calls:
  4349 ;;		_m_start
  4350 ;;		_m_stop
  4351 ;;		_m_write_data
  4352 ;; This function is called by:
  4353 ;;		_money_display
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           
  4358                           ;psect for function _m_set_segments
  4359  0421                     _m_set_segments:
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _m_set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4363                           ;m_set_segments@segments stored from wreg
  4364  0421  00F8               	movwf	m_set_segments@segments
  4365  0422                     l2017:
  4366                           
  4367                           ;TM1637_m.c: 87: m_start();
  4368  0422  3182  2225  3184   	fcall	_m_start
  4369  0425                     l2019:
  4370                           
  4371                           ;TM1637_m.c: 88: m_write_data(0x40);
  4372  0425  3040               	movlw	64
  4373  0426  3183  23B5  3184   	fcall	_m_write_data
  4374  0429                     l2021:
  4375                           
  4376                           ;TM1637_m.c: 89: m_stop();
  4377  0429  3182  222E  3184   	fcall	_m_stop
  4378  042C                     l2023:
  4379                           
  4380                           ;TM1637_m.c: 92: m_start();
  4381  042C  3182  2225  3184   	fcall	_m_start
  4382  042F                     l2025:
  4383                           
  4384                           ;TM1637_m.c: 93: m_write_data(0xC0 + (pos & 0x03));
  4385  042F  0876               	movf	m_set_segments@pos,w
  4386  0430  3903               	andlw	3
  4387  0431  3EC0               	addlw	192
  4388  0432  3183  23B5  3184   	fcall	_m_write_data
  4389  0435                     l2027:
  4390                           
  4391                           ;TM1637_m.c: 96: for(uint8_t k = 0; k < length; k++){
  4392  0435  01F9               	clrf	m_set_segments@k
  4393  0436  2C45               	goto	l2033
  4394  0437                     l2029:
  4395                           
  4396                           ;TM1637_m.c: 97: m_write_data(segments[k]);
  4397  0437  0879               	movf	m_set_segments@k,w
  4398  0438  0778               	addwf	m_set_segments@segments,w
  4399  0439  00F7               	movwf	??_m_set_segments
  4400  043A  0877               	movf	??_m_set_segments,w
  4401  043B  0086               	movwf	6
  4402  043C  0187               	clrf	7
  4403  043D  0801               	movf	1,w
  4404  043E  3183  23B5  3184   	fcall	_m_write_data
  4405  0441                     l2031:
  4406  0441  3001               	movlw	1
  4407  0442  00F7               	movwf	??_m_set_segments
  4408  0443  0877               	movf	??_m_set_segments,w
  4409  0444  07F9               	addwf	m_set_segments@k,f
  4410  0445                     l2033:
  4411  0445  0875               	movf	m_set_segments@length,w
  4412  0446  0279               	subwf	m_set_segments@k,w
  4413  0447  1C03               	skipc
  4414  0448  2C4A               	goto	u1251
  4415  0449  2C4B               	goto	u1250
  4416  044A                     u1251:
  4417  044A  2C37               	goto	l2029
  4418  044B                     u1250:
  4419  044B                     l2035:
  4420                           
  4421                           ;TM1637_m.c: 98: };TM1637_m.c: 100: m_stop();
  4422  044B  3182  222E  3184   	fcall	_m_stop
  4423                           
  4424                           ;TM1637_m.c: 103: m_start();
  4425  044E  3182  2225  3184   	fcall	_m_start
  4426  0451                     l2037:
  4427                           
  4428                           ;TM1637_m.c: 104: m_write_data(0x80 + (m_brightness & 0x0f));
  4429  0451  087D               	movf	_m_brightness,w
  4430  0452  390F               	andlw	15
  4431  0453  3E80               	addlw	128
  4432  0454  3183  23B5  3184   	fcall	_m_write_data
  4433  0457                     l2039:
  4434                           
  4435                           ;TM1637_m.c: 105: m_stop();
  4436  0457  3182  222E  3184   	fcall	_m_stop
  4437  045A                     l379:
  4438  045A  0008               	return
  4439  045B                     __end_of_m_set_segments:
  4440                           
  4441                           	psect	text23
  4442  03B5                     __ptext23:	
  4443 ;; *************** function _m_write_data *****************
  4444 ;; Defined at:
  4445 ;;		line 38 in file "TM1637_m.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  b               1    wreg     unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  b               1    1[COMMON] unsigned char 
  4450 ;;  i               1    4[COMMON] unsigned char 
  4451 ;;  data            1    3[COMMON] unsigned char 
  4452 ;;  ack             1    2[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4462 ;;      Params:         0       0       0       0       0       0
  4463 ;;      Locals:         4       0       0       0       0       0
  4464 ;;      Temps:          1       0       0       0       0       0
  4465 ;;      Totals:         5       0       0       0       0       0
  4466 ;;Total ram usage:        5 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_m_set_segments
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _m_write_data
  4477  03B5                     _m_write_data:
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _m_write_data: [wreg+status,2+status,0]
  4481                           ;m_write_data@b stored from wreg
  4482  03B5  00F1               	movwf	m_write_data@b
  4483  03B6                     l1971:
  4484                           
  4485                           ;TM1637_m.c: 39: uint8_t data = b;
  4486  03B6  0871               	movf	m_write_data@b,w
  4487  03B7  00F0               	movwf	??_m_write_data
  4488  03B8  0870               	movf	??_m_write_data,w
  4489  03B9  00F3               	movwf	m_write_data@data
  4490  03BA                     l1973:
  4491  03BA  0021               	movlb	1	; select bank1
  4492  03BB  108C               	bcf	12,1	;volatile
  4493  03BC                     l1975:
  4494                           
  4495                           ;TM1637_m.c: 42: for(uint8_t i = 0; i < 8; i++){
  4496  03BC  01F4               	clrf	m_write_data@i
  4497  03BD                     l343:	
  4498                           ;TM1637_m.c: 43: do { LATAbits.LATA1 = 0; } while(0);
  4499                           
  4500  03BD  0022               	movlb	2	; select bank2
  4501  03BE  108C               	bcf	12,1	;volatile
  4502  03BF                     l344:
  4503                           
  4504                           ;TM1637_m.c: 45: if(data & 0x01){
  4505  03BF  1C73               	btfss	m_write_data@data,0
  4506  03C0  2BC2               	goto	u1211
  4507  03C1  2BC3               	goto	u1210
  4508  03C2                     u1211:
  4509  03C2  2BC5               	goto	l349
  4510  03C3                     u1210:
  4511  03C3                     l346:	
  4512                           ;TM1637_m.c: 46: do { LATAbits.LATA2 = 1; } while(0);
  4513                           
  4514  03C3  150C               	bsf	12,2	;volatile
  4515  03C4  2BC6               	goto	l351
  4516  03C5                     l349:	
  4517                           ;TM1637_m.c: 48: do { LATAbits.LATA2 = 0; } while(0);
  4518                           
  4519  03C5  110C               	bcf	12,2	;volatile
  4520  03C6                     l351:	
  4521                           ;TM1637_m.c: 49: };TM1637_m.c: 51: do { LATAbits.LATA1 = 1; } while(0);
  4522                           
  4523  03C6  148C               	bsf	12,1	;volatile
  4524  03C7                     l1981:
  4525                           
  4526                           ;TM1637_m.c: 53: data = data >> 1;
  4527  03C7  3673               	lsrf	m_write_data@data,w
  4528  03C8  00F0               	movwf	??_m_write_data
  4529  03C9  0870               	movf	??_m_write_data,w
  4530  03CA  00F3               	movwf	m_write_data@data
  4531  03CB  3001               	movlw	1
  4532  03CC  00F0               	movwf	??_m_write_data
  4533  03CD  0870               	movf	??_m_write_data,w
  4534  03CE  07F4               	addwf	m_write_data@i,f
  4535  03CF                     l1983:
  4536  03CF  3008               	movlw	8
  4537  03D0  0274               	subwf	m_write_data@i,w
  4538  03D1  1C03               	skipc
  4539  03D2  2BD4               	goto	u1221
  4540  03D3  2BD5               	goto	u1220
  4541  03D4                     u1221:
  4542  03D4  2BBD               	goto	l343
  4543  03D5                     u1220:
  4544  03D5                     l353:	
  4545                           ;TM1637_m.c: 54: };TM1637_m.c: 57: do { LATAbits.LATA1 = 0; } while(0);
  4546                           
  4547  03D5  108C               	bcf	12,1	;volatile
  4548  03D6                     l355:	
  4549                           ;TM1637_m.c: 58: do { LATAbits.LATA2 = 1; } while(0);
  4550                           
  4551  03D6  150C               	bsf	12,2	;volatile
  4552  03D7                     l357:	
  4553                           ;TM1637_m.c: 61: do { LATAbits.LATA1 = 1; } while(0);
  4554                           
  4555  03D7  148C               	bsf	12,1	;volatile
  4556  03D8                     l359:	
  4557                           ;TM1637_m.c: 63: do { TRISAbits.TRISA2 = 1; } while(0);
  4558                           
  4559  03D8  0021               	movlb	1	; select bank1
  4560  03D9  150C               	bsf	12,2	;volatile
  4561  03DA                     l1985:
  4562                           
  4563                           ;TM1637_m.c: 65: uint8_t ack = PORTAbits.RA2;
  4564  03DA  3000               	movlw	0
  4565  03DB  0020               	movlb	0	; select bank0
  4566  03DC  190C               	btfsc	12,2	;volatile
  4567  03DD  3001               	movlw	1
  4568  03DE  00F2               	movwf	m_write_data@ack
  4569  03DF                     l1987:
  4570                           
  4571                           ;TM1637_m.c: 66: if(ack == 0){
  4572  03DF  0872               	movf	m_write_data@ack,w
  4573  03E0  1D03               	btfss	3,2
  4574  03E1  2BE3               	goto	u1231
  4575  03E2  2BE4               	goto	u1230
  4576  03E3                     u1231:
  4577  03E3  2BE8               	goto	l366
  4578  03E4                     u1230:
  4579  03E4                     l362:	
  4580                           ;TM1637_m.c: 67: do { TRISAbits.TRISA2 = 0; } while(0);
  4581                           
  4582  03E4  0021               	movlb	1	; select bank1
  4583  03E5  110C               	bcf	12,2	;volatile
  4584  03E6                     l364:	
  4585                           ;TM1637_m.c: 68: do { LATAbits.LATA2 = 0; } while(0);
  4586                           
  4587  03E6  0022               	movlb	2	; select bank2
  4588  03E7  110C               	bcf	12,2	;volatile
  4589  03E8                     l366:	
  4590                           ;TM1637_m.c: 69: };TM1637_m.c: 71: do { TRISAbits.TRISA2 = 0; } while(0);
  4591                           
  4592  03E8  0021               	movlb	1	; select bank1
  4593  03E9  110C               	bcf	12,2	;volatile
  4594  03EA                     l368:
  4595  03EA  0008               	return
  4596  03EB                     __end_of_m_write_data:
  4597                           
  4598                           	psect	text24
  4599  022E                     __ptext24:	
  4600 ;; *************** function _m_stop *****************
  4601 ;; Defined at:
  4602 ;;		line 27 in file "TM1637_m.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		None
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4616 ;;      Params:         0       0       0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0
  4619 ;;      Totals:         0       0       0       0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_m_set_segments
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function _m_stop
  4631  022E                     _m_stop:
  4632  022E                     l324:	
  4633                           ;incstack = 0
  4634                           ; Regs used in _m_stop: []
  4635                           ;TM1637_m.c: 28: do { TRISAbits.TRISA2 = 0; } while(0);
  4636                           
  4637  022E  0021               	movlb	1	; select bank1
  4638  022F  110C               	bcf	12,2	;volatile
  4639  0230                     l326:	
  4640                           ;TM1637_m.c: 29: do { TRISAbits.TRISA1 = 0; } while(0);
  4641                           
  4642  0230  108C               	bcf	12,1	;volatile
  4643  0231                     l328:	
  4644                           ;TM1637_m.c: 31: do { LATAbits.LATA1 = 0; } while(0);
  4645                           
  4646  0231  0022               	movlb	2	; select bank2
  4647  0232  108C               	bcf	12,1	;volatile
  4648  0233                     l330:	
  4649                           ;TM1637_m.c: 32: do { LATAbits.LATA2 = 0; } while(0);
  4650                           
  4651  0233  110C               	bcf	12,2	;volatile
  4652  0234                     l332:	
  4653                           ;TM1637_m.c: 34: do { LATAbits.LATA1 = 1; } while(0);
  4654                           
  4655  0234  148C               	bsf	12,1	;volatile
  4656  0235                     l334:	
  4657                           ;TM1637_m.c: 35: do { LATAbits.LATA2 = 1; } while(0);
  4658                           
  4659  0235  150C               	bsf	12,2	;volatile
  4660  0236                     l336:
  4661  0236  0008               	return
  4662  0237                     __end_of_m_stop:
  4663                           
  4664                           	psect	text25
  4665  0225                     __ptext25:	
  4666 ;; *************** function _m_start *****************
  4667 ;; Defined at:
  4668 ;;		line 16 in file "TM1637_m.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		None
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4682 ;;      Params:         0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_m_set_segments
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _m_start
  4697  0225                     _m_start:
  4698  0225                     l309:	
  4699                           ;incstack = 0
  4700                           ; Regs used in _m_start: []
  4701                           ;TM1637_m.c: 17: do { TRISAbits.TRISA2 = 0; } while(0);
  4702                           
  4703  0225  0021               	movlb	1	; select bank1
  4704  0226  110C               	bcf	12,2	;volatile
  4705  0227                     l311:	
  4706                           ;TM1637_m.c: 18: do { TRISAbits.TRISA1 = 0; } while(0);
  4707                           
  4708  0227  108C               	bcf	12,1	;volatile
  4709  0228                     l313:	
  4710                           ;TM1637_m.c: 20: do { LATAbits.LATA2 = 1; } while(0);
  4711                           
  4712  0228  0022               	movlb	2	; select bank2
  4713  0229  150C               	bsf	12,2	;volatile
  4714  022A                     l315:	
  4715                           ;TM1637_m.c: 21: do { LATAbits.LATA1 = 1; } while(0);
  4716                           
  4717  022A  148C               	bsf	12,1	;volatile
  4718  022B                     l317:	
  4719                           ;TM1637_m.c: 23: do { LATAbits.LATA2 = 0; } while(0);
  4720                           
  4721  022B  110C               	bcf	12,2	;volatile
  4722  022C                     l319:	
  4723                           ;TM1637_m.c: 24: do { LATAbits.LATA1 = 0; } while(0);
  4724                           
  4725  022C  108C               	bcf	12,1	;volatile
  4726  022D                     l321:
  4727  022D  0008               	return
  4728  022E                     __end_of_m_start:
  4729                           
  4730                           	psect	text26
  4731  021D                     __ptext26:	
  4732 ;; *************** function _encode_digit *****************
  4733 ;; Defined at:
  4734 ;;		line 107 in file "TM1637.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  digit           1    wreg     unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  digit           1    0[COMMON] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4748 ;;      Params:         0       0       0       0       0       0
  4749 ;;      Locals:         1       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0
  4751 ;;      Totals:         1       0       0       0       0       0
  4752 ;;Total ram usage:        1 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_rtc_display
  4758 ;;		_money_display
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function _encode_digit
  4764  021D                     _encode_digit:
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4768                           ;encode_digit@digit stored from wreg
  4769  021D  00F0               	movwf	encode_digit@digit
  4770  021E                     l1989:
  4771                           
  4772                           ;TM1637.c: 108: return segdata[digit & 0x0f];
  4773  021E  0870               	movf	encode_digit@digit,w
  4774  021F  390F               	andlw	15
  4775  0220  3E20               	addlw	(low (_segdata| 0))& (0+255)
  4776  0221  0086               	movwf	6
  4777  0222  0187               	clrf	7
  4778  0223  0801               	movf	1,w
  4779  0224                     l296:
  4780  0224  0008               	return
  4781  0225                     __end_of_encode_digit:
  4782                           
  4783                           	psect	text27
  4784  0381                     __ptext27:	
  4785 ;; *************** function ___lwmod *****************
  4786 ;; Defined at:
  4787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  divisor         2    0[COMMON] unsigned int 
  4790 ;;  dividend        2    2[COMMON] unsigned int 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  counter         1    5[COMMON] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  2    0[COMMON] unsigned int 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4802 ;;      Params:         4       0       0       0       0       0
  4803 ;;      Locals:         1       0       0       0       0       0
  4804 ;;      Temps:          1       0       0       0       0       0
  4805 ;;      Totals:         6       0       0       0       0       0
  4806 ;;Total ram usage:        6 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_money_display
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function ___lwmod
  4817  0381                     ___lwmod:
  4818  0381                     l2067:	
  4819                           ;incstack = 0
  4820                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4821                           
  4822  0381  0870               	movf	___lwmod@divisor,w
  4823  0382  0471               	iorwf	___lwmod@divisor+1,w
  4824  0383  1903               	btfsc	3,2
  4825  0384  2B86               	goto	u1331
  4826  0385  2B87               	goto	u1330
  4827  0386                     u1331:
  4828  0386  2BB0               	goto	l2085
  4829  0387                     u1330:
  4830  0387                     l2069:
  4831  0387  01F5               	clrf	___lwmod@counter
  4832  0388  0AF5               	incf	___lwmod@counter,f
  4833  0389  2B93               	goto	l2075
  4834  038A                     l2071:
  4835  038A  3001               	movlw	1
  4836  038B                     u1345:
  4837  038B  35F0               	lslf	___lwmod@divisor,f
  4838  038C  0DF1               	rlf	___lwmod@divisor+1,f
  4839  038D  0B89               	decfsz	9,f
  4840  038E  2B8B               	goto	u1345
  4841  038F                     l2073:
  4842  038F  3001               	movlw	1
  4843  0390  00F4               	movwf	??___lwmod
  4844  0391  0874               	movf	??___lwmod,w
  4845  0392  07F5               	addwf	___lwmod@counter,f
  4846  0393                     l2075:
  4847  0393  1FF1               	btfss	___lwmod@divisor+1,7
  4848  0394  2B96               	goto	u1351
  4849  0395  2B97               	goto	u1350
  4850  0396                     u1351:
  4851  0396  2B8A               	goto	l2071
  4852  0397                     u1350:
  4853  0397                     l2077:
  4854  0397  0871               	movf	___lwmod@divisor+1,w
  4855  0398  0273               	subwf	___lwmod@dividend+1,w
  4856  0399  1D03               	skipz
  4857  039A  2B9D               	goto	u1365
  4858  039B  0870               	movf	___lwmod@divisor,w
  4859  039C  0272               	subwf	___lwmod@dividend,w
  4860  039D                     u1365:
  4861  039D  1C03               	skipc
  4862  039E  2BA0               	goto	u1361
  4863  039F  2BA1               	goto	u1360
  4864  03A0                     u1361:
  4865  03A0  2BA5               	goto	l2081
  4866  03A1                     u1360:
  4867  03A1                     l2079:
  4868  03A1  0870               	movf	___lwmod@divisor,w
  4869  03A2  02F2               	subwf	___lwmod@dividend,f
  4870  03A3  0871               	movf	___lwmod@divisor+1,w
  4871  03A4  3BF3               	subwfb	___lwmod@dividend+1,f
  4872  03A5                     l2081:
  4873  03A5  3001               	movlw	1
  4874  03A6                     u1375:
  4875  03A6  36F1               	lsrf	___lwmod@divisor+1,f
  4876  03A7  0CF0               	rrf	___lwmod@divisor,f
  4877  03A8  0B89               	decfsz	9,f
  4878  03A9  2BA6               	goto	u1375
  4879  03AA                     l2083:
  4880  03AA  3001               	movlw	1
  4881  03AB  02F5               	subwf	___lwmod@counter,f
  4882  03AC  1D03               	btfss	3,2
  4883  03AD  2BAF               	goto	u1381
  4884  03AE  2BB0               	goto	u1380
  4885  03AF                     u1381:
  4886  03AF  2B97               	goto	l2077
  4887  03B0                     u1380:
  4888  03B0                     l2085:
  4889  03B0  0873               	movf	___lwmod@dividend+1,w
  4890  03B1  00F1               	movwf	?___lwmod+1
  4891  03B2  0872               	movf	___lwmod@dividend,w
  4892  03B3  00F0               	movwf	?___lwmod
  4893  03B4                     l811:
  4894  03B4  0008               	return
  4895  03B5                     __end_of___lwmod:
  4896                           
  4897                           	psect	text28
  4898  0495                     __ptext28:	
  4899 ;; *************** function ___lwdiv *****************
  4900 ;; Defined at:
  4901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  divisor         2    0[COMMON] unsigned int 
  4904 ;;  dividend        2    2[COMMON] unsigned int 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  quotient        2    6[COMMON] unsigned int 
  4907 ;;  counter         1    5[COMMON] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2    0[COMMON] unsigned int 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4917 ;;      Params:         4       0       0       0       0       0
  4918 ;;      Locals:         3       0       0       0       0       0
  4919 ;;      Temps:          1       0       0       0       0       0
  4920 ;;      Totals:         8       0       0       0       0       0
  4921 ;;Total ram usage:        8 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_money_display
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___lwdiv
  4932  0495                     ___lwdiv:
  4933  0495                     l2041:	
  4934                           ;incstack = 0
  4935                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4936                           
  4937  0495  01F6               	clrf	___lwdiv@quotient
  4938  0496  01F7               	clrf	___lwdiv@quotient+1
  4939  0497                     l2043:
  4940  0497  0870               	movf	___lwdiv@divisor,w
  4941  0498  0471               	iorwf	___lwdiv@divisor+1,w
  4942  0499  1903               	btfsc	3,2
  4943  049A  2C9C               	goto	u1261
  4944  049B  2C9D               	goto	u1260
  4945  049C                     u1261:
  4946  049C  2CCC               	goto	l2063
  4947  049D                     u1260:
  4948  049D                     l2045:
  4949  049D  01F5               	clrf	___lwdiv@counter
  4950  049E  0AF5               	incf	___lwdiv@counter,f
  4951  049F  2CA9               	goto	l2051
  4952  04A0                     l2047:
  4953  04A0  3001               	movlw	1
  4954  04A1                     u1275:
  4955  04A1  35F0               	lslf	___lwdiv@divisor,f
  4956  04A2  0DF1               	rlf	___lwdiv@divisor+1,f
  4957  04A3  0B89               	decfsz	9,f
  4958  04A4  2CA1               	goto	u1275
  4959  04A5                     l2049:
  4960  04A5  3001               	movlw	1
  4961  04A6  00F4               	movwf	??___lwdiv
  4962  04A7  0874               	movf	??___lwdiv,w
  4963  04A8  07F5               	addwf	___lwdiv@counter,f
  4964  04A9                     l2051:
  4965  04A9  1FF1               	btfss	___lwdiv@divisor+1,7
  4966  04AA  2CAC               	goto	u1281
  4967  04AB  2CAD               	goto	u1280
  4968  04AC                     u1281:
  4969  04AC  2CA0               	goto	l2047
  4970  04AD                     u1280:
  4971  04AD                     l2053:
  4972  04AD  3001               	movlw	1
  4973  04AE                     u1295:
  4974  04AE  35F6               	lslf	___lwdiv@quotient,f
  4975  04AF  0DF7               	rlf	___lwdiv@quotient+1,f
  4976  04B0  0B89               	decfsz	9,f
  4977  04B1  2CAE               	goto	u1295
  4978  04B2  0871               	movf	___lwdiv@divisor+1,w
  4979  04B3  0273               	subwf	___lwdiv@dividend+1,w
  4980  04B4  1D03               	skipz
  4981  04B5  2CB8               	goto	u1305
  4982  04B6  0870               	movf	___lwdiv@divisor,w
  4983  04B7  0272               	subwf	___lwdiv@dividend,w
  4984  04B8                     u1305:
  4985  04B8  1C03               	skipc
  4986  04B9  2CBB               	goto	u1301
  4987  04BA  2CBC               	goto	u1300
  4988  04BB                     u1301:
  4989  04BB  2CC1               	goto	l2059
  4990  04BC                     u1300:
  4991  04BC                     l2055:
  4992  04BC  0870               	movf	___lwdiv@divisor,w
  4993  04BD  02F2               	subwf	___lwdiv@dividend,f
  4994  04BE  0871               	movf	___lwdiv@divisor+1,w
  4995  04BF  3BF3               	subwfb	___lwdiv@dividend+1,f
  4996  04C0                     l2057:
  4997  04C0  1476               	bsf	___lwdiv@quotient,0
  4998  04C1                     l2059:
  4999  04C1  3001               	movlw	1
  5000  04C2                     u1315:
  5001  04C2  36F1               	lsrf	___lwdiv@divisor+1,f
  5002  04C3  0CF0               	rrf	___lwdiv@divisor,f
  5003  04C4  0B89               	decfsz	9,f
  5004  04C5  2CC2               	goto	u1315
  5005  04C6                     l2061:
  5006  04C6  3001               	movlw	1
  5007  04C7  02F5               	subwf	___lwdiv@counter,f
  5008  04C8  1D03               	btfss	3,2
  5009  04C9  2CCB               	goto	u1321
  5010  04CA  2CCC               	goto	u1320
  5011  04CB                     u1321:
  5012  04CB  2CAD               	goto	l2053
  5013  04CC                     u1320:
  5014  04CC                     l2063:
  5015  04CC  0877               	movf	___lwdiv@quotient+1,w
  5016  04CD  00F1               	movwf	?___lwdiv+1
  5017  04CE  0876               	movf	___lwdiv@quotient,w
  5018  04CF  00F0               	movwf	?___lwdiv
  5019  04D0                     l801:
  5020  04D0  0008               	return
  5021  04D1                     __end_of___lwdiv:
  5022                           
  5023                           	psect	text29
  5024  0295                     __ptext29:	
  5025 ;; *************** function _m_set_brigthness *****************
  5026 ;; Defined at:
  5027 ;;		line 76 in file "TM1637_m.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  brightness      1    wreg     unsigned char 
  5030 ;;  on              1    0[COMMON] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  brightness      1    2[COMMON] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5042 ;;      Params:         1       0       0       0       0       0
  5043 ;;      Locals:         1       0       0       0       0       0
  5044 ;;      Temps:          1       0       0       0       0       0
  5045 ;;      Totals:         3       0       0       0       0       0
  5046 ;;Total ram usage:        3 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _m_set_brigthness
  5057  0295                     _m_set_brigthness:
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _m_set_brigthness: [wreg+status,2+status,0]
  5061                           ;m_set_brigthness@brightness stored from wreg
  5062  0295  00F2               	movwf	m_set_brigthness@brightness
  5063  0296                     l1847:
  5064                           
  5065                           ;TM1637_m.c: 77: if(on == 1){
  5066  0296  0370               	decf	m_set_brigthness@on,w
  5067  0297  1D03               	btfss	3,2
  5068  0298  2A9A               	goto	u1181
  5069  0299  2A9B               	goto	u1180
  5070  029A                     u1181:
  5071  029A  2AA2               	goto	l1851
  5072  029B                     u1180:
  5073  029B                     l1849:
  5074                           
  5075                           ;TM1637_m.c: 78: m_brightness = (brightness & 0x7 | 0x08);
  5076  029B  0872               	movf	m_set_brigthness@brightness,w
  5077  029C  3907               	andlw	7
  5078  029D  3808               	iorlw	8
  5079  029E  00F1               	movwf	??_m_set_brigthness
  5080  029F  0871               	movf	??_m_set_brigthness,w
  5081  02A0  00FD               	movwf	_m_brightness
  5082                           
  5083                           ;TM1637_m.c: 79: }else{
  5084  02A1  2AA7               	goto	l373
  5085  02A2                     l1851:
  5086                           
  5087                           ;TM1637_m.c: 80: m_brightness = (brightness & 0x7 | 0x00);
  5088  02A2  0872               	movf	m_set_brigthness@brightness,w
  5089  02A3  3907               	andlw	7
  5090  02A4  00F1               	movwf	??_m_set_brigthness
  5091  02A5  0871               	movf	??_m_set_brigthness,w
  5092  02A6  00FD               	movwf	_m_brightness
  5093  02A7                     l373:
  5094  02A7  0008               	return
  5095  02A8                     __end_of_m_set_brigthness:
  5096                           
  5097                           	psect	text30
  5098  04D1                     __ptext30:	
  5099 ;; *************** function _calc_money *****************
  5100 ;; Defined at:
  5101 ;;		line 111 in file "main.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  date            6    6[COMMON] struct Date
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  min             2    6[BANK0 ] unsigned int 
  5106 ;;  hour            2    4[BANK0 ] unsigned int 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5116 ;;      Params:         6       0       0       0       0       0
  5117 ;;      Locals:         0       4       0       0       0       0
  5118 ;;      Temps:          0       4       0       0       0       0
  5119 ;;      Totals:         6       8       0       0       0       0
  5120 ;;Total ram usage:       14 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    1
  5123 ;; This function calls:
  5124 ;;		___wmul
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function _calc_money
  5132  04D1                     _calc_money:
  5133  04D1                     l1863:	
  5134                           ;incstack = 0
  5135                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  5136                           
  5137                           
  5138                           ;main.c: 112: if(date.hour > 17){
  5139  04D1  3012               	movlw	18
  5140  04D2  0279               	subwf	calc_money@date+3,w
  5141  04D3  1C03               	skipc
  5142  04D4  2CD6               	goto	u1191
  5143  04D5  2CD7               	goto	u1190
  5144  04D6                     u1191:
  5145  04D6  2D0F               	goto	l1869
  5146  04D7                     u1190:
  5147  04D7                     l1865:
  5148                           
  5149                           ;main.c: 113: uint16_t hour = (uint16_t)date.hour;
  5150  04D7  0879               	movf	calc_money@date+3,w
  5151  04D8  0020               	movlb	0	; select bank0
  5152  04D9  00B2               	movwf	??_calc_money
  5153  04DA  01B3               	clrf	??_calc_money+1
  5154  04DB  0832               	movf	??_calc_money,w
  5155  04DC  00B6               	movwf	calc_money@hour
  5156  04DD  0833               	movf	??_calc_money+1,w
  5157  04DE  00B7               	movwf	calc_money@hour+1
  5158                           
  5159                           ;main.c: 114: uint16_t min = (uint16_t)date.min;
  5160  04DF  087A               	movf	calc_money@date+4,w
  5161  04E0  00B2               	movwf	??_calc_money
  5162  04E1  01B3               	clrf	??_calc_money+1
  5163  04E2  0832               	movf	??_calc_money,w
  5164  04E3  00B8               	movwf	calc_money@min
  5165  04E4  0833               	movf	??_calc_money+1,w
  5166  04E5  00B9               	movwf	calc_money@min+1
  5167  04E6                     l1867:
  5168                           
  5169                           ;main.c: 115: money = ((hour - REGULAR_HOUR) * HOUR_4_MONEY) + (MIN_4_MONEY * min) - (MI
      +                          N_4_MONEY * 20);
  5170  04E6  0837               	movf	calc_money@hour+1,w
  5171  04E7  00F1               	movwf	___wmul@multiplier+1
  5172  04E8  0836               	movf	calc_money@hour,w
  5173  04E9  00F0               	movwf	___wmul@multiplier
  5174  04EA  3054               	movlw	84
  5175  04EB  00F2               	movwf	___wmul@multiplicand
  5176  04EC  3006               	movlw	6
  5177  04ED  00F3               	movwf	___wmul@multiplicand+1
  5178  04EE  3183  2312  3184   	fcall	___wmul
  5179  04F1  0870               	movf	?___wmul,w
  5180  04F2  0020               	movlb	0	; select bank0
  5181  04F3  00B2               	movwf	??_calc_money
  5182  04F4  0871               	movf	?___wmul+1,w
  5183  04F5  00B3               	movwf	??_calc_money+1
  5184  04F6  0839               	movf	calc_money@min+1,w
  5185  04F7  00F1               	movwf	___wmul@multiplier+1
  5186  04F8  0838               	movf	calc_money@min,w
  5187  04F9  00F0               	movwf	___wmul@multiplier
  5188  04FA  301B               	movlw	27
  5189  04FB  00F2               	movwf	___wmul@multiplicand
  5190  04FC  3000               	movlw	0
  5191  04FD  00F3               	movwf	___wmul@multiplicand+1
  5192  04FE  3183  2312  3184   	fcall	___wmul
  5193  0501  0870               	movf	?___wmul,w
  5194  0502  0020               	movlb	0	; select bank0
  5195  0503  0732               	addwf	??_calc_money,w
  5196  0504  00B4               	movwf	??_calc_money+2
  5197  0505  0871               	movf	?___wmul+1,w
  5198  0506  3D33               	addwfc	??_calc_money+1,w
  5199  0507  00B5               	movwf	??_calc_money+3
  5200  0508  0834               	movf	??_calc_money+2,w
  5201  0509  3E50               	addlw	80
  5202  050A  00C3               	movwf	_money
  5203  050B  3092               	movlw	146
  5204  050C  3D35               	addwfc	??_calc_money+3,w
  5205  050D  00C4               	movwf	_money+1
  5206                           
  5207                           ;main.c: 116: }else{
  5208  050E  2D12               	goto	l126
  5209  050F                     l1869:
  5210                           
  5211                           ;main.c: 117: money = 0;
  5212  050F  0020               	movlb	0	; select bank0
  5213  0510  01C3               	clrf	_money
  5214  0511  01C4               	clrf	_money+1
  5215  0512                     l126:
  5216  0512  0008               	return
  5217  0513                     __end_of_calc_money:
  5218                           
  5219                           	psect	text31
  5220  0312                     __ptext31:	
  5221 ;; *************** function ___wmul *****************
  5222 ;; Defined at:
  5223 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  multiplier      2    0[COMMON] unsigned int 
  5226 ;;  multiplicand    2    2[COMMON] unsigned int 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  product         2    4[COMMON] unsigned int 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  2    0[COMMON] unsigned int 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5238 ;;      Params:         4       0       0       0       0       0
  5239 ;;      Locals:         2       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0
  5241 ;;      Totals:         6       0       0       0       0       0
  5242 ;;Total ram usage:        6 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_calc_money
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function ___wmul
  5253  0312                     ___wmul:
  5254  0312                     l1763:	
  5255                           ;incstack = 0
  5256                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5257                           
  5258  0312  01F4               	clrf	___wmul@product
  5259  0313  01F5               	clrf	___wmul@product+1
  5260  0314                     l1765:
  5261  0314  1C70               	btfss	___wmul@multiplier,0
  5262  0315  2B17               	goto	u1001
  5263  0316  2B18               	goto	u1000
  5264  0317                     u1001:
  5265  0317  2B1C               	goto	l529
  5266  0318                     u1000:
  5267  0318                     l1767:
  5268  0318  0872               	movf	___wmul@multiplicand,w
  5269  0319  07F4               	addwf	___wmul@product,f
  5270  031A  0873               	movf	___wmul@multiplicand+1,w
  5271  031B  3DF5               	addwfc	___wmul@product+1,f
  5272  031C                     l529:
  5273  031C  3001               	movlw	1
  5274  031D                     u1015:
  5275  031D  35F2               	lslf	___wmul@multiplicand,f
  5276  031E  0DF3               	rlf	___wmul@multiplicand+1,f
  5277  031F  0B89               	decfsz	9,f
  5278  0320  2B1D               	goto	u1015
  5279  0321                     l1769:
  5280  0321  3001               	movlw	1
  5281  0322                     u1025:
  5282  0322  36F1               	lsrf	___wmul@multiplier+1,f
  5283  0323  0CF0               	rrf	___wmul@multiplier,f
  5284  0324  0B89               	decfsz	9,f
  5285  0325  2B22               	goto	u1025
  5286  0326                     l1771:
  5287  0326  0870               	movf	___wmul@multiplier,w
  5288  0327  0471               	iorwf	___wmul@multiplier+1,w
  5289  0328  1D03               	btfss	3,2
  5290  0329  2B2B               	goto	u1031
  5291  032A  2B2C               	goto	u1030
  5292  032B                     u1031:
  5293  032B  2B14               	goto	l1765
  5294  032C                     u1030:
  5295  032C                     l1773:
  5296  032C  0875               	movf	___wmul@product+1,w
  5297  032D  00F1               	movwf	?___wmul+1
  5298  032E  0874               	movf	___wmul@product,w
  5299  032F  00F0               	movwf	?___wmul
  5300  0330                     l531:
  5301  0330  0008               	return
  5302  0331                     __end_of___wmul:
  5303                           
  5304                           	psect	text32
  5305  0249                     __ptext32:	
  5306 ;; *************** function _SYSTEM_Initialize *****************
  5307 ;; Defined at:
  5308 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0, pclath, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5322 ;;      Params:         0       0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		_OSCILLATOR_Initialize
  5331 ;;		_PIN_MANAGER_Initialize
  5332 ;;		_WDT_Initialize
  5333 ;; This function is called by:
  5334 ;;		_main
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _SYSTEM_Initialize
  5340  0249                     _SYSTEM_Initialize:
  5341  0249                     l1825:	
  5342                           ;incstack = 0
  5343                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5344                           
  5345                           
  5346                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5347  0249  3182  22E4  3182   	fcall	_PIN_MANAGER_Initialize
  5348                           
  5349                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5350  024C  3182  220F  3182   	fcall	_OSCILLATOR_Initialize
  5351                           
  5352                           ;mcc.c: 55: WDT_Initialize();
  5353  024F  3182  2205  3182   	fcall	_WDT_Initialize
  5354  0252                     l45:
  5355  0252  0008               	return
  5356  0253                     __end_of_SYSTEM_Initialize:
  5357                           
  5358                           	psect	text33
  5359  0205                     __ptext33:	
  5360 ;; *************** function _WDT_Initialize *****************
  5361 ;; Defined at:
  5362 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5376 ;;      Params:         0       0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_SYSTEM_Initialize
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _WDT_Initialize
  5391  0205                     _WDT_Initialize:
  5392  0205                     l1699:	
  5393                           ;incstack = 0
  5394                           ; Regs used in _WDT_Initialize: [wreg]
  5395                           
  5396                           
  5397                           ;mcc.c: 71: WDTCON = 0x16;
  5398  0205  3016               	movlw	22
  5399  0206  0021               	movlb	1	; select bank1
  5400  0207  0097               	movwf	23	;volatile
  5401  0208                     l51:
  5402  0208  0008               	return
  5403  0209                     __end_of_WDT_Initialize:
  5404                           
  5405                           	psect	text34
  5406  02E4                     __ptext34:	
  5407 ;; *************** function _PIN_MANAGER_Initialize *****************
  5408 ;; Defined at:
  5409 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5423 ;;      Params:         0       0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0
  5425 ;;      Temps:          0       0       0       0       0       0
  5426 ;;      Totals:         0       0       0       0       0       0
  5427 ;;Total ram usage:        0 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_SYSTEM_Initialize
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           
  5437                           ;psect for function _PIN_MANAGER_Initialize
  5438  02E4                     _PIN_MANAGER_Initialize:
  5439  02E4                     l1673:	
  5440                           ;incstack = 0
  5441                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5442                           
  5443                           
  5444                           ;pin_manager.c: 60: LATA = 0x00;
  5445  02E4  0022               	movlb	2	; select bank2
  5446  02E5  018C               	clrf	12	;volatile
  5447                           
  5448                           ;pin_manager.c: 61: LATB = 0x00;
  5449  02E6  018D               	clrf	13	;volatile
  5450  02E7                     l1675:
  5451                           
  5452                           ;pin_manager.c: 66: TRISA = 0xFF;
  5453  02E7  30FF               	movlw	255
  5454  02E8  0021               	movlb	1	; select bank1
  5455  02E9  008C               	movwf	12	;volatile
  5456  02EA                     l1677:
  5457                           
  5458                           ;pin_manager.c: 67: TRISB = 0xFF;
  5459  02EA  30FF               	movlw	255
  5460  02EB  008D               	movwf	13	;volatile
  5461  02EC                     l1679:
  5462                           
  5463                           ;pin_manager.c: 72: ANSELB = 0xDA;
  5464  02EC  30DA               	movlw	218
  5465  02ED  0023               	movlb	3	; select bank3
  5466  02EE  008D               	movwf	13	;volatile
  5467  02EF                     l1681:
  5468                           
  5469                           ;pin_manager.c: 73: ANSELA = 0x10;
  5470  02EF  3010               	movlw	16
  5471  02F0  008C               	movwf	12	;volatile
  5472  02F1                     l1683:
  5473                           
  5474                           ;pin_manager.c: 78: WPUB = 0x24;
  5475  02F1  3024               	movlw	36
  5476  02F2  0024               	movlb	4	; select bank4
  5477  02F3  008D               	movwf	13	;volatile
  5478  02F4                     l1685:
  5479                           
  5480                           ;pin_manager.c: 79: WPUA = 0x00;
  5481  02F4  018C               	clrf	12	;volatile
  5482  02F5                     l1687:
  5483                           
  5484                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  5485  02F5  0021               	movlb	1	; select bank1
  5486  02F6  1395               	bcf	21,7	;volatile
  5487  02F7                     l1689:
  5488                           
  5489                           ;pin_manager.c: 86: APFCON0 = 0x00;
  5490  02F7  0022               	movlb	2	; select bank2
  5491  02F8  019D               	clrf	29	;volatile
  5492  02F9                     l1691:
  5493                           
  5494                           ;pin_manager.c: 87: APFCON1 = 0x00;
  5495  02F9  019E               	clrf	30	;volatile
  5496  02FA                     l25:
  5497  02FA  0008               	return
  5498  02FB                     __end_of_PIN_MANAGER_Initialize:
  5499                           
  5500                           	psect	text35
  5501  020F                     __ptext35:	
  5502 ;; *************** function _OSCILLATOR_Initialize *****************
  5503 ;; Defined at:
  5504 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5518 ;;      Params:         0       0       0       0       0       0
  5519 ;;      Locals:         0       0       0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0
  5521 ;;      Totals:         0       0       0       0       0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_SYSTEM_Initialize
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _OSCILLATOR_Initialize
  5533  020F                     _OSCILLATOR_Initialize:
  5534  020F                     l1693:	
  5535                           ;incstack = 0
  5536                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5537                           
  5538                           
  5539                           ;mcc.c: 61: OSCCON = 0x70;
  5540  020F  3070               	movlw	112
  5541  0210  0021               	movlb	1	; select bank1
  5542  0211  0099               	movwf	25	;volatile
  5543  0212                     l1695:
  5544                           
  5545                           ;mcc.c: 63: OSCTUNE = 0x00;
  5546  0212  0198               	clrf	24	;volatile
  5547  0213                     l1697:
  5548                           
  5549                           ;mcc.c: 65: BORCON = 0x00;
  5550  0213  0022               	movlb	2	; select bank2
  5551  0214  0196               	clrf	22	;volatile
  5552  0215                     l48:
  5553  0215  0008               	return
  5554  0216                     __end_of_OSCILLATOR_Initialize:
  5555  007E                     btemp	set	126	;btemp
  5556  007E                     wtemp0	set	126
  5557                           
  5558                           	psect	config
  5559                           
  5560                           ;Config register CONFIG1 @ 0x8007
  5561                           ;	Oscillator Selection
  5562                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5563                           ;	Watchdog Timer Enable
  5564                           ;	WDTE = OFF, WDT disabled
  5565                           ;	Power-up Timer Enable
  5566                           ;	PWRTE = OFF, PWRT disabled
  5567                           ;	MCLR Pin Function Select
  5568                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5569                           ;	Flash Program Memory Code Protection
  5570                           ;	CP = OFF, Program memory code protection is disabled
  5571                           ;	Data Memory Code Protection
  5572                           ;	CPD = OFF, Data memory code protection is disabled
  5573                           ;	Brown-out Reset Enable
  5574                           ;	BOREN = ON, Brown-out Reset enabled
  5575                           ;	Clock Out Enable
  5576                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5577                           ;	Internal/External Switchover
  5578                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5579                           ;	Fail-Safe Clock Monitor Enable
  5580                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5581  8007                     	org	32775
  5582  8007  3FE4               	dw	16356
  5583                           
  5584                           ;Config register CONFIG2 @ 0x8008
  5585                           ;	Flash Memory Self-Write Protection
  5586                           ;	WRT = OFF, Write protection off
  5587                           ;	PLL Enable
  5588                           ;	PLLEN = OFF, 4x PLL disabled
  5589                           ;	Stack Overflow/Underflow Reset Enable
  5590                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5591                           ;	Brown-out Reset Voltage Selection
  5592                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5593                           ;	Low-Voltage Programming Enable
  5594                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5595  8008                     	org	32776
  5596  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    6
    Data        18
    BSS         3
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     17      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    m_set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> m_segments(BANK0[4]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> t_segments(BANK0[4]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> add_time@date(COMMON[1]), main@date(BANK0[6]), 

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_money_display
    _main->_read_date
    _main->_rtc_display
    _main->_write_date
    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _rtc_display->_set_segments
    _set_segments->_write_data
    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _money_display->_m_set_segments
    _m_set_segments->_m_write_data
    _calc_money->___wmul

Critical Paths under _main in BANK0

    _main->_calc_money
    _write_date->_decimal_2_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8497
                                              8 BANK0      9     9      0
                  _SYSTEM_Initialize
                         _calc_money
                   _m_set_brigthness
                      _money_display
                          _read_date
                        _rtc_display
                     _set_brigthness
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1772
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0    1552
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                          6     6      0    2337
                                             10 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     570
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _write_data                                           5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     522
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _money_display                                        3     3      0    2448
                                             10 COMMON     3     3      0
                            ___lwdiv
                            ___lwmod
                       _encode_digit
                     _m_set_segments
 ---------------------------------------------------------------------------------
 (2) _m_set_segments                                       5     3      2     635
                                              5 COMMON     5     3      2
                            _m_start
                             _m_stop
                       _m_write_data
 ---------------------------------------------------------------------------------
 (3) _m_write_data                                         5     5      0     208
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _m_stop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _m_start                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_digit                                         1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _m_set_brigthness                                     3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6     663
                                              6 COMMON     6     0      6
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
   _m_set_brigthness
   _money_display
     ___lwdiv
     ___lwmod
     _encode_digit
     _m_set_segments
       _m_start
       _m_stop
       _m_write_data
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _rtc_display
     ___awdiv
     ___awmod
     _encode_digit
     _set_segments
       _start
       _stop
       _write_data
   _set_brigthness
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      25       6       46.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      33      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 15 15:12:50 2020

                 ___bmul@product 0072                               l25 02FA                               l51 0208  
                             l45 0252                               l48 0215                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072            __end_of_decimal_2_bcd 0381                              l201 0380  
                            l210 0558                              l132 0755                              l204 066A  
                            l126 0512                              l150 0272                              l311 0227  
                            l207 0352                              l231 023D                              l223 0237  
                            l240 0242                              l321 022D                              l313 0228  
                            l153 0262                              l233 023E                              l225 0239  
                            l129 06D8                              l330 0233                              l162 021C  
                            l250 0248                              l242 0243                              l315 022A  
                            l171 0277                              l235 023F                              l227 023A  
                            l332 0234                              l324 022E                              l180 0303  
                            l156 0266                              l244 0245                              l260 03F9  
                            l317 022B                              l309 0225                              l165 0258  
                            l229 023C                              l334 0235                              l326 0230  
                            l182 0307                              l174 027B                              l246 0246  
                            l238 0240                              l319 022C                              l351 03C6  
                            l343 03BD                              l183 0311                              l159 0218  
                            l271 040D                              l263 03FB                              l336 0236  
                            l328 0231                              l344 03BF                              l168 025C  
                            l248 0247                              l280 041E                              l353 03D5  
                            l177 0282                              l273 040E                              l265 03FC  
                            l257 03F3                              l362 03E4                              l346 03C3  
                            l282 0420                              l258 03F5                              l531 0330  
                            l355 03D6                              l267 040B                              l364 03E6  
                            l276 041A                              l373 02A7                              l357 03D7  
                            l349 03C5                              l269 040C                              l293 0494  
                            l366 03E8                              l198 02CE                              l278 041C  
                            l359 03D8                              l287 02BA                              l296 0224  
                            l368 03EA                              l529 031C                              l801 04D0  
                            l811 03B4                              l379 045A                              l555 02E3  
                            l682 060A                              l695 05AB                              u610 026E  
                            u611 026D                              u620 0272                              u700 0307  
                            u621 0271                              u701 0306                              u630 02D5  
                            u631 02D4                              u640 02E2                              u800 05CD  
                            u720 03F9                              u641 02E1                              u801 05CC  
                            u721 03F8                              u650 0266                              u730 040B  
                            u715 02C6                              u651 0265                              u731 040A  
                            u660 021C                              u820 05DD                              u900 0574  
                            u740 041A                              u661 021B                              u821 05DC  
                            u901 0573                              u741 0419                              u670 025C  
                            u671 025B                              u815 05D1                              u680 027B  
                            u840 05EC                              u920 0584                              u681 027A  
                            u841 05EB                              u921 0583                              u690 027F  
                            u930 058E                              u691 027E                              u835 05DE  
                            u931 058D                              u915 0578                              u860 05FC  
                            u780 05B1                              u861 05FB                              u845 05E8  
                            u781 05B0                              u870 0601                              u790 05BC  
                            u950 059D                              u871 0600                              u855 05F2  
                            u791 05BB                              u951 059C                              u935 058A  
                            u960 05A2                              u880 055E                              u961 05A1  
                            u945 0593                              u881 055D                              u890 0569  
                            u891 0568                              u995 037A                     ___awmod@sign 0076  
                 rtc_display@min 0034                              wreg 0009                    calc_money@min 0038  
                  write_data@ack 0072              bcd_2_decimal@number 0077                   ?_bcd_2_decimal 0070  
                 ??_encode_digit 0070                             l2001 0469                             l2011 0485  
                           l2003 046F                             l2021 0429                             l2101 0735  
                           l2013 048B                             l2005 0471                             l2031 0441  
                           l2023 042C                             l2103 0744                             l2015 0491  
                           l2007 047B                             l2111 068D                             l2041 0495  
                           l2033 0445                             l2025 042F                             l2017 0422  
                           l2105 074C                             l2009 047F                             l2113 06A3  
                           l2121 0759                             l2051 04A9                             l2043 0497  
                           l2035 044B                             l2027 0435                             l2019 0425  
                           l2115 06B9                             l2107 066D                             l2131 0763  
                           l2123 075C                             l2061 04C6                             l2053 04AD  
                           l2045 049D                             l2037 0451                             l2029 0437  
                           l2117 06CF                             l2109 0677                             l2141 076E  
                           l2133 0765                             l2125 075E                             l2055 04BC  
                           l2047 04A0                             l2063 04CC                             l2071 038A  
                           l2039 0457                             l1511 02D1                             l1503 0267  
                           l2151 077F                             l2143 0772                             l2135 0767  
                           l2127 075F                             l2119 0756                             l2057 04C0  
                           l2049 04A5                             l2081 03A5                             l2073 038F  
                           l1513 02D5                             l1505 0267                             l1601 05BC  
                           l2161 07AA                             l2153 0783                             l2145 0776  
                           l2137 0768                             l2129 0760                             l2059 04C1  
                           l2083 03AA                             l2075 0393                             l2067 0381  
                           l2091 06DE                             l1515 02D9                             l1507 026E  
                           l1531 0256                             l1523 025D                             l1611 05D0  
                           l1603 05C1                             l2171 07BE                             l2163 07AD  
                           l2155 0789                             l2147 077A                             l2139 0769  
                           l2077 0397                             l2069 0387                             l2085 03B0  
                           l2093 06F1                             l1517 02DB                             l1509 02D0  
                           l1541 0308                             l1525 0260                             l1533 0274  
                           l1621 05F0                             l1613 05D5                             l1605 05C5  
                           l2173 07C4                             l2165 07AD                             l2157 078F  
                           l2149 077E                             l2079 03A1                             l2095 0700  
                           l1519 02E2                             l1551 02BC                             l1543 030C  
                           l1527 0216                             l1535 027F                             l1631 0606  
                           l1623 05F1                             l1615 05D9                             l1607 05C7  
                           l2175 07DB                             l2167 07B1                             l2159 0793  
                           l2097 0713                             l2089 06D9                             l1545 030D  
                           l1537 02FC                             l1529 0253                             l1625 05F6  
                           l1617 05DD                             l1609 05CD                             l1641 0563  
                           l2177 07DE                             l2169 07BA                             l2099 0722  
                           l1547 0310                             l1539 0302                             l1619 05EC  
                           l1627 05FC                             l1651 0577                             l1643 0565  
                           l1635 0559                             l1571 0415                             l1555 03EC  
                           l1629 0601                             l1661 0592                             l1653 057C  
                           l1645 0569                             l1637 055A                             l1565 03FD  
                           l1557 03F0                             l1591 05AC                             l1663 0597  
                           l1655 0580                             l1647 056E                             l1639 055E  
                           l1567 0405                             l1559 03F2                             l1831 0622  
                           l1681 02EF                             l1673 02E4                             l1825 0249  
                           l1593 05AD                             l1657 0584                             l1649 0574  
                           l1665 059D                             l1569 0410                             l1841 02A9  
                           l1753 0354                             l1833 062D                             l1691 02F9  
                           l1683 02F1                             l1675 02E7                             l1771 0326  
                           l1763 0312                             l1851 02A2                             l1595 05B1  
                           l1667 05A2                             l1659 058E                             l1843 02AE  
                           l1835 0638                             l1827 060C                             l1693 020F  
                           l1685 02F4                             l1677 02EA                             l1773 032C  
                           l1765 0314                             l1757 0332                             l1861 054D  
                           l1853 0514                             l1597 05B6                             l1669 05A7  
                           l1845 02B5                             l1837 065B                             l1829 0617  
                           l1695 0212                             l1687 02F5                             l1679 02EC  
                           l1767 0318                             l1863 04D1                             l1847 0296  
                           l1759 034E                             l1855 0533                             l1599 05B8  
                           l1839 065E                             l1697 0213                             l1689 02F7  
                           l1769 0321                             l1865 04D7                             l1849 029B  
                           l1857 0537                             l1699 0205                             l1867 04E6  
                           l1971 03B6                             l1859 0542                             l1869 050F  
                           l1981 03C7                             l1973 03BA                             l1983 03CF  
                           l1975 03BC                             l1985 03DA                             l1993 045C  
                           l1987 03DF                             l1995 045F                             l1989 021E  
                           l1997 0463                             l1999 0466                             u1000 0318  
                           u1001 0317                             u1030 032C                             u1031 032B  
                           u1015 031D                             u1025 0322                             u1210 03C3  
                           u1211 03C2                             u1300 04BC                             u1220 03D5  
                           u1301 04BB                             u1221 03D4                             u1230 03E4  
                           u1231 03E3                             u1320 04CC                             u1240 0485  
                           u1321 04CB                             u1305 04B8                             u1241 0484  
                           u1330 0387                             u1250 044B                             u1170 02AE  
                           u1315 04C2                             u1331 0386                             u1251 044A  
                           u1171 02AD                             u1180 029B                             u1260 049D  
                           u1181 029A                             u1261 049C                             _LATA 010C  
                           u1190 04D7                             u1350 0397                             _LATB 010D  
                           u1191 04D6                             u1351 0396                             u1407 07B5  
                           u1280 04AD                             u1360 03A1                             u1281 04AC  
                           u1361 03A0                             u1345 038B                             u1417 07E4  
                           u1275 04A1                             u1427 0663                             u1380 03B0  
                           u1381 03AF                             u1365 039D                             u1390 07C4  
                           u1295 04AE                             u1375 03A6                             u1391 07C3  
                           _WPUA 020C                             _WPUB 020D                             _main 0756  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _stop 0240                  rtc_display@date 0032                  rtc_display@hour 0033  
                           start 0002                   calc_money@date 0076                   calc_money@hour 0036  
                 write_data@data 0073                ___bmul@multiplier 0073                   write_date@date 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0216                            ?_main 0070  
                __end_of___awdiv 060B                  __end_of___awmod 05AC                            ?_stop 0070  
                    i2c_read@ack 0071                  ___awdiv@divisor 0070                  __end_of___lwdiv 04D1  
                __end_of___lwmod 03B5                  ___awdiv@counter 0075                            _TRISA 008C  
                          _TRISB 008D                            __read 0331                   _WDT_Initialize 0205  
                __end_of_m_start 022E             m_set_segments@length 0075                            _money 0043  
                          _start 0237                            status 0003                            wtemp0 007E  
                __initialization 07EE                     __end_of_main 07EE                     __end_of_stop 0249  
               __end_of_i2c_read 0312                 __end_of_i2c_wait 0273                 __end_of_i2c_stop 021D  
                         ??_main 003A                           ??_stop 0070                  ??_bcd_2_decimal 0074  
         __end_of_WDT_Initialize 0209                           ?__read 0070                  set_segments@pos 0076  
        __size_of_m_set_segments 003A                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         _ANSELB 018D                           ?_start 0070                           _BORCON 0116  
                   i2c_read@data 0072            __end_of_money_display 0756                           _OSCCON 0099  
                         _WDTCON 0097                           _TRISB2 046A                           _TRISB4 046C  
                         _TRISB5 046D               __size_of_i2c_start 000A               __size_of_i2c_write 0010  
      __size_of_m_set_brigthness 0013                    ?_m_write_data 0070                           ___bmul 02CF  
                         ___wmul 0312                        ??___awdiv 0074                        ??___awmod 0074  
           __end_of_encode_digit 0225                        ??___lwdiv 0074                        ??___lwmod 0074  
                         _m_stop 022E                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                        ??_m_start 0070               _i2c_repeated_start 0253  
                ?_WDT_Initialize 0070                     ?_rtc_display 0070          __size_of_set_brigthness 0013  
            ?_i2c_repeated_start 0070                _SYSTEM_Initialize 0249          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070              ___bmul@multiplicand 0070                m_set_segments@pos 0076  
                 ??_m_write_data 0070         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 0283              ??_SYSTEM_Initialize 0070                    __end_of__read 0353  
           ??_i2c_repeated_start 0070                    __end_of_start 0240                __end_of_i2c_start 0267  
              __end_of_i2c_write 0283                   _OPTION_REGbits 0095                       _calc_money 04D1  
                        ??__read 0078        __end_of_SYSTEM_Initialize 0253                       __read@data 007A  
                        ??_start 0070                       __pbssBANK0 0043                        ?_i2c_read 0070  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070               __size_of_read_date 0046  
                     __pmaintext 0756                          ?___bmul 0070                          ?___wmul 0070  
                        ?_m_stop 0070                          _APFCON0 011D                          _APFCON1 011E  
             set_segments@length 0075                          _OSCTUNE 0098                          _SSP2ADD 021A  
                        _SSP2BUF 0219                   _m_set_segments 0421                       ??_i2c_read 0070  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070             __end_of_HOUR_4_MONEY 0802  
         __size_of_decimal_2_bcd 002E                       _m_segments 002A            __size_of_encode_digit 0008  
               _m_set_brigthness 0295                  __size_of___bmul 0015                          ___awdiv 05AC  
                        ___awmod 0559                  __size_of___wmul 001F                          ___lwdiv 0495  
                        ___lwmod 0381                    ?_set_segments 0075                  __size_of_m_stop 0009  
                        __ptext1 060B                          __ptext2 0353                          __ptext3 02A8  
                        __ptext4 066B                          __ptext5 045B                          __ptext6 03EB  
                        __ptext7 0240                          __ptext8 0237                          __ptext9 0559  
           __end_of_REGULAR_HOUR 0806            _OSCILLATOR_Initialize 020F                          _m_start 0225  
              __end_of_read_date 0559                 ___awmod@dividend 0072                          _segdata 0020  
         __end_of_m_set_segments 045B                      ?_calc_money 0076         ??_PIN_MANAGER_Initialize 0070  
           __end_of_m_write_data 03EB                   _set_brigthness 02A8       __size_of_SYSTEM_Initialize 000A  
         m_set_segments@segments 0078             end_of_initialization 07FD             __size_of_rtc_display 006E  
                   _encode_digit 021D                          init_ram 0209                       _t_segments 002E  
                        initloop 020A                    __read@address 0079             set_segments@segments 0078  
             money_display@value 007B                   ??_set_segments 0077                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                     _m_brightness 007D                    _decimal_2_bcd 0353  
                  i2c_write@data 0070           __end_of_set_brigthness 02BB                  ?_m_set_segments 0075  
                      _TRISAbits 008C            __end_of_bcd_2_decimal 02CF              __size_of_calc_money 0042  
                 __end_of___bmul 02E4                   __end_of___wmul 0331                       _write_data 03EB  
                     _write_date 060B                   ?_decimal_2_bcd 0070           ?_OSCILLATOR_Initialize 0070  
                 __end_of_m_stop 0237           __size_of_money_display 007D              start_initialization 07EE  
                ?_set_brigthness 0070                  m_set_segments@k 0079  __size_of_PIN_MANAGER_Initialize 0017  
                      _i2c_start 025D                        _i2c_write 0273                __size_of_i2c_read 0017  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                         ??___bmul 0071  
                       ??___wmul 0074                      __pdataBANK0 0020                 m_write_data@data 0073  
    __size_of_i2c_repeated_start 000A                         ??_m_stop 0070            __size_of_m_write_data 0036  
                   _HOUR_4_MONEY 0800                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 0032         __end_of_m_set_brigthness 02A8                       ?_i2c_start 0070  
                     ?_i2c_write 0070             __end_of_set_segments 0495                    _money_display 06D9  
                   _REGULAR_HOUR 0804                 set_brigthness@on 0070                 ___lwdiv@dividend 0072  
         _PIN_MANAGER_Initialize 02E4                     _m_write_data 03B5                         ?___awdiv 0070  
                       ?___awmod 0070                         ?___lwdiv 0070                         ?___lwmod 0070  
                ??_decimal_2_bcd 0032                      ?_write_data 0070                      ?_write_date 0070  
                       ?_m_start 0070                     ??_calc_money 0032              __end_of_MIN_4_MONEY 0804  
                 __size_of__read 0022                 ___lwdiv@quotient 0076                        _read_date 0513  
                 __size_of_start 0009                   ?_money_display 0070                   ___wmul@product 0074  
                       _LATAbits 010C               __end_of_calc_money 0513                         _SSP2CON1 021D  
                       _SSP2CON2 021E                         _SSP2STAT 021C                encode_digit@digit 0070  
               ??_m_set_segments 0077                ___wmul@multiplier 0070                      write_data@b 0071  
                    write_data@i 0074                    ??_rtc_display 007A                      ??_i2c_start 0070  
                    ??_i2c_write 0070                       ?_read_date 0070                         _i2c_read 02FB  
     m_set_brigthness@brightness 0072                         _i2c_wait 0267                         _i2c_stop 0216  
            __size_of_write_data 0036              __size_of_write_date 0060                    set_segments@k 0079  
                m_write_data@ack 0072          ??_OSCILLATOR_Initialize 0070                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 __size_of___lwdiv 003C                 __size_of___lwmod 0034  
                    _MIN_4_MONEY 0802                 ??_set_brigthness 0071                 __size_of_m_start 0009  
          __size_of_set_segments 003A                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0075  
                       __ptext10 05AC                         __ptext11 0513                         __ptext20 02CF  
                       __ptext12 0331                         __ptext21 06D9                         __ptext13 0273  
                       __ptext30 04D1                         __ptext22 0421                         __ptext14 0216  
                       __ptext31 0312                         __ptext23 03B5                         __ptext15 025D  
                       __ptext32 0249                         __ptext24 022E                         __ptext16 0253  
                       __ptext33 0205                         __ptext25 0225                         __ptext17 02FB  
                       __ptext34 02E4                         __ptext26 021D                         __ptext18 0267  
                       __ptext35 020F                         __ptext27 0381                         __ptext19 02BB  
                       __ptext28 0495                         __ptext29 0295                  ??_money_display 007A  
                   _SSP2CON1bits 021D                     _SSP2CON2bits 021E               m_set_brigthness@on 0070  
            __end_of_rtc_display 06D9                    __size_of_main 0098                    __size_of_stop 0009  
         __size_of_bcd_2_decimal 0014                         main@date 003D                     _set_segments 045B  
                   _SSP2STATbits 021C                ?_m_set_brigthness 0070                    read_date@date 007C  
                    ??_read_date 007B          __size_of_WDT_Initialize 0004               ??_m_set_brigthness 0071  
               ___lwmod@dividend 0072          ?_PIN_MANAGER_Initialize 0070       __end_of_i2c_repeated_start 025D  
                   ??_write_data 0070                     ??_write_date 007A              decimal_2_bcd@number 0079  
                  m_write_data@b 0071                    __pstringtext1 0800                    __pstringtext2 0802  
                  m_write_data@i 0074                    __pstringtext3 0804                  ___lwmod@divisor 0070  
                ___lwmod@counter 0075                      _rtc_display 066B                    _bcd_2_decimal 02BB  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 02FB               __end_of_write_data 0421  
             __end_of_write_date 066B  
