

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 01 00:42:05 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 26/08/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1827 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020D                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0219                     	;# 
   175  021A                     	;# 
   176  021B                     	;# 
   177  021C                     	;# 
   178  021D                     	;# 
   179  021E                     	;# 
   180  021F                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0295                     	;# 
   188  0296                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029B                     	;# 
   194  029C                     	;# 
   195  029C                     	;# 
   196  029D                     	;# 
   197  029E                     	;# 
   198  029E                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0318                     	;# 
   204  0318                     	;# 
   205  0319                     	;# 
   206  031A                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  039A                     	;# 
   211  039C                     	;# 
   212  039D                     	;# 
   213  039E                     	;# 
   214  039F                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011D                     	;# 
   292  011E                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  0211                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0214                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0216                     	;# 
   329  0216                     	;# 
   330  0217                     	;# 
   331  0217                     	;# 
   332  0219                     	;# 
   333  021A                     	;# 
   334  021B                     	;# 
   335  021C                     	;# 
   336  021D                     	;# 
   337  021E                     	;# 
   338  021F                     	;# 
   339  0291                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0293                     	;# 
   343  0294                     	;# 
   344  0295                     	;# 
   345  0295                     	;# 
   346  0296                     	;# 
   347  0298                     	;# 
   348  0298                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029B                     	;# 
   352  029C                     	;# 
   353  029C                     	;# 
   354  029D                     	;# 
   355  029E                     	;# 
   356  029E                     	;# 
   357  0311                     	;# 
   358  0311                     	;# 
   359  0312                     	;# 
   360  0313                     	;# 
   361  0318                     	;# 
   362  0318                     	;# 
   363  0319                     	;# 
   364  031A                     	;# 
   365  0394                     	;# 
   366  0395                     	;# 
   367  0396                     	;# 
   368  039A                     	;# 
   369  039C                     	;# 
   370  039D                     	;# 
   371  039E                     	;# 
   372  039F                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  0111                     	;# 
   439  0112                     	;# 
   440  0113                     	;# 
   441  0114                     	;# 
   442  0115                     	;# 
   443  0116                     	;# 
   444  0117                     	;# 
   445  0118                     	;# 
   446  0119                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011D                     	;# 
   450  011E                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0219                     	;# 
   491  021A                     	;# 
   492  021B                     	;# 
   493  021C                     	;# 
   494  021D                     	;# 
   495  021E                     	;# 
   496  021F                     	;# 
   497  0291                     	;# 
   498  0291                     	;# 
   499  0292                     	;# 
   500  0293                     	;# 
   501  0294                     	;# 
   502  0295                     	;# 
   503  0295                     	;# 
   504  0296                     	;# 
   505  0298                     	;# 
   506  0298                     	;# 
   507  0299                     	;# 
   508  029A                     	;# 
   509  029B                     	;# 
   510  029C                     	;# 
   511  029C                     	;# 
   512  029D                     	;# 
   513  029E                     	;# 
   514  029E                     	;# 
   515  0311                     	;# 
   516  0311                     	;# 
   517  0312                     	;# 
   518  0313                     	;# 
   519  0318                     	;# 
   520  0318                     	;# 
   521  0319                     	;# 
   522  031A                     	;# 
   523  0394                     	;# 
   524  0395                     	;# 
   525  0396                     	;# 
   526  039A                     	;# 
   527  039C                     	;# 
   528  039D                     	;# 
   529  039E                     	;# 
   530  039F                     	;# 
   531  0415                     	;# 
   532  0416                     	;# 
   533  0417                     	;# 
   534  041C                     	;# 
   535  041D                     	;# 
   536  041E                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000D                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011A                     	;# 
   606  011B                     	;# 
   607  011D                     	;# 
   608  011E                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0194                     	;# 
   618  0195                     	;# 
   619  0196                     	;# 
   620  0199                     	;# 
   621  019A                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019E                     	;# 
   630  019F                     	;# 
   631  020C                     	;# 
   632  020D                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0295                     	;# 
   661  0295                     	;# 
   662  0296                     	;# 
   663  0298                     	;# 
   664  0298                     	;# 
   665  0299                     	;# 
   666  029A                     	;# 
   667  029B                     	;# 
   668  029C                     	;# 
   669  029C                     	;# 
   670  029D                     	;# 
   671  029E                     	;# 
   672  029E                     	;# 
   673  0311                     	;# 
   674  0311                     	;# 
   675  0312                     	;# 
   676  0313                     	;# 
   677  0318                     	;# 
   678  0318                     	;# 
   679  0319                     	;# 
   680  031A                     	;# 
   681  0394                     	;# 
   682  0395                     	;# 
   683  0396                     	;# 
   684  039A                     	;# 
   685  039C                     	;# 
   686  039D                     	;# 
   687  039E                     	;# 
   688  039F                     	;# 
   689  0415                     	;# 
   690  0416                     	;# 
   691  0417                     	;# 
   692  041C                     	;# 
   693  041D                     	;# 
   694  041E                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  0091                     	;# 
   738  0092                     	;# 
   739  0093                     	;# 
   740  0094                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  011E                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  0191                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0194                     	;# 
   776  0195                     	;# 
   777  0196                     	;# 
   778  0199                     	;# 
   779  019A                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0219                     	;# 
   807  021A                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  0291                     	;# 
   814  0291                     	;# 
   815  0292                     	;# 
   816  0293                     	;# 
   817  0294                     	;# 
   818  0295                     	;# 
   819  0295                     	;# 
   820  0296                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  029B                     	;# 
   826  029C                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  029E                     	;# 
   830  029E                     	;# 
   831  0311                     	;# 
   832  0311                     	;# 
   833  0312                     	;# 
   834  0313                     	;# 
   835  0318                     	;# 
   836  0318                     	;# 
   837  0319                     	;# 
   838  031A                     	;# 
   839  0394                     	;# 
   840  0395                     	;# 
   841  0396                     	;# 
   842  039A                     	;# 
   843  039C                     	;# 
   844  039D                     	;# 
   845  039E                     	;# 
   846  039F                     	;# 
   847  0415                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  0FE4                     	;# 
   854  0FE5                     	;# 
   855  0FE6                     	;# 
   856  0FE7                     	;# 
   857  0FE8                     	;# 
   858  0FE9                     	;# 
   859  0FEA                     	;# 
   860  0FEB                     	;# 
   861  0FED                     	;# 
   862  0FEE                     	;# 
   863  0FEF                     	;# 
   864  0000                     	;# 
   865  0001                     	;# 
   866  0002                     	;# 
   867  0003                     	;# 
   868  0004                     	;# 
   869  0005                     	;# 
   870  0006                     	;# 
   871  0007                     	;# 
   872  0008                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  0011                     	;# 
   879  0012                     	;# 
   880  0013                     	;# 
   881  0014                     	;# 
   882  0015                     	;# 
   883  0016                     	;# 
   884  0016                     	;# 
   885  0017                     	;# 
   886  0018                     	;# 
   887  0019                     	;# 
   888  001A                     	;# 
   889  001B                     	;# 
   890  001C                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  0091                     	;# 
   896  0092                     	;# 
   897  0093                     	;# 
   898  0094                     	;# 
   899  0095                     	;# 
   900  0096                     	;# 
   901  0097                     	;# 
   902  0098                     	;# 
   903  0099                     	;# 
   904  009A                     	;# 
   905  009B                     	;# 
   906  009B                     	;# 
   907  009C                     	;# 
   908  009D                     	;# 
   909  009E                     	;# 
   910  010C                     	;# 
   911  010D                     	;# 
   912  0111                     	;# 
   913  0112                     	;# 
   914  0113                     	;# 
   915  0114                     	;# 
   916  0115                     	;# 
   917  0116                     	;# 
   918  0117                     	;# 
   919  0118                     	;# 
   920  0119                     	;# 
   921  011A                     	;# 
   922  011B                     	;# 
   923  011D                     	;# 
   924  011E                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  0191                     	;# 
   928  0191                     	;# 
   929  0192                     	;# 
   930  0193                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  019A                     	;# 
   938  019B                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019C                     	;# 
   943  019C                     	;# 
   944  019D                     	;# 
   945  019E                     	;# 
   946  019F                     	;# 
   947  020C                     	;# 
   948  020D                     	;# 
   949  0211                     	;# 
   950  0211                     	;# 
   951  0212                     	;# 
   952  0212                     	;# 
   953  0213                     	;# 
   954  0213                     	;# 
   955  0214                     	;# 
   956  0214                     	;# 
   957  0215                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0216                     	;# 
   961  0216                     	;# 
   962  0217                     	;# 
   963  0217                     	;# 
   964  0219                     	;# 
   965  021A                     	;# 
   966  021B                     	;# 
   967  021C                     	;# 
   968  021D                     	;# 
   969  021E                     	;# 
   970  021F                     	;# 
   971  0291                     	;# 
   972  0291                     	;# 
   973  0292                     	;# 
   974  0293                     	;# 
   975  0294                     	;# 
   976  0295                     	;# 
   977  0295                     	;# 
   978  0296                     	;# 
   979  0298                     	;# 
   980  0298                     	;# 
   981  0299                     	;# 
   982  029A                     	;# 
   983  029B                     	;# 
   984  029C                     	;# 
   985  029C                     	;# 
   986  029D                     	;# 
   987  029E                     	;# 
   988  029E                     	;# 
   989  0311                     	;# 
   990  0311                     	;# 
   991  0312                     	;# 
   992  0313                     	;# 
   993  0318                     	;# 
   994  0318                     	;# 
   995  0319                     	;# 
   996  031A                     	;# 
   997  0394                     	;# 
   998  0395                     	;# 
   999  0396                     	;# 
  1000  039A                     	;# 
  1001  039C                     	;# 
  1002  039D                     	;# 
  1003  039E                     	;# 
  1004  039F                     	;# 
  1005  0415                     	;# 
  1006  0416                     	;# 
  1007  0417                     	;# 
  1008  041C                     	;# 
  1009  041D                     	;# 
  1010  041E                     	;# 
  1011  0FE4                     	;# 
  1012  0FE5                     	;# 
  1013  0FE6                     	;# 
  1014  0FE7                     	;# 
  1015  0FE8                     	;# 
  1016  0FE9                     	;# 
  1017  0FEA                     	;# 
  1018  0FEB                     	;# 
  1019  0FED                     	;# 
  1020  0FEE                     	;# 
  1021  0FEF                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0008                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  0011                     	;# 
  1037  0012                     	;# 
  1038  0013                     	;# 
  1039  0014                     	;# 
  1040  0015                     	;# 
  1041  0016                     	;# 
  1042  0016                     	;# 
  1043  0017                     	;# 
  1044  0018                     	;# 
  1045  0019                     	;# 
  1046  001A                     	;# 
  1047  001B                     	;# 
  1048  001C                     	;# 
  1049  001E                     	;# 
  1050  001F                     	;# 
  1051  008C                     	;# 
  1052  008D                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0093                     	;# 
  1056  0094                     	;# 
  1057  0095                     	;# 
  1058  0096                     	;# 
  1059  0097                     	;# 
  1060  0098                     	;# 
  1061  0099                     	;# 
  1062  009A                     	;# 
  1063  009B                     	;# 
  1064  009B                     	;# 
  1065  009C                     	;# 
  1066  009D                     	;# 
  1067  009E                     	;# 
  1068  010C                     	;# 
  1069  010D                     	;# 
  1070  0111                     	;# 
  1071  0112                     	;# 
  1072  0113                     	;# 
  1073  0114                     	;# 
  1074  0115                     	;# 
  1075  0116                     	;# 
  1076  0117                     	;# 
  1077  0118                     	;# 
  1078  0119                     	;# 
  1079  011A                     	;# 
  1080  011B                     	;# 
  1081  011D                     	;# 
  1082  011E                     	;# 
  1083  018C                     	;# 
  1084  018D                     	;# 
  1085  0191                     	;# 
  1086  0191                     	;# 
  1087  0192                     	;# 
  1088  0193                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0194                     	;# 
  1092  0195                     	;# 
  1093  0196                     	;# 
  1094  0199                     	;# 
  1095  019A                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019C                     	;# 
  1101  019C                     	;# 
  1102  019D                     	;# 
  1103  019E                     	;# 
  1104  019F                     	;# 
  1105  020C                     	;# 
  1106  020D                     	;# 
  1107  0211                     	;# 
  1108  0211                     	;# 
  1109  0212                     	;# 
  1110  0212                     	;# 
  1111  0213                     	;# 
  1112  0213                     	;# 
  1113  0214                     	;# 
  1114  0214                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0216                     	;# 
  1119  0216                     	;# 
  1120  0217                     	;# 
  1121  0217                     	;# 
  1122  0219                     	;# 
  1123  021A                     	;# 
  1124  021B                     	;# 
  1125  021C                     	;# 
  1126  021D                     	;# 
  1127  021E                     	;# 
  1128  021F                     	;# 
  1129  0291                     	;# 
  1130  0291                     	;# 
  1131  0292                     	;# 
  1132  0293                     	;# 
  1133  0294                     	;# 
  1134  0295                     	;# 
  1135  0295                     	;# 
  1136  0296                     	;# 
  1137  0298                     	;# 
  1138  0298                     	;# 
  1139  0299                     	;# 
  1140  029A                     	;# 
  1141  029B                     	;# 
  1142  029C                     	;# 
  1143  029C                     	;# 
  1144  029D                     	;# 
  1145  029E                     	;# 
  1146  029E                     	;# 
  1147  0311                     	;# 
  1148  0311                     	;# 
  1149  0312                     	;# 
  1150  0313                     	;# 
  1151  0318                     	;# 
  1152  0318                     	;# 
  1153  0319                     	;# 
  1154  031A                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  039A                     	;# 
  1159  039C                     	;# 
  1160  039D                     	;# 
  1161  039E                     	;# 
  1162  039F                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  041C                     	;# 
  1167  041D                     	;# 
  1168  041E                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180                           
  1181                           	psect	idataBANK0
  1182  04FB                     __pidataBANK0:
  1183                           
  1184                           ;initializer for _segdata
  1185  04FB  343F               	retlw	63
  1186  04FC  3406               	retlw	6
  1187  04FD  345B               	retlw	91
  1188  04FE  344F               	retlw	79
  1189  04FF  3466               	retlw	102
  1190  0500  346D               	retlw	109
  1191  0501  347D               	retlw	125
  1192  0502  3407               	retlw	7
  1193  0503  347F               	retlw	127
  1194  0504  346F               	retlw	111
  1195                           
  1196                           ;initializer for rtc_display@F2398
  1197  0505  34FF               	retlw	255
  1198  0506  34FF               	retlw	255
  1199  0507  34FF               	retlw	255
  1200  0508  34FF               	retlw	255
  1201                           
  1202                           	psect	nvBANK0
  1203  0042                     __pnvBANK0:
  1204  0042                     _sec:
  1205  0042                     	ds	1
  1206  0043                     _min:
  1207  0043                     	ds	1
  1208  000C                     _PORTAbits	set	12
  1209  008C                     _TRISAbits	set	140
  1210  0097                     _WDTCON	set	151
  1211  0098                     _OSCTUNE	set	152
  1212  0099                     _OSCCON	set	153
  1213  0095                     _OPTION_REGbits	set	149
  1214  008D                     _TRISB	set	141
  1215  008C                     _TRISA	set	140
  1216  046D                     _TRISB5	set	1133
  1217  046A                     _TRISB2	set	1130
  1218  010C                     _LATAbits	set	268
  1219  0116                     _BORCON	set	278
  1220  011E                     _APFCON1	set	286
  1221  011D                     _APFCON0	set	285
  1222  010D                     _LATB	set	269
  1223  010C                     _LATA	set	268
  1224  018C                     _ANSELA	set	396
  1225  018D                     _ANSELB	set	397
  1226  021D                     _SSP2CON1bits	set	541
  1227  021C                     _SSP2STATbits	set	540
  1228  0219                     _SSP2BUF	set	537
  1229  021E                     _SSP2CON2bits	set	542
  1230  021C                     _SSP2STAT	set	540
  1231  021E                     _SSP2CON2	set	542
  1232  021D                     _SSP2CON1	set	541
  1233  021A                     _SSP2ADD	set	538
  1234  020C                     _WPUA	set	524
  1235  020D                     _WPUB	set	525
  1236                           
  1237                           	psect	cinit
  1238  07EB                     start_initialization:	
  1239                           ; #config settings
  1240                           
  1241  07EB                     __initialization:
  1242                           
  1243                           ; Initialize objects allocated to BANK0
  1244  07EB  30FB               	movlw	low __pidataBANK0
  1245  07EC  0084               	movwf	4
  1246  07ED  3084               	movlw	(high __pidataBANK0)| (0+128)
  1247  07EE  0085               	movwf	5
  1248  07EF  302F               	movlw	low __pdataBANK0
  1249  07F0  0086               	movwf	6
  1250  07F1  3000               	movlw	high __pdataBANK0
  1251  07F2  0087               	movwf	7
  1252  07F3  300E               	movlw	14
  1253  07F4  3184  24AD  3187   	fcall	init_ram
  1254                           
  1255                           ; Clear objects allocated to COMMON
  1256  07F7  01FD               	clrf	__pbssCOMMON& (0+127)
  1257                           
  1258                           ; Clear objects allocated to BANK0
  1259  07F8  01BD               	clrf	__pbssBANK0& (0+127)
  1260  07F9  01BE               	clrf	(__pbssBANK0+1)& (0+127)
  1261  07FA  01BF               	clrf	(__pbssBANK0+2)& (0+127)
  1262  07FB  01C0               	clrf	(__pbssBANK0+3)& (0+127)
  1263  07FC  01C1               	clrf	(__pbssBANK0+4)& (0+127)
  1264  07FD                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267  07FD                     __end_of__initialization:
  1268  07FD  0020               	movlb	0
  1269  07FE  3187  2F10         	ljmp	_main	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMMON
  1272  007D                     __pbssCOMMON:
  1273  007D                     _m_brightness:
  1274  007D                     	ds	1
  1275                           
  1276                           	psect	bssBANK0
  1277  003D                     __pbssBANK0:
  1278  003D                     clear@F2384:
  1279  003D                     	ds	4
  1280  0041                     _cnt:
  1281  0041                     	ds	1
  1282                           
  1283                           	psect	dataBANK0
  1284  002F                     __pdataBANK0:
  1285  002F                     _segdata:
  1286  002F                     	ds	10
  1287  0039                     rtc_display@F2398:
  1288  0039                     	ds	4
  1289                           
  1290                           	psect	inittext
  1291  04AD                     init_ram:
  1292  04AD  00FE               	movwf	btemp
  1293  04AE                     initloop:
  1294  04AE  0012               	moviw fsr0++
  1295  04AF  001E               	movwi fsr1++
  1296  04B0  0BFE               	decfsz	btemp,f
  1297  04B1  2CAE               	goto	initloop
  1298  04B2  3400               	retlw	0
  1299                           
  1300                           	psect	cstackCOMMON
  1301  0070                     __pcstackCOMMON:
  1302  0070                     ?_OSCILLATOR_Initialize:
  1303  0070                     ??_OSCILLATOR_Initialize:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_WDT_Initialize:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ??_WDT_Initialize:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_set_brigthness:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_rtc_display:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_encode_dig:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ??_encode_dig:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_PIN_MANAGER_Initialize:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ??_PIN_MANAGER_Initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_SYSTEM_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ??_SYSTEM_Initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_main:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_i2c_wait:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ??_i2c_wait:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_i2c_start:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ??_i2c_start:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_i2c_stop:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ??_i2c_stop:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_write_byte:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ??_write_byte:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_recv_byte:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ??_recv_byte:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_bit_delay:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ??_bit_delay:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_start:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ??_start:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_stop:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ??_stop:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_write_data:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ??_write_data:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_bcd_2_decimal:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?___bmul:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?___awdiv:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?___awmod:	
  1403                           ; 2 bytes @ 0x0
  1404                           
  1405  0070                     write_byte@data:	
  1406                           ; 2 bytes @ 0x0
  1407                           
  1408  0070                     set_brigthness@on:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     encode_dig@digit:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ___bmul@multiplicand:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ___awdiv@divisor:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ___awmod@divisor:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x0
  1425  0070                     	ds	1
  1426  0071                     ??_set_brigthness:
  1427  0071                     ??___bmul:	
  1428                           ; 1 bytes @ 0x1
  1429                           
  1430  0071                     recv_byte@ack:	
  1431                           ; 1 bytes @ 0x1
  1432                           
  1433  0071                     write_data@b:	
  1434                           ; 1 bytes @ 0x1
  1435                           
  1436                           
  1437                           ; 1 bytes @ 0x1
  1438  0071                     	ds	1
  1439  0072                     recv_byte@data:
  1440  0072                     write_data@ack:	
  1441                           ; 1 bytes @ 0x2
  1442                           
  1443  0072                     set_brigthness@brightness:	
  1444                           ; 1 bytes @ 0x2
  1445                           
  1446  0072                     ___bmul@product:	
  1447                           ; 1 bytes @ 0x2
  1448                           
  1449  0072                     ___awdiv@dividend:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0072                     ___awmod@dividend:	
  1453                           ; 2 bytes @ 0x2
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x2
  1457  0072                     	ds	1
  1458  0073                     write_data@data:
  1459  0073                     ___bmul@multiplier:	
  1460                           ; 1 bytes @ 0x3
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x3
  1464  0073                     	ds	1
  1465  0074                     ??_bcd_2_decimal:
  1466  0074                     ??___awdiv:	
  1467                           ; 1 bytes @ 0x4
  1468                           
  1469  0074                     ??___awmod:	
  1470                           ; 1 bytes @ 0x4
  1471                           
  1472  0074                     write_data@i:	
  1473                           ; 1 bytes @ 0x4
  1474                           
  1475                           
  1476                           ; 1 bytes @ 0x4
  1477  0074                     	ds	1
  1478  0075                     ?_set_segments:
  1479  0075                     set_segments@length:	
  1480                           ; 1 bytes @ 0x5
  1481                           
  1482  0075                     ___awdiv@counter:	
  1483                           ; 1 bytes @ 0x5
  1484                           
  1485  0075                     ___awmod@counter:	
  1486                           ; 1 bytes @ 0x5
  1487                           
  1488                           
  1489                           ; 1 bytes @ 0x5
  1490  0075                     	ds	1
  1491  0076                     set_segments@pos:
  1492  0076                     ___awdiv@sign:	
  1493                           ; 1 bytes @ 0x6
  1494                           
  1495  0076                     ___awmod@sign:	
  1496                           ; 1 bytes @ 0x6
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0x6
  1500  0076                     	ds	1
  1501  0077                     ??_set_segments:
  1502  0077                     bcd_2_decimal@number:	
  1503                           ; 1 bytes @ 0x7
  1504                           
  1505  0077                     ___awdiv@quotient:	
  1506                           ; 1 bytes @ 0x7
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x7
  1510  0077                     	ds	1
  1511  0078                     ?_read_dates:
  1512  0078                     set_segments@segments:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515  0078                     read_dates@sec:	
  1516                           ; 1 bytes @ 0x8
  1517                           
  1518                           
  1519                           ; 1 bytes @ 0x8
  1520  0078                     	ds	1
  1521  0079                     ??_read_dates:
  1522  0079                     set_segments@k:	
  1523                           ; 1 bytes @ 0x9
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0x9
  1527  0079                     	ds	1
  1528  007A                     ??_rtc_display:
  1529  007A                     read_dates@min:	
  1530                           ; 1 bytes @ 0xA
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0xA
  1534  007A                     	ds	3
  1535                           
  1536                           	psect	cstackBANK0
  1537  0020                     __pcstackBANK0:
  1538  0020                     	ds	2
  1539  0022                     rtc_display@segments:
  1540                           
  1541                           ; 4 bytes @ 0x2
  1542  0022                     	ds	4
  1543  0026                     rtc_display@date:
  1544                           
  1545                           ; 1 bytes @ 0x6
  1546  0026                     	ds	1
  1547  0027                     ??_main:
  1548                           
  1549                           ; 1 bytes @ 0x7
  1550  0027                     	ds	2
  1551  0029                     main@date:
  1552                           
  1553                           ; 6 bytes @ 0x9
  1554  0029                     	ds	6
  1555                           
  1556                           	psect	maintext
  1557  0710                     __pmaintext:	
  1558 ;;
  1559 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1560 ;;
  1561 ;; *************** function _main *****************
  1562 ;; Defined at:
  1563 ;;		line 11 in file "main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  date            6    9[BANK0 ] struct Date
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : B1F/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1577 ;;      Params:         0       0       0       0       0       0
  1578 ;;      Locals:         0       6       0       0       0       0
  1579 ;;      Temps:          0       2       0       0       0       0
  1580 ;;      Totals:         0       8       0       0       0       0
  1581 ;;Total ram usage:        8 bytes
  1582 ;; Hardware stack levels required when called:    4
  1583 ;; This function calls:
  1584 ;;		_SYSTEM_Initialize
  1585 ;;		_read_dates
  1586 ;;		_rtc_display
  1587 ;;		_set_brigthness
  1588 ;; This function is called by:
  1589 ;;		Startup code after reset
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _main
  1595  0710                     _main:
  1596  0710                     l1580:	
  1597                           ;incstack = 0
  1598                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1599                           
  1600                           
  1601                           ;main.c: 14: SYSTEM_Initialize();
  1602  0710  3184  24DB  3187   	fcall	_SYSTEM_Initialize
  1603  0713                     l1582:
  1604                           
  1605                           ;main.c: 16: TRISB2 = 1;
  1606  0713  0021               	movlb	1	; select bank1
  1607  0714  150D               	bsf	13,2	;volatile
  1608  0715                     l1584:
  1609                           
  1610                           ;main.c: 17: TRISB5 = 1;
  1611  0715  168D               	bsf	13,5	;volatile
  1612  0716                     l1586:
  1613                           
  1614                           ;main.c: 23: SSP2ADD = 0x13;
  1615  0716  3013               	movlw	19
  1616  0717  0024               	movlb	4	; select bank4
  1617  0718  009A               	movwf	26	;volatile
  1618  0719                     l1588:
  1619                           
  1620                           ;main.c: 24: SSP2CON1 = 0x28;
  1621  0719  3028               	movlw	40
  1622  071A  009D               	movwf	29	;volatile
  1623  071B                     l1590:
  1624                           
  1625                           ;main.c: 25: SSP2CON2 = 0x0;
  1626  071B  019E               	clrf	30	;volatile
  1627  071C                     l1592:
  1628                           
  1629                           ;main.c: 26: SSP2STAT = 0;
  1630  071C  019C               	clrf	28	;volatile
  1631  071D                     l1594:
  1632                           
  1633                           ;main.c: 28: struct Date date;;main.c: 29: date.year = 20;
  1634  071D  3014               	movlw	20
  1635  071E  0020               	movlb	0	; select bank0
  1636  071F  00A7               	movwf	??_main
  1637  0720  0827               	movf	??_main,w
  1638  0721  00A9               	movwf	main@date
  1639  0722                     l1596:
  1640                           
  1641                           ;main.c: 30: date.min = 38;
  1642  0722  3026               	movlw	38
  1643  0723  00A7               	movwf	??_main
  1644  0724  0827               	movf	??_main,w
  1645  0725  00AD               	movwf	main@date+4
  1646  0726                     l1598:
  1647                           
  1648                           ;main.c: 31: date.sec = 14;
  1649  0726  300E               	movlw	14
  1650  0727  00A7               	movwf	??_main
  1651  0728  0827               	movf	??_main,w
  1652  0729  00AE               	movwf	main@date+5
  1653  072A                     l1600:
  1654                           
  1655                           ;main.c: 33: sec = 20;
  1656  072A  3014               	movlw	20
  1657  072B  00A7               	movwf	??_main
  1658  072C  0827               	movf	??_main,w
  1659  072D  00C2               	movwf	_sec
  1660  072E                     l1602:
  1661                           
  1662                           ;main.c: 34: min = 11;
  1663  072E  300B               	movlw	11
  1664  072F  00A7               	movwf	??_main
  1665  0730  0827               	movf	??_main,w
  1666  0731  00C3               	movwf	_min
  1667  0732                     l1604:
  1668                           
  1669                           ;main.c: 36: set_brigthness(0x0f, 1);
  1670  0732  01F0               	clrf	set_brigthness@on
  1671  0733  0AF0               	incf	set_brigthness@on,f
  1672  0734  300F               	movlw	15
  1673  0735  3185  2519  3187   	fcall	_set_brigthness
  1674  0738                     l1606:
  1675                           
  1676                           ;main.c: 38: rtc_display(&date);
  1677  0738  3029               	movlw	(low (main@date| 0))& (0+255)
  1678  0739  3187  277A  3187   	fcall	_rtc_display
  1679  073C                     l1608:
  1680                           
  1681                           ;main.c: 39: cnt = 0;
  1682  073C  0020               	movlb	0	; select bank0
  1683  073D  01C1               	clrf	_cnt
  1684                           
  1685                           ;main.c: 40: while(cnt < 5){
  1686  073E  2F55               	goto	l1616
  1687  073F                     l1610:
  1688                           
  1689                           ;main.c: 41: rtc_display(&date);
  1690  073F  3029               	movlw	(low (main@date| 0))& (0+255)
  1691  0740  3187  277A  3187   	fcall	_rtc_display
  1692  0743                     l1612:
  1693                           
  1694                           ;main.c: 42: cnt++;
  1695  0743  3001               	movlw	1
  1696  0744  0020               	movlb	0	; select bank0
  1697  0745  00A7               	movwf	??_main
  1698  0746  0827               	movf	??_main,w
  1699  0747  07C1               	addwf	_cnt,f
  1700  0748                     l1614:
  1701                           
  1702                           ;main.c: 43: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1703  0748  300B               	movlw	11
  1704  0749  0020               	movlb	0	; select bank0
  1705  074A  00A8               	movwf	??_main+1
  1706  074B  3026               	movlw	38
  1707  074C  00A7               	movwf	??_main
  1708  074D  305D               	movlw	93
  1709  074E                     u777:
  1710  074E  0B89               	decfsz	9,f
  1711  074F  2F4E               	goto	u777
  1712  0750  0BA7               	decfsz	??_main,f
  1713  0751  2F4E               	goto	u777
  1714  0752  0BA8               	decfsz	??_main+1,f
  1715  0753  2F4E               	goto	u777
  1716  0754  3200               	nop2
  1717  0755                     l1616:
  1718  0755  3005               	movlw	5
  1719  0756  0020               	movlb	0	; select bank0
  1720  0757  0241               	subwf	_cnt,w
  1721  0758  1C03               	skipc
  1722  0759  2F5B               	goto	u741
  1723  075A  2F5C               	goto	u740
  1724  075B                     u741:
  1725  075B  2F3F               	goto	l1610
  1726  075C                     u740:
  1727  075C                     l1618:
  1728                           
  1729                           ;main.c: 44: };main.c: 45: cnt = 0;
  1730  075C  01C1               	clrf	_cnt
  1731  075D                     l1620:
  1732                           
  1733                           ;main.c: 48: {;main.c: 50: read_dates(&min, &sec);
  1734  075D  3042               	movlw	(low (_sec| 0))& (0+255)
  1735  075E  0020               	movlb	0	; select bank0
  1736  075F  00A7               	movwf	??_main
  1737  0760  0827               	movf	??_main,w
  1738  0761  00F8               	movwf	read_dates@sec
  1739  0762  3043               	movlw	(low (_min| 0))& (0+255)
  1740  0763  3186  26AE  3187   	fcall	_read_dates
  1741  0766                     l1622:
  1742                           
  1743                           ;main.c: 52: rtc_display(&date);
  1744  0766  3029               	movlw	(low (main@date| 0))& (0+255)
  1745  0767  3187  277A  3187   	fcall	_rtc_display
  1746  076A                     l1624:
  1747                           
  1748                           ;main.c: 53: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1749  076A  300B               	movlw	11
  1750  076B  0020               	movlb	0	; select bank0
  1751  076C  00A8               	movwf	??_main+1
  1752  076D  3026               	movlw	38
  1753  076E  00A7               	movwf	??_main
  1754  076F  305D               	movlw	93
  1755  0770                     u787:
  1756  0770  0B89               	decfsz	9,f
  1757  0771  2F70               	goto	u787
  1758  0772  0BA7               	decfsz	??_main,f
  1759  0773  2F70               	goto	u787
  1760  0774  0BA8               	decfsz	??_main+1,f
  1761  0775  2F70               	goto	u787
  1762  0776  3200               	nop2
  1763  0777  2F5D               	goto	l1620
  1764  0778  3180  2802         	ljmp	start
  1765  077A                     __end_of_main:
  1766                           
  1767                           	psect	text1
  1768  0519                     __ptext1:	
  1769 ;; *************** function _set_brigthness *****************
  1770 ;; Defined at:
  1771 ;;		line 97 in file "TM1637.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  brightness      1    wreg     unsigned char 
  1774 ;;  on              1    0[COMMON] unsigned char 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  brightness      1    2[COMMON] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1786 ;;      Params:         1       0       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0       0
  1789 ;;      Totals:         3       0       0       0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _set_brigthness
  1801  0519                     _set_brigthness:
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1805                           ;set_brigthness@brightness stored from wreg
  1806  0519  00F2               	movwf	set_brigthness@brightness
  1807  051A                     l1522:
  1808                           
  1809                           ;TM1637.c: 98: if(on == 1){
  1810  051A  0370               	decf	set_brigthness@on,w
  1811  051B  1D03               	btfss	3,2
  1812  051C  2D1E               	goto	u721
  1813  051D  2D1F               	goto	u720
  1814  051E                     u721:
  1815  051E  2D26               	goto	l1526
  1816  051F                     u720:
  1817  051F                     l1524:
  1818                           
  1819                           ;TM1637.c: 99: m_brightness = (brightness & 0x7 | 0x08);
  1820  051F  0872               	movf	set_brigthness@brightness,w
  1821  0520  3907               	andlw	7
  1822  0521  3808               	iorlw	8
  1823  0522  00F1               	movwf	??_set_brigthness
  1824  0523  0871               	movf	??_set_brigthness,w
  1825  0524  00FD               	movwf	_m_brightness
  1826                           
  1827                           ;TM1637.c: 100: }else{
  1828  0525  2D2B               	goto	l239
  1829  0526                     l1526:
  1830                           
  1831                           ;TM1637.c: 101: m_brightness = (brightness & 0x7 | 0x00);
  1832  0526  0872               	movf	set_brigthness@brightness,w
  1833  0527  3907               	andlw	7
  1834  0528  00F1               	movwf	??_set_brigthness
  1835  0529  0871               	movf	??_set_brigthness,w
  1836  052A  00FD               	movwf	_m_brightness
  1837  052B                     l239:
  1838  052B  0008               	return
  1839  052C                     __end_of_set_brigthness:
  1840                           
  1841                           	psect	text2
  1842  077A                     __ptext2:	
  1843 ;; *************** function _rtc_display *****************
  1844 ;; Defined at:
  1845 ;;		line 59 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  date            1    wreg     PTR struct Date
  1848 ;;		 -> main@date(6), 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  date            1    6[BANK0 ] PTR struct Date
  1851 ;;		 -> main@date(6), 
  1852 ;;  segments        4    2[BANK0 ] unsigned char [4]
  1853 ;;  month           1    0        unsigned char 
  1854 ;;  year            1    0        unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1864 ;;      Params:         0       0       0       0       0       0
  1865 ;;      Locals:         0       7       0       0       0       0
  1866 ;;      Temps:          3       0       0       0       0       0
  1867 ;;      Totals:         3       7       0       0       0       0
  1868 ;;Total ram usage:       10 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    3
  1871 ;; This function calls:
  1872 ;;		___awdiv
  1873 ;;		___awmod
  1874 ;;		_encode_dig
  1875 ;;		_set_segments
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _rtc_display
  1883  077A                     _rtc_display:
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1887                           ;rtc_display@date stored from wreg
  1888  077A  0020               	movlb	0	; select bank0
  1889  077B  00A6               	movwf	rtc_display@date
  1890  077C                     l1528:
  1891                           
  1892                           ;main.c: 60: uint8_t segments[] = {0xff, 0xff, 0xff, 0xff};
  1893  077C  083C               	movf	rtc_display@F2398+3,w
  1894  077D  00A5               	movwf	rtc_display@segments+3
  1895  077E  083B               	movf	rtc_display@F2398+2,w
  1896  077F  00A4               	movwf	rtc_display@segments+2
  1897  0780  083A               	movf	rtc_display@F2398+1,w
  1898  0781  00A3               	movwf	rtc_display@segments+1
  1899  0782  0839               	movf	rtc_display@F2398,w
  1900  0783  00A2               	movwf	rtc_display@segments
  1901  0784                     l1530:
  1902  0784                     l1532:
  1903  0784                     l1534:
  1904                           
  1905                           ;main.c: 66: sec = sec+cnt;
  1906  0784  0842               	movf	_sec,w
  1907  0785  0741               	addwf	_cnt,w
  1908  0786  00FA               	movwf	??_rtc_display
  1909  0787  087A               	movf	??_rtc_display,w
  1910  0788  00C2               	movwf	_sec
  1911  0789                     l1536:
  1912                           
  1913                           ;main.c: 69: segments[0] = encode_dig(min / 10);
  1914  0789  300A               	movlw	10
  1915  078A  00F0               	movwf	___awdiv@divisor
  1916  078B  3000               	movlw	0
  1917  078C  00F1               	movwf	___awdiv@divisor+1
  1918  078D  0843               	movf	_min,w
  1919  078E  00FA               	movwf	??_rtc_display
  1920  078F  01FB               	clrf	??_rtc_display+1
  1921  0790  087A               	movf	??_rtc_display,w
  1922  0791  00F2               	movwf	___awdiv@dividend
  1923  0792  087B               	movf	??_rtc_display+1,w
  1924  0793  00F3               	movwf	___awdiv@dividend+1
  1925  0794  3186  264F  3187   	fcall	___awdiv
  1926  0797  0870               	movf	?___awdiv,w
  1927  0798  3184  24C1  3187   	fcall	_encode_dig
  1928  079B  00FC               	movwf	??_rtc_display+2
  1929  079C  087C               	movf	??_rtc_display+2,w
  1930  079D  0020               	movlb	0	; select bank0
  1931  079E  00A2               	movwf	rtc_display@segments
  1932  079F                     l1538:
  1933                           
  1934                           ;main.c: 70: segments[1] = encode_dig(min % 10);
  1935  079F  300A               	movlw	10
  1936  07A0  00F0               	movwf	___awmod@divisor
  1937  07A1  3000               	movlw	0
  1938  07A2  00F1               	movwf	___awmod@divisor+1
  1939  07A3  0843               	movf	_min,w
  1940  07A4  00FA               	movwf	??_rtc_display
  1941  07A5  01FB               	clrf	??_rtc_display+1
  1942  07A6  087A               	movf	??_rtc_display,w
  1943  07A7  00F2               	movwf	___awmod@dividend
  1944  07A8  087B               	movf	??_rtc_display+1,w
  1945  07A9  00F3               	movwf	___awmod@dividend+1
  1946  07AA  3185  25FC  3187   	fcall	___awmod
  1947  07AD  0870               	movf	?___awmod,w
  1948  07AE  3184  24C1  3187   	fcall	_encode_dig
  1949  07B1  00FC               	movwf	??_rtc_display+2
  1950  07B2  087C               	movf	??_rtc_display+2,w
  1951  07B3  0020               	movlb	0	; select bank0
  1952  07B4  00A3               	movwf	rtc_display@segments+1
  1953  07B5                     l1540:
  1954                           
  1955                           ;main.c: 71: segments[2] = encode_dig(sec / 10);
  1956  07B5  300A               	movlw	10
  1957  07B6  00F0               	movwf	___awdiv@divisor
  1958  07B7  3000               	movlw	0
  1959  07B8  00F1               	movwf	___awdiv@divisor+1
  1960  07B9  0842               	movf	_sec,w
  1961  07BA  00FA               	movwf	??_rtc_display
  1962  07BB  01FB               	clrf	??_rtc_display+1
  1963  07BC  087A               	movf	??_rtc_display,w
  1964  07BD  00F2               	movwf	___awdiv@dividend
  1965  07BE  087B               	movf	??_rtc_display+1,w
  1966  07BF  00F3               	movwf	___awdiv@dividend+1
  1967  07C0  3186  264F  3187   	fcall	___awdiv
  1968  07C3  0870               	movf	?___awdiv,w
  1969  07C4  3184  24C1  3187   	fcall	_encode_dig
  1970  07C7  00FC               	movwf	??_rtc_display+2
  1971  07C8  087C               	movf	??_rtc_display+2,w
  1972  07C9  0020               	movlb	0	; select bank0
  1973  07CA  00A4               	movwf	rtc_display@segments+2
  1974  07CB                     l1542:
  1975                           
  1976                           ;main.c: 72: segments[3] = encode_dig(sec % 10);
  1977  07CB  300A               	movlw	10
  1978  07CC  00F0               	movwf	___awmod@divisor
  1979  07CD  3000               	movlw	0
  1980  07CE  00F1               	movwf	___awmod@divisor+1
  1981  07CF  0842               	movf	_sec,w
  1982  07D0  00FA               	movwf	??_rtc_display
  1983  07D1  01FB               	clrf	??_rtc_display+1
  1984  07D2  087A               	movf	??_rtc_display,w
  1985  07D3  00F2               	movwf	___awmod@dividend
  1986  07D4  087B               	movf	??_rtc_display+1,w
  1987  07D5  00F3               	movwf	___awmod@dividend+1
  1988  07D6  3185  25FC  3187   	fcall	___awmod
  1989  07D9  0870               	movf	?___awmod,w
  1990  07DA  3184  24C1  3187   	fcall	_encode_dig
  1991  07DD  00FC               	movwf	??_rtc_display+2
  1992  07DE  087C               	movf	??_rtc_display+2,w
  1993  07DF  0020               	movlb	0	; select bank0
  1994  07E0  00A5               	movwf	rtc_display@segments+3
  1995  07E1                     l1544:
  1996                           
  1997                           ;main.c: 74: set_segments(segments, 4, 0);
  1998  07E1  3004               	movlw	4
  1999  07E2  00FA               	movwf	??_rtc_display
  2000  07E3  087A               	movf	??_rtc_display,w
  2001  07E4  00F5               	movwf	set_segments@length
  2002  07E5  01F6               	clrf	set_segments@pos
  2003  07E6  3022               	movlw	(low (rtc_display@segments| 0))& (0+255)
  2004  07E7  3185  2583  3187   	fcall	_set_segments
  2005  07EA                     l99:
  2006  07EA  0008               	return
  2007  07EB                     __end_of_rtc_display:
  2008                           
  2009                           	psect	text3
  2010  0583                     __ptext3:	
  2011 ;; *************** function _set_segments *****************
  2012 ;; Defined at:
  2013 ;;		line 105 in file "TM1637.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  segments        1    wreg     PTR const unsigned char 
  2016 ;;		 -> clear@data(4), rtc_display@segments(4), 
  2017 ;;  length          1    5[COMMON] unsigned char 
  2018 ;;  pos             1    6[COMMON] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  segments        1    8[COMMON] PTR const unsigned char 
  2021 ;;		 -> clear@data(4), rtc_display@segments(4), 
  2022 ;;  k               1    9[COMMON] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2032 ;;      Params:         2       0       0       0       0       0
  2033 ;;      Locals:         2       0       0       0       0       0
  2034 ;;      Temps:          1       0       0       0       0       0
  2035 ;;      Totals:         5       0       0       0       0       0
  2036 ;;Total ram usage:        5 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    2
  2039 ;; This function calls:
  2040 ;;		_start
  2041 ;;		_stop
  2042 ;;		_write_data
  2043 ;; This function is called by:
  2044 ;;		_rtc_display
  2045 ;;		_clear
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _set_segments
  2051  0583                     _set_segments:
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2055                           ;set_segments@segments stored from wreg
  2056  0583  00F8               	movwf	set_segments@segments
  2057  0584                     l1386:
  2058                           
  2059                           ;TM1637.c: 108: start();
  2060  0584  3184  24C9  3185   	fcall	_start
  2061  0587                     l1388:
  2062                           
  2063                           ;TM1637.c: 109: write_data(0x40);
  2064  0587  3040               	movlw	64
  2065  0588  3185  25BD  3185   	fcall	_write_data
  2066  058B                     l1390:
  2067                           
  2068                           ;TM1637.c: 110: stop();
  2069  058B  3184  24D2  3185   	fcall	_stop
  2070  058E                     l1392:
  2071                           
  2072                           ;TM1637.c: 113: start();
  2073  058E  3184  24C9  3185   	fcall	_start
  2074  0591                     l1394:
  2075                           
  2076                           ;TM1637.c: 114: write_data(0xC0 + (pos & 0x03));
  2077  0591  0876               	movf	set_segments@pos,w
  2078  0592  3903               	andlw	3
  2079  0593  3EC0               	addlw	192
  2080  0594  3185  25BD  3185   	fcall	_write_data
  2081  0597                     l1396:
  2082                           
  2083                           ;TM1637.c: 117: for(uint8_t k = 0; k < length; k++){
  2084  0597  01F9               	clrf	set_segments@k
  2085  0598  2DA7               	goto	l1402
  2086  0599                     l1398:
  2087                           
  2088                           ;TM1637.c: 118: write_data(segments[k]);
  2089  0599  0879               	movf	set_segments@k,w
  2090  059A  0778               	addwf	set_segments@segments,w
  2091  059B  00F7               	movwf	??_set_segments
  2092  059C  0877               	movf	??_set_segments,w
  2093  059D  0086               	movwf	6
  2094  059E  0187               	clrf	7
  2095  059F  0801               	movf	1,w
  2096  05A0  3185  25BD  3185   	fcall	_write_data
  2097  05A3                     l1400:
  2098  05A3  3001               	movlw	1
  2099  05A4  00F7               	movwf	??_set_segments
  2100  05A5  0877               	movf	??_set_segments,w
  2101  05A6  07F9               	addwf	set_segments@k,f
  2102  05A7                     l1402:
  2103  05A7  0875               	movf	set_segments@length,w
  2104  05A8  0279               	subwf	set_segments@k,w
  2105  05A9  1C03               	skipc
  2106  05AA  2DAC               	goto	u461
  2107  05AB  2DAD               	goto	u460
  2108  05AC                     u461:
  2109  05AC  2D99               	goto	l1398
  2110  05AD                     u460:
  2111  05AD                     l1404:
  2112                           
  2113                           ;TM1637.c: 119: };TM1637.c: 121: stop();
  2114  05AD  3184  24D2  3185   	fcall	_stop
  2115                           
  2116                           ;TM1637.c: 124: start();
  2117  05B0  3184  24C9  3185   	fcall	_start
  2118  05B3                     l1406:
  2119                           
  2120                           ;TM1637.c: 125: write_data(0x80 + (m_brightness & 0x0f));
  2121  05B3  087D               	movf	_m_brightness,w
  2122  05B4  390F               	andlw	15
  2123  05B5  3E80               	addlw	128
  2124  05B6  3185  25BD  3185   	fcall	_write_data
  2125  05B9                     l1408:
  2126                           
  2127                           ;TM1637.c: 126: stop();
  2128  05B9  3184  24D2  3185   	fcall	_stop
  2129  05BC                     l245:
  2130  05BC  0008               	return
  2131  05BD                     __end_of_set_segments:
  2132                           
  2133                           	psect	text4
  2134  05BD                     __ptext4:	
  2135 ;; *************** function _write_data *****************
  2136 ;; Defined at:
  2137 ;;		line 56 in file "TM1637.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  b               1    wreg     unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  b               1    1[COMMON] unsigned char 
  2142 ;;  i               1    4[COMMON] unsigned char 
  2143 ;;  data            1    3[COMMON] unsigned char 
  2144 ;;  ack             1    2[COMMON] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      unsigned char 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2154 ;;      Params:         0       0       0       0       0       0
  2155 ;;      Locals:         4       0       0       0       0       0
  2156 ;;      Temps:          1       0       0       0       0       0
  2157 ;;      Totals:         5       0       0       0       0       0
  2158 ;;Total ram usage:        5 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    1
  2161 ;; This function calls:
  2162 ;;		_bit_delay
  2163 ;; This function is called by:
  2164 ;;		_set_segments
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           
  2169                           ;psect for function _write_data
  2170  05BD                     _write_data:
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  2174                           ;write_data@b stored from wreg
  2175  05BD  00F1               	movwf	write_data@b
  2176  05BE                     l1314:
  2177                           
  2178                           ;TM1637.c: 57: uint8_t data = b;
  2179  05BE  0871               	movf	write_data@b,w
  2180  05BF  00F0               	movwf	??_write_data
  2181  05C0  0870               	movf	??_write_data,w
  2182  05C1  00F3               	movwf	write_data@data
  2183  05C2                     l1316:
  2184  05C2  0021               	movlb	1	; select bank1
  2185  05C3  100C               	bcf	12,0	;volatile
  2186  05C4                     l1318:
  2187                           
  2188                           ;TM1637.c: 60: for(uint8_t i = 0; i < 8; i++){
  2189  05C4  01F4               	clrf	write_data@i
  2190  05C5                     l209:	
  2191                           ;TM1637.c: 61: do { LATAbits.LATA0 = 0; } while(0);
  2192                           
  2193  05C5  0022               	movlb	2	; select bank2
  2194  05C6  100C               	bcf	12,0	;volatile
  2195  05C7                     l210:
  2196                           
  2197                           ;TM1637.c: 63: if(data & 0x01){
  2198  05C7  1C73               	btfss	write_data@data,0
  2199  05C8  2DCA               	goto	u411
  2200  05C9  2DCB               	goto	u410
  2201  05CA                     u411:
  2202  05CA  2DCD               	goto	l215
  2203  05CB                     u410:
  2204  05CB                     l212:	
  2205                           ;TM1637.c: 64: do { LATAbits.LATA3 = 1; } while(0);
  2206                           
  2207  05CB  158C               	bsf	12,3	;volatile
  2208  05CC  2DCE               	goto	l217
  2209  05CD                     l215:	
  2210                           ;TM1637.c: 66: do { LATAbits.LATA3 = 0; } while(0);
  2211                           
  2212  05CD  118C               	bcf	12,3	;volatile
  2213  05CE                     l217:	
  2214                           ;TM1637.c: 67: };TM1637.c: 69: do { LATAbits.LATA0 = 1; } while(0);
  2215                           
  2216  05CE  140C               	bsf	12,0	;volatile
  2217  05CF                     l1324:
  2218                           
  2219                           ;TM1637.c: 71: data = data >> 1;
  2220  05CF  3673               	lsrf	write_data@data,w
  2221  05D0  00F0               	movwf	??_write_data
  2222  05D1  0870               	movf	??_write_data,w
  2223  05D2  00F3               	movwf	write_data@data
  2224  05D3  3001               	movlw	1
  2225  05D4  00F0               	movwf	??_write_data
  2226  05D5  0870               	movf	??_write_data,w
  2227  05D6  07F4               	addwf	write_data@i,f
  2228  05D7                     l1326:
  2229  05D7  3008               	movlw	8
  2230  05D8  0274               	subwf	write_data@i,w
  2231  05D9  1C03               	skipc
  2232  05DA  2DDC               	goto	u421
  2233  05DB  2DDD               	goto	u420
  2234  05DC                     u421:
  2235  05DC  2DC5               	goto	l209
  2236  05DD                     u420:
  2237  05DD                     l219:	
  2238                           ;TM1637.c: 72: };TM1637.c: 75: do { LATAbits.LATA0 = 0; } while(0);
  2239                           
  2240  05DD  100C               	bcf	12,0	;volatile
  2241  05DE                     l221:	
  2242                           ;TM1637.c: 76: do { LATAbits.LATA3 = 1; } while(0);
  2243                           
  2244  05DE  158C               	bsf	12,3	;volatile
  2245  05DF                     l223:	
  2246                           ;TM1637.c: 79: do { LATAbits.LATA0 = 1; } while(0);
  2247                           
  2248  05DF  140C               	bsf	12,0	;volatile
  2249  05E0                     l225:	
  2250                           ;TM1637.c: 81: do { TRISAbits.TRISA3 = 1; } while(0);
  2251                           
  2252  05E0  0021               	movlb	1	; select bank1
  2253  05E1  158C               	bsf	12,3	;volatile
  2254  05E2                     l1328:
  2255                           
  2256                           ;TM1637.c: 82: bit_delay();
  2257  05E2  3184  24A8  3185   	fcall	_bit_delay
  2258  05E5                     l1330:
  2259                           
  2260                           ;TM1637.c: 84: uint8_t ack = PORTAbits.RA3;
  2261  05E5  3000               	movlw	0
  2262  05E6  0020               	movlb	0	; select bank0
  2263  05E7  198C               	btfsc	12,3	;volatile
  2264  05E8  3001               	movlw	1
  2265  05E9  00F2               	movwf	write_data@ack
  2266  05EA                     l1332:
  2267                           
  2268                           ;TM1637.c: 85: if(ack == 0){
  2269  05EA  0872               	movf	write_data@ack,w
  2270  05EB  1D03               	btfss	3,2
  2271  05EC  2DEE               	goto	u431
  2272  05ED  2DEF               	goto	u430
  2273  05EE                     u431:
  2274  05EE  2DF3               	goto	l1334
  2275  05EF                     u430:
  2276  05EF                     l228:	
  2277                           ;TM1637.c: 86: do { TRISAbits.TRISA3 = 0; } while(0);
  2278                           
  2279  05EF  0021               	movlb	1	; select bank1
  2280  05F0  118C               	bcf	12,3	;volatile
  2281  05F1                     l230:	
  2282                           ;TM1637.c: 87: do { LATAbits.LATA3 = 0; } while(0);
  2283                           
  2284  05F1  0022               	movlb	2	; select bank2
  2285  05F2  118C               	bcf	12,3	;volatile
  2286  05F3                     l1334:
  2287                           
  2288                           ;TM1637.c: 88: };TM1637.c: 90: bit_delay();
  2289  05F3  3184  24A8  3185   	fcall	_bit_delay
  2290  05F6                     l1336:
  2291  05F6  0021               	movlb	1	; select bank1
  2292  05F7  118C               	bcf	12,3	;volatile
  2293  05F8                     l233:
  2294                           
  2295                           ;TM1637.c: 92: bit_delay();
  2296  05F8  3184  24A8  3185   	fcall	_bit_delay
  2297  05FB                     l234:
  2298  05FB  0008               	return
  2299  05FC                     __end_of_write_data:
  2300                           
  2301                           	psect	text5
  2302  04A8                     __ptext5:	
  2303 ;; *************** function _bit_delay *****************
  2304 ;; Defined at:
  2305 ;;		line 30 in file "TM1637.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		None
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2319 ;;      Params:         0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_write_data
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _bit_delay
  2334  04A8                     _bit_delay:
  2335  04A8                     l172:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _bit_delay: []
  2338                           
  2339  04A8  0008               	return
  2340  04A9                     __end_of_bit_delay:
  2341                           
  2342                           	psect	text6
  2343  04D2                     __ptext6:	
  2344 ;; *************** function _stop *****************
  2345 ;; Defined at:
  2346 ;;		line 45 in file "TM1637.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		None
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2360 ;;      Params:         0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_set_segments
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _stop
  2375  04D2                     _stop:
  2376  04D2                     l190:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _stop: []
  2379                           ;TM1637.c: 46: do { TRISAbits.TRISA3 = 0; } while(0);
  2380                           
  2381  04D2  0021               	movlb	1	; select bank1
  2382  04D3  118C               	bcf	12,3	;volatile
  2383  04D4                     l192:	
  2384                           ;TM1637.c: 47: do { TRISAbits.TRISA0 = 0; } while(0);
  2385                           
  2386  04D4  100C               	bcf	12,0	;volatile
  2387  04D5                     l194:	
  2388                           ;TM1637.c: 49: do { LATAbits.LATA0 = 0; } while(0);
  2389                           
  2390  04D5  0022               	movlb	2	; select bank2
  2391  04D6  100C               	bcf	12,0	;volatile
  2392  04D7                     l196:	
  2393                           ;TM1637.c: 50: do { LATAbits.LATA3 = 0; } while(0);
  2394                           
  2395  04D7  118C               	bcf	12,3	;volatile
  2396  04D8                     l198:	
  2397                           ;TM1637.c: 52: do { LATAbits.LATA0 = 1; } while(0);
  2398                           
  2399  04D8  140C               	bsf	12,0	;volatile
  2400  04D9                     l200:	
  2401                           ;TM1637.c: 53: do { LATAbits.LATA3 = 1; } while(0);
  2402                           
  2403  04D9  158C               	bsf	12,3	;volatile
  2404  04DA                     l202:
  2405  04DA  0008               	return
  2406  04DB                     __end_of_stop:
  2407                           
  2408                           	psect	text7
  2409  04C9                     __ptext7:	
  2410 ;; *************** function _start *****************
  2411 ;; Defined at:
  2412 ;;		line 34 in file "TM1637.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		None
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2426 ;;      Params:         0       0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_set_segments
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _start
  2441  04C9                     _start:
  2442  04C9                     l175:	
  2443                           ;incstack = 0
  2444                           ; Regs used in _start: []
  2445                           ;TM1637.c: 35: do { TRISAbits.TRISA3 = 0; } while(0);
  2446                           
  2447  04C9  0021               	movlb	1	; select bank1
  2448  04CA  118C               	bcf	12,3	;volatile
  2449  04CB                     l177:	
  2450                           ;TM1637.c: 36: do { TRISAbits.TRISA0 = 0; } while(0);
  2451                           
  2452  04CB  100C               	bcf	12,0	;volatile
  2453  04CC                     l179:	
  2454                           ;TM1637.c: 38: do { LATAbits.LATA3 = 1; } while(0);
  2455                           
  2456  04CC  0022               	movlb	2	; select bank2
  2457  04CD  158C               	bsf	12,3	;volatile
  2458  04CE                     l181:	
  2459                           ;TM1637.c: 39: do { LATAbits.LATA0 = 1; } while(0);
  2460                           
  2461  04CE  140C               	bsf	12,0	;volatile
  2462  04CF                     l183:	
  2463                           ;TM1637.c: 41: do { LATAbits.LATA3 = 0; } while(0);
  2464                           
  2465  04CF  118C               	bcf	12,3	;volatile
  2466  04D0                     l185:	
  2467                           ;TM1637.c: 42: do { LATAbits.LATA0 = 0; } while(0);
  2468                           
  2469  04D0  100C               	bcf	12,0	;volatile
  2470  04D1                     l187:
  2471  04D1  0008               	return
  2472  04D2                     __end_of_start:
  2473                           
  2474                           	psect	text8
  2475  04C1                     __ptext8:	
  2476 ;; *************** function _encode_dig *****************
  2477 ;; Defined at:
  2478 ;;		line 134 in file "TM1637.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  digit           1    wreg     unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  digit           1    0[COMMON] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2492 ;;      Params:         0       0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0
  2495 ;;      Totals:         1       0       0       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_rtc_display
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _encode_dig
  2507  04C1                     _encode_dig:
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in _encode_dig: [wreg+fsr1l+fsr1h+status,2+status,0]
  2511                           ;encode_dig@digit stored from wreg
  2512  04C1  00F0               	movwf	encode_dig@digit
  2513  04C2                     l1382:
  2514                           
  2515                           ;TM1637.c: 135: return segdata[digit & 0x0f];
  2516  04C2  0870               	movf	encode_dig@digit,w
  2517  04C3  390F               	andlw	15
  2518  04C4  3E2F               	addlw	(low (_segdata| 0))& (0+255)
  2519  04C5  0086               	movwf	6
  2520  04C6  0187               	clrf	7
  2521  04C7  0801               	movf	1,w
  2522  04C8                     l253:
  2523  04C8  0008               	return
  2524  04C9                     __end_of_encode_dig:
  2525                           
  2526                           	psect	text9
  2527  05FC                     __ptext9:	
  2528 ;; *************** function ___awmod *****************
  2529 ;; Defined at:
  2530 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  divisor         2    0[COMMON] int 
  2533 ;;  dividend        2    2[COMMON] int 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  sign            1    6[COMMON] unsigned char 
  2536 ;;  counter         1    5[COMMON] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  2    0[COMMON] int 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2546 ;;      Params:         4       0       0       0       0       0
  2547 ;;      Locals:         2       0       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0       0
  2549 ;;      Totals:         7       0       0       0       0       0
  2550 ;;Total ram usage:        7 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_rtc_display
  2556 ;;		_decimal_2_bcd
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function ___awmod
  2562  05FC                     ___awmod:
  2563  05FC                     l1482:	
  2564                           ;incstack = 0
  2565                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2566                           
  2567  05FC  01F6               	clrf	___awmod@sign
  2568  05FD                     l1484:
  2569  05FD  1FF3               	btfss	___awmod@dividend+1,7
  2570  05FE  2E00               	goto	u631
  2571  05FF  2E01               	goto	u630
  2572  0600                     u631:
  2573  0600  2E08               	goto	l1490
  2574  0601                     u630:
  2575  0601                     l1486:
  2576  0601  09F2               	comf	___awmod@dividend,f
  2577  0602  09F3               	comf	___awmod@dividend+1,f
  2578  0603  0AF2               	incf	___awmod@dividend,f
  2579  0604  1903               	skipnz
  2580  0605  0AF3               	incf	___awmod@dividend+1,f
  2581  0606                     l1488:
  2582  0606  01F6               	clrf	___awmod@sign
  2583  0607  0AF6               	incf	___awmod@sign,f
  2584  0608                     l1490:
  2585  0608  1FF1               	btfss	___awmod@divisor+1,7
  2586  0609  2E0B               	goto	u641
  2587  060A  2E0C               	goto	u640
  2588  060B                     u641:
  2589  060B  2E11               	goto	l1494
  2590  060C                     u640:
  2591  060C                     l1492:
  2592  060C  09F0               	comf	___awmod@divisor,f
  2593  060D  09F1               	comf	___awmod@divisor+1,f
  2594  060E  0AF0               	incf	___awmod@divisor,f
  2595  060F  1903               	skipnz
  2596  0610  0AF1               	incf	___awmod@divisor+1,f
  2597  0611                     l1494:
  2598  0611  0870               	movf	___awmod@divisor,w
  2599  0612  0471               	iorwf	___awmod@divisor+1,w
  2600  0613  1903               	btfsc	3,2
  2601  0614  2E16               	goto	u651
  2602  0615  2E17               	goto	u650
  2603  0616                     u651:
  2604  0616  2E40               	goto	l1512
  2605  0617                     u650:
  2606  0617                     l1496:
  2607  0617  01F5               	clrf	___awmod@counter
  2608  0618  0AF5               	incf	___awmod@counter,f
  2609  0619  2E23               	goto	l1502
  2610  061A                     l1498:
  2611  061A  3001               	movlw	1
  2612  061B                     u665:
  2613  061B  35F0               	lslf	___awmod@divisor,f
  2614  061C  0DF1               	rlf	___awmod@divisor+1,f
  2615  061D  0B89               	decfsz	9,f
  2616  061E  2E1B               	goto	u665
  2617  061F                     l1500:
  2618  061F  3001               	movlw	1
  2619  0620  00F4               	movwf	??___awmod
  2620  0621  0874               	movf	??___awmod,w
  2621  0622  07F5               	addwf	___awmod@counter,f
  2622  0623                     l1502:
  2623  0623  1FF1               	btfss	___awmod@divisor+1,7
  2624  0624  2E26               	goto	u671
  2625  0625  2E27               	goto	u670
  2626  0626                     u671:
  2627  0626  2E1A               	goto	l1498
  2628  0627                     u670:
  2629  0627                     l1504:
  2630  0627  0871               	movf	___awmod@divisor+1,w
  2631  0628  0273               	subwf	___awmod@dividend+1,w
  2632  0629  1D03               	skipz
  2633  062A  2E2D               	goto	u685
  2634  062B  0870               	movf	___awmod@divisor,w
  2635  062C  0272               	subwf	___awmod@dividend,w
  2636  062D                     u685:
  2637  062D  1C03               	skipc
  2638  062E  2E30               	goto	u681
  2639  062F  2E31               	goto	u680
  2640  0630                     u681:
  2641  0630  2E35               	goto	l1508
  2642  0631                     u680:
  2643  0631                     l1506:
  2644  0631  0870               	movf	___awmod@divisor,w
  2645  0632  02F2               	subwf	___awmod@dividend,f
  2646  0633  0871               	movf	___awmod@divisor+1,w
  2647  0634  3BF3               	subwfb	___awmod@dividend+1,f
  2648  0635                     l1508:
  2649  0635  3001               	movlw	1
  2650  0636                     u695:
  2651  0636  36F1               	lsrf	___awmod@divisor+1,f
  2652  0637  0CF0               	rrf	___awmod@divisor,f
  2653  0638  0B89               	decfsz	9,f
  2654  0639  2E36               	goto	u695
  2655  063A                     l1510:
  2656  063A  3001               	movlw	1
  2657  063B  02F5               	subwf	___awmod@counter,f
  2658  063C  1D03               	btfss	3,2
  2659  063D  2E3F               	goto	u701
  2660  063E  2E40               	goto	u700
  2661  063F                     u701:
  2662  063F  2E27               	goto	l1504
  2663  0640                     u700:
  2664  0640                     l1512:
  2665  0640  0876               	movf	___awmod@sign,w
  2666  0641  1903               	btfsc	3,2
  2667  0642  2E44               	goto	u711
  2668  0643  2E45               	goto	u710
  2669  0644                     u711:
  2670  0644  2E4A               	goto	l1516
  2671  0645                     u710:
  2672  0645                     l1514:
  2673  0645  09F2               	comf	___awmod@dividend,f
  2674  0646  09F3               	comf	___awmod@dividend+1,f
  2675  0647  0AF2               	incf	___awmod@dividend,f
  2676  0648  1903               	skipnz
  2677  0649  0AF3               	incf	___awmod@dividend+1,f
  2678  064A                     l1516:
  2679  064A  0873               	movf	___awmod@dividend+1,w
  2680  064B  00F1               	movwf	?___awmod+1
  2681  064C  0872               	movf	___awmod@dividend,w
  2682  064D  00F0               	movwf	?___awmod
  2683  064E                     l592:
  2684  064E  0008               	return
  2685  064F                     __end_of___awmod:
  2686                           
  2687                           	psect	text10
  2688  064F                     __ptext10:	
  2689 ;; *************** function ___awdiv *****************
  2690 ;; Defined at:
  2691 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  divisor         2    0[COMMON] int 
  2694 ;;  dividend        2    2[COMMON] int 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  quotient        2    7[COMMON] int 
  2697 ;;  sign            1    6[COMMON] unsigned char 
  2698 ;;  counter         1    5[COMMON] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2    0[COMMON] int 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2708 ;;      Params:         4       0       0       0       0       0
  2709 ;;      Locals:         4       0       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0       0
  2711 ;;      Totals:         9       0       0       0       0       0
  2712 ;;Total ram usage:        9 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_rtc_display
  2718 ;;		_decimal_2_bcd
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function ___awdiv
  2724  064F                     ___awdiv:
  2725  064F                     l1438:	
  2726                           ;incstack = 0
  2727                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2728                           
  2729  064F  01F6               	clrf	___awdiv@sign
  2730  0650                     l1440:
  2731  0650  1FF1               	btfss	___awdiv@divisor+1,7
  2732  0651  2E53               	goto	u531
  2733  0652  2E54               	goto	u530
  2734  0653                     u531:
  2735  0653  2E5B               	goto	l1446
  2736  0654                     u530:
  2737  0654                     l1442:
  2738  0654  09F0               	comf	___awdiv@divisor,f
  2739  0655  09F1               	comf	___awdiv@divisor+1,f
  2740  0656  0AF0               	incf	___awdiv@divisor,f
  2741  0657  1903               	skipnz
  2742  0658  0AF1               	incf	___awdiv@divisor+1,f
  2743  0659                     l1444:
  2744  0659  01F6               	clrf	___awdiv@sign
  2745  065A  0AF6               	incf	___awdiv@sign,f
  2746  065B                     l1446:
  2747  065B  1FF3               	btfss	___awdiv@dividend+1,7
  2748  065C  2E5E               	goto	u541
  2749  065D  2E5F               	goto	u540
  2750  065E                     u541:
  2751  065E  2E68               	goto	l1452
  2752  065F                     u540:
  2753  065F                     l1448:
  2754  065F  09F2               	comf	___awdiv@dividend,f
  2755  0660  09F3               	comf	___awdiv@dividend+1,f
  2756  0661  0AF2               	incf	___awdiv@dividend,f
  2757  0662  1903               	skipnz
  2758  0663  0AF3               	incf	___awdiv@dividend+1,f
  2759  0664                     l1450:
  2760  0664  3001               	movlw	1
  2761  0665  00F4               	movwf	??___awdiv
  2762  0666  0874               	movf	??___awdiv,w
  2763  0667  06F6               	xorwf	___awdiv@sign,f
  2764  0668                     l1452:
  2765  0668  01F7               	clrf	___awdiv@quotient
  2766  0669  01F8               	clrf	___awdiv@quotient+1
  2767  066A                     l1454:
  2768  066A  0870               	movf	___awdiv@divisor,w
  2769  066B  0471               	iorwf	___awdiv@divisor+1,w
  2770  066C  1903               	btfsc	3,2
  2771  066D  2E6F               	goto	u551
  2772  066E  2E70               	goto	u550
  2773  066F                     u551:
  2774  066F  2E9F               	goto	l1474
  2775  0670                     u550:
  2776  0670                     l1456:
  2777  0670  01F5               	clrf	___awdiv@counter
  2778  0671  0AF5               	incf	___awdiv@counter,f
  2779  0672  2E7C               	goto	l1462
  2780  0673                     l1458:
  2781  0673  3001               	movlw	1
  2782  0674                     u565:
  2783  0674  35F0               	lslf	___awdiv@divisor,f
  2784  0675  0DF1               	rlf	___awdiv@divisor+1,f
  2785  0676  0B89               	decfsz	9,f
  2786  0677  2E74               	goto	u565
  2787  0678                     l1460:
  2788  0678  3001               	movlw	1
  2789  0679  00F4               	movwf	??___awdiv
  2790  067A  0874               	movf	??___awdiv,w
  2791  067B  07F5               	addwf	___awdiv@counter,f
  2792  067C                     l1462:
  2793  067C  1FF1               	btfss	___awdiv@divisor+1,7
  2794  067D  2E7F               	goto	u571
  2795  067E  2E80               	goto	u570
  2796  067F                     u571:
  2797  067F  2E73               	goto	l1458
  2798  0680                     u570:
  2799  0680                     l1464:
  2800  0680  3001               	movlw	1
  2801  0681                     u585:
  2802  0681  35F7               	lslf	___awdiv@quotient,f
  2803  0682  0DF8               	rlf	___awdiv@quotient+1,f
  2804  0683  0B89               	decfsz	9,f
  2805  0684  2E81               	goto	u585
  2806  0685  0871               	movf	___awdiv@divisor+1,w
  2807  0686  0273               	subwf	___awdiv@dividend+1,w
  2808  0687  1D03               	skipz
  2809  0688  2E8B               	goto	u595
  2810  0689  0870               	movf	___awdiv@divisor,w
  2811  068A  0272               	subwf	___awdiv@dividend,w
  2812  068B                     u595:
  2813  068B  1C03               	skipc
  2814  068C  2E8E               	goto	u591
  2815  068D  2E8F               	goto	u590
  2816  068E                     u591:
  2817  068E  2E94               	goto	l1470
  2818  068F                     u590:
  2819  068F                     l1466:
  2820  068F  0870               	movf	___awdiv@divisor,w
  2821  0690  02F2               	subwf	___awdiv@dividend,f
  2822  0691  0871               	movf	___awdiv@divisor+1,w
  2823  0692  3BF3               	subwfb	___awdiv@dividend+1,f
  2824  0693                     l1468:
  2825  0693  1477               	bsf	___awdiv@quotient,0
  2826  0694                     l1470:
  2827  0694  3001               	movlw	1
  2828  0695                     u605:
  2829  0695  36F1               	lsrf	___awdiv@divisor+1,f
  2830  0696  0CF0               	rrf	___awdiv@divisor,f
  2831  0697  0B89               	decfsz	9,f
  2832  0698  2E95               	goto	u605
  2833  0699                     l1472:
  2834  0699  3001               	movlw	1
  2835  069A  02F5               	subwf	___awdiv@counter,f
  2836  069B  1D03               	btfss	3,2
  2837  069C  2E9E               	goto	u611
  2838  069D  2E9F               	goto	u610
  2839  069E                     u611:
  2840  069E  2E80               	goto	l1464
  2841  069F                     u610:
  2842  069F                     l1474:
  2843  069F  0876               	movf	___awdiv@sign,w
  2844  06A0  1903               	btfsc	3,2
  2845  06A1  2EA3               	goto	u621
  2846  06A2  2EA4               	goto	u620
  2847  06A3                     u621:
  2848  06A3  2EA9               	goto	l1478
  2849  06A4                     u620:
  2850  06A4                     l1476:
  2851  06A4  09F7               	comf	___awdiv@quotient,f
  2852  06A5  09F8               	comf	___awdiv@quotient+1,f
  2853  06A6  0AF7               	incf	___awdiv@quotient,f
  2854  06A7  1903               	skipnz
  2855  06A8  0AF8               	incf	___awdiv@quotient+1,f
  2856  06A9                     l1478:
  2857  06A9  0878               	movf	___awdiv@quotient+1,w
  2858  06AA  00F1               	movwf	?___awdiv+1
  2859  06AB  0877               	movf	___awdiv@quotient,w
  2860  06AC  00F0               	movwf	?___awdiv
  2861  06AD                     l579:
  2862  06AD  0008               	return
  2863  06AE                     __end_of___awdiv:
  2864                           
  2865                           	psect	text11
  2866  06AE                     __ptext11:	
  2867 ;; *************** function _read_dates *****************
  2868 ;; Defined at:
  2869 ;;		line 65 in file "DS3231.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  min             1    wreg     PTR unsigned char 
  2872 ;;		 -> min(1), 
  2873 ;;  sec             1    8[COMMON] PTR unsigned char 
  2874 ;;		 -> sec(1), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  min             1   10[COMMON] PTR unsigned char 
  2877 ;;		 -> min(1), 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2887 ;;      Params:         1       0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0
  2889 ;;      Temps:          1       0       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		_bcd_2_decimal
  2896 ;;		_i2c_start
  2897 ;;		_i2c_stop
  2898 ;;		_recv_byte
  2899 ;;		_write_byte
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _read_dates
  2907  06AE                     _read_dates:
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _read_dates: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2911                           ;read_dates@min stored from wreg
  2912  06AE  00FA               	movwf	read_dates@min
  2913  06AF                     l1546:
  2914                           
  2915                           ;DS3231.c: 66: i2c_start();
  2916  06AF  3184  24E5  3186   	fcall	_i2c_start
  2917                           
  2918                           ;DS3231.c: 67: write_byte(0xD0);
  2919  06B2  30D0               	movlw	208
  2920  06B3  3185  2509  3186   	fcall	_write_byte
  2921                           
  2922                           ;DS3231.c: 68: write_byte(0);
  2923  06B6  3000               	movlw	0
  2924  06B7  3185  2509  3186   	fcall	_write_byte
  2925  06BA                     l1548:
  2926                           
  2927                           ;DS3231.c: 69: i2c_stop();
  2928  06BA  3184  24BA  3186   	fcall	_i2c_stop
  2929  06BD                     l1550:
  2930                           
  2931                           ;DS3231.c: 71: i2c_start();
  2932  06BD  3184  24E5  3186   	fcall	_i2c_start
  2933  06C0                     l1552:
  2934                           
  2935                           ;DS3231.c: 72: write_byte(0xD0 | 0x01);
  2936  06C0  30D1               	movlw	209
  2937  06C1  3185  2509  3186   	fcall	_write_byte
  2938  06C4                     l1554:
  2939                           
  2940                           ;DS3231.c: 74: *sec = bcd_2_decimal(recv_byte(1));
  2941  06C4  3001               	movlw	1
  2942  06C5  3185  256C  3186   	fcall	_recv_byte
  2943  06C8  3185  252C  3186   	fcall	_bcd_2_decimal
  2944  06CB  00F9               	movwf	??_read_dates
  2945  06CC  0878               	movf	read_dates@sec,w
  2946  06CD  0086               	movwf	6
  2947  06CE  0187               	clrf	7
  2948  06CF  0879               	movf	??_read_dates,w
  2949  06D0  0081               	movwf	1
  2950  06D1                     l1556:
  2951                           
  2952                           ;DS3231.c: 75: *min = bcd_2_decimal(recv_byte(1));
  2953  06D1  3001               	movlw	1
  2954  06D2  3185  256C  3186   	fcall	_recv_byte
  2955  06D5  3185  252C  3186   	fcall	_bcd_2_decimal
  2956  06D8  00F9               	movwf	??_read_dates
  2957  06D9  087A               	movf	read_dates@min,w
  2958  06DA  0086               	movwf	6
  2959  06DB  0187               	clrf	7
  2960  06DC  0879               	movf	??_read_dates,w
  2961  06DD  0081               	movwf	1
  2962  06DE                     l1558:
  2963                           
  2964                           ;DS3231.c: 76: bcd_2_decimal(recv_byte(1));
  2965  06DE  3001               	movlw	1
  2966  06DF  3185  256C  3186   	fcall	_recv_byte
  2967  06E2  3185  252C  3186   	fcall	_bcd_2_decimal
  2968  06E5                     l1560:
  2969                           
  2970                           ;DS3231.c: 77: recv_byte(1);
  2971  06E5  3001               	movlw	1
  2972  06E6  3185  256C  3186   	fcall	_recv_byte
  2973  06E9                     l1562:
  2974                           
  2975                           ;DS3231.c: 78: bcd_2_decimal(recv_byte(1));
  2976  06E9  3001               	movlw	1
  2977  06EA  3185  256C  3186   	fcall	_recv_byte
  2978  06ED  3185  252C  3186   	fcall	_bcd_2_decimal
  2979  06F0                     l1564:
  2980                           
  2981                           ;DS3231.c: 79: bcd_2_decimal(recv_byte(1));
  2982  06F0  3001               	movlw	1
  2983  06F1  3185  256C  3186   	fcall	_recv_byte
  2984  06F4  3185  252C  3186   	fcall	_bcd_2_decimal
  2985  06F7                     l1566:
  2986                           
  2987                           ;DS3231.c: 80: bcd_2_decimal(recv_byte(1));
  2988  06F7  3001               	movlw	1
  2989  06F8  3185  256C  3186   	fcall	_recv_byte
  2990  06FB  3185  252C  3186   	fcall	_bcd_2_decimal
  2991                           
  2992                           ;DS3231.c: 82: i2c_stop();
  2993  06FE  3184  24BA  3186   	fcall	_i2c_stop
  2994  0701                     l1568:
  2995                           
  2996                           ;DS3231.c: 84: i2c_start();
  2997  0701  3184  24E5  3186   	fcall	_i2c_start
  2998  0704                     l1570:
  2999                           
  3000                           ;DS3231.c: 85: write_byte(0xD0 | 0x01);
  3001  0704  30D1               	movlw	209
  3002  0705  3185  2509  3186   	fcall	_write_byte
  3003  0708                     l1572:
  3004                           
  3005                           ;DS3231.c: 86: recv_byte(1);
  3006  0708  3001               	movlw	1
  3007  0709  3185  256C  3186   	fcall	_recv_byte
  3008  070C                     l1574:
  3009                           
  3010                           ;DS3231.c: 87: i2c_stop();
  3011  070C  3184  24BA  3186   	fcall	_i2c_stop
  3012  070F                     l276:
  3013  070F  0008               	return
  3014  0710                     __end_of_read_dates:
  3015                           
  3016                           	psect	text12
  3017  0509                     __ptext12:	
  3018 ;; *************** function _write_byte *****************
  3019 ;; Defined at:
  3020 ;;		line 33 in file "i2c.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  data            1    wreg     unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  data            1    0[COMMON] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3034 ;;      Params:         0       0       0       0       0       0
  3035 ;;      Locals:         1       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0
  3037 ;;      Totals:         1       0       0       0       0       0
  3038 ;;Total ram usage:        1 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    1
  3041 ;; This function calls:
  3042 ;;		_i2c_wait
  3043 ;; This function is called by:
  3044 ;;		_read_dates
  3045 ;;		_i2c_cmd
  3046 ;;		_recv_data
  3047 ;;		_write_date
  3048 ;;		_read_date
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _write_byte
  3054  0509                     _write_byte:
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3058                           ;write_byte@data stored from wreg
  3059  0509  00F0               	movwf	write_byte@data
  3060  050A                     l1416:
  3061                           
  3062                           ;i2c.c: 34: SSP2BUF = data;
  3063  050A  0870               	movf	write_byte@data,w
  3064  050B  0024               	movlb	4	; select bank4
  3065  050C  0099               	movwf	25	;volatile
  3066  050D                     l138:	
  3067                           ;i2c.c: 35: while(SSP2STATbits.BF);
  3068                           
  3069  050D  181C               	btfsc	28,0	;volatile
  3070  050E  2D10               	goto	u491
  3071  050F  2D11               	goto	u490
  3072  0510                     u491:
  3073  0510  2D0D               	goto	l138
  3074  0511                     u490:
  3075  0511                     l141:
  3076  0511  1B1E               	btfsc	30,6	;volatile
  3077  0512  2D14               	goto	u501
  3078  0513  2D15               	goto	u500
  3079  0514                     u501:
  3080  0514  2D11               	goto	l141
  3081  0515                     u500:
  3082  0515                     l1418:
  3083                           
  3084                           ;i2c.c: 37: i2c_wait();
  3085  0515  3184  24EF  3185   	fcall	_i2c_wait
  3086  0518                     l144:
  3087  0518  0008               	return
  3088  0519                     __end_of_write_byte:
  3089                           
  3090                           	psect	text13
  3091  056C                     __ptext13:	
  3092 ;; *************** function _recv_byte *****************
  3093 ;; Defined at:
  3094 ;;		line 48 in file "i2c.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  ack             1    wreg     unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  ack             1    1[COMMON] unsigned char 
  3099 ;;  data            1    2[COMMON] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      unsigned char 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3109 ;;      Params:         0       0       0       0       0       0
  3110 ;;      Locals:         2       0       0       0       0       0
  3111 ;;      Temps:          1       0       0       0       0       0
  3112 ;;      Totals:         3       0       0       0       0       0
  3113 ;;Total ram usage:        3 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    1
  3116 ;; This function calls:
  3117 ;;		_i2c_wait
  3118 ;; This function is called by:
  3119 ;;		_read_dates
  3120 ;;		_recv_data
  3121 ;;		_read_date
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _recv_byte
  3127  056C                     _recv_byte:
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _recv_byte: [wreg+status,2+status,0+pclath+cstack]
  3131                           ;recv_byte@ack stored from wreg
  3132  056C  00F1               	movwf	recv_byte@ack
  3133  056D                     l1420:
  3134                           
  3135                           ;i2c.c: 49: uint8_t data;;i2c.c: 51: SSP2CON2bits.ACKDT = ack;
  3136  056D  0C71               	rrf	recv_byte@ack,w
  3137  056E  0024               	movlb	4	; select bank4
  3138  056F  1C03               	skipc
  3139  0570  129E               	bcf	30,5	;volatile
  3140  0571  1803               	skipnc
  3141  0572  169E               	bsf	30,5	;volatile
  3142  0573                     l1422:
  3143                           
  3144                           ;i2c.c: 52: SSP2CON2bits.RCEN = 1;
  3145  0573  159E               	bsf	30,3	;volatile
  3146  0574                     l150:	
  3147                           ;i2c.c: 53: while(!SSP2STATbits.BF);
  3148                           
  3149  0574  1C1C               	btfss	28,0	;volatile
  3150  0575  2D77               	goto	u511
  3151  0576  2D78               	goto	u510
  3152  0577                     u511:
  3153  0577  2D74               	goto	l150
  3154  0578                     u510:
  3155  0578                     l152:
  3156                           
  3157                           ;i2c.c: 54: SSP2CON2bits.ACKEN = 1;
  3158  0578  161E               	bsf	30,4	;volatile
  3159  0579                     l1424:
  3160                           
  3161                           ;i2c.c: 55: data = SSP2BUF;
  3162  0579  0819               	movf	25,w	;volatile
  3163  057A  00F0               	movwf	??_recv_byte
  3164  057B  0870               	movf	??_recv_byte,w
  3165  057C  00F2               	movwf	recv_byte@data
  3166  057D                     l1426:
  3167                           
  3168                           ;i2c.c: 56: SSP2CON1bits.SSPOV = 0;
  3169  057D  131D               	bcf	29,6	;volatile
  3170  057E                     l1428:
  3171                           
  3172                           ;i2c.c: 57: i2c_wait();
  3173  057E  3184  24EF  3185   	fcall	_i2c_wait
  3174  0581                     l1430:
  3175                           
  3176                           ;i2c.c: 59: return data;
  3177  0581  0872               	movf	recv_byte@data,w
  3178  0582                     l153:
  3179  0582  0008               	return
  3180  0583                     __end_of_recv_byte:
  3181                           
  3182                           	psect	text14
  3183  04BA                     __ptext14:	
  3184 ;; *************** function _i2c_stop *****************
  3185 ;; Defined at:
  3186 ;;		line 22 in file "i2c.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		None
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3200 ;;      Params:         0       0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0
  3203 ;;      Totals:         0       0       0       0       0       0
  3204 ;;Total ram usage:        0 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_read_dates
  3210 ;;		_i2c_cmd
  3211 ;;		_recv_data
  3212 ;;		_write_date
  3213 ;;		_read_date
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _i2c_stop
  3219  04BA                     _i2c_stop:
  3220  04BA                     l1414:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _i2c_stop: []
  3223                           
  3224                           
  3225                           ;i2c.c: 23: SSP2CON2bits.PEN = 1;
  3226  04BA  0024               	movlb	4	; select bank4
  3227  04BB  151E               	bsf	30,2	;volatile
  3228  04BC                     l126:	
  3229                           ;i2c.c: 24: while(SSP2CON2bits.PEN);
  3230                           
  3231  04BC  191E               	btfsc	30,2	;volatile
  3232  04BD  2CBF               	goto	u481
  3233  04BE  2CC0               	goto	u480
  3234  04BF                     u481:
  3235  04BF  2CBC               	goto	l126
  3236  04C0                     u480:
  3237  04C0                     l129:
  3238  04C0  0008               	return
  3239  04C1                     __end_of_i2c_stop:
  3240                           
  3241                           	psect	text15
  3242  04E5                     __ptext15:	
  3243 ;; *************** function _i2c_start *****************
  3244 ;; Defined at:
  3245 ;;		line 16 in file "i2c.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3259 ;;      Params:         0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    1
  3266 ;; This function calls:
  3267 ;;		_i2c_wait
  3268 ;; This function is called by:
  3269 ;;		_read_dates
  3270 ;;		_i2c_cmd
  3271 ;;		_recv_data
  3272 ;;		_write_date
  3273 ;;		_read_date
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function _i2c_start
  3279  04E5                     _i2c_start:
  3280  04E5                     l1410:	
  3281                           ;incstack = 0
  3282                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3283                           
  3284                           
  3285                           ;i2c.c: 17: i2c_wait();
  3286  04E5  3184  24EF  3184   	fcall	_i2c_wait
  3287  04E8                     l1412:
  3288                           
  3289                           ;i2c.c: 18: SSP2CON2bits.SEN = 1;
  3290  04E8  0024               	movlb	4	; select bank4
  3291  04E9  141E               	bsf	30,0	;volatile
  3292  04EA                     l120:	
  3293                           ;i2c.c: 19: while(SSP2CON2bits.SEN);
  3294                           
  3295  04EA  181E               	btfsc	30,0	;volatile
  3296  04EB  2CED               	goto	u471
  3297  04EC  2CEE               	goto	u470
  3298  04ED                     u471:
  3299  04ED  2CEA               	goto	l120
  3300  04EE                     u470:
  3301  04EE                     l123:
  3302  04EE  0008               	return
  3303  04EF                     __end_of_i2c_start:
  3304                           
  3305                           	psect	text16
  3306  04EF                     __ptext16:	
  3307 ;; *************** function _i2c_wait *****************
  3308 ;; Defined at:
  3309 ;;		line 12 in file "i2c.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3323 ;;      Params:         0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_i2c_start
  3333 ;;		_write_byte
  3334 ;;		_recv_byte
  3335 ;;		_i2c_repeated_start
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _i2c_wait
  3341  04EF                     _i2c_wait:
  3342  04EF                     l1308:	
  3343                           ;incstack = 0
  3344                           ; Regs used in _i2c_wait: [wreg+status,2]
  3345                           
  3346  04EF                     l1310:	
  3347                           ;i2c.c: 13: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  3348                           
  3349  04EF  0024               	movlb	4	; select bank4
  3350  04F0  081E               	movf	30,w	;volatile
  3351  04F1  391F               	andlw	31
  3352  04F2  1D03               	btfss	3,2
  3353  04F3  2CF5               	goto	u391
  3354  04F4  2CF6               	goto	u390
  3355  04F5                     u391:
  3356  04F5  2CEF               	goto	l1310
  3357  04F6                     u390:
  3358  04F6                     l1312:
  3359  04F6  191C               	btfsc	28,2	;volatile
  3360  04F7  2CF9               	goto	u401
  3361  04F8  2CFA               	goto	u400
  3362  04F9                     u401:
  3363  04F9  2CEF               	goto	l1310
  3364  04FA                     u400:
  3365  04FA                     l117:
  3366  04FA  0008               	return
  3367  04FB                     __end_of_i2c_wait:
  3368                           
  3369                           	psect	text17
  3370  052C                     __ptext17:	
  3371 ;; *************** function _bcd_2_decimal *****************
  3372 ;; Defined at:
  3373 ;;		line 14 in file "DS3231.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  number          1    wreg     unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  number          1    7[COMMON] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3387 ;;      Params:         0       0       0       0       0       0
  3388 ;;      Locals:         1       0       0       0       0       0
  3389 ;;      Temps:          3       0       0       0       0       0
  3390 ;;      Totals:         4       0       0       0       0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		___bmul
  3396 ;; This function is called by:
  3397 ;;		_read_dates
  3398 ;;		_read_date
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           
  3403                           ;psect for function _bcd_2_decimal
  3404  052C                     _bcd_2_decimal:
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3408                           ;bcd_2_decimal@number stored from wreg
  3409  052C  00F7               	movwf	bcd_2_decimal@number
  3410  052D                     l1434:
  3411                           
  3412                           ;DS3231.c: 15: return ((number >> 4) * 10 + (number & 0x0F));
  3413  052D  300F               	movlw	15
  3414  052E  0577               	andwf	bcd_2_decimal@number,w
  3415  052F  00F4               	movwf	??_bcd_2_decimal
  3416  0530  300A               	movlw	10
  3417  0531  00F5               	movwf	??_bcd_2_decimal+1
  3418  0532  0875               	movf	??_bcd_2_decimal+1,w
  3419  0533  00F0               	movwf	___bmul@multiplicand
  3420  0534  0877               	movf	bcd_2_decimal@number,w
  3421  0535  00F6               	movwf	??_bcd_2_decimal+2
  3422  0536  3004               	movlw	4
  3423  0537                     u525:
  3424  0537  36F6               	lsrf	??_bcd_2_decimal+2,f
  3425  0538  0B89               	decfsz	9,f
  3426  0539  2D37               	goto	u525
  3427  053A  0876               	movf	??_bcd_2_decimal+2,w
  3428  053B  3185  2540  3185   	fcall	___bmul
  3429  053E  0774               	addwf	??_bcd_2_decimal,w
  3430  053F                     l264:
  3431  053F  0008               	return
  3432  0540                     __end_of_bcd_2_decimal:
  3433                           
  3434                           	psect	text18
  3435  0540                     __ptext18:	
  3436 ;; *************** function ___bmul *****************
  3437 ;; Defined at:
  3438 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  multiplier      1    wreg     unsigned char 
  3441 ;;  multiplicand    1    0[COMMON] unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  multiplier      1    3[COMMON] unsigned char 
  3444 ;;  product         1    2[COMMON] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      unsigned char 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3454 ;;      Params:         1       0       0       0       0       0
  3455 ;;      Locals:         2       0       0       0       0       0
  3456 ;;      Temps:          1       0       0       0       0       0
  3457 ;;      Totals:         4       0       0       0       0       0
  3458 ;;Total ram usage:        4 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_bcd_2_decimal
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function ___bmul
  3469  0540                     ___bmul:
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3473                           ;___bmul@multiplier stored from wreg
  3474  0540  00F3               	movwf	___bmul@multiplier
  3475  0541                     l1340:
  3476  0541  01F2               	clrf	___bmul@product
  3477  0542                     l1342:
  3478  0542  1C73               	btfss	___bmul@multiplier,0
  3479  0543  2D45               	goto	u441
  3480  0544  2D46               	goto	u440
  3481  0545                     u441:
  3482  0545  2D4A               	goto	l1346
  3483  0546                     u440:
  3484  0546                     l1344:
  3485  0546  0870               	movf	___bmul@multiplicand,w
  3486  0547  00F1               	movwf	??___bmul
  3487  0548  0871               	movf	??___bmul,w
  3488  0549  07F2               	addwf	___bmul@product,f
  3489  054A                     l1346:
  3490  054A  1003               	clrc
  3491  054B  0DF0               	rlf	___bmul@multiplicand,f
  3492  054C                     l1348:
  3493  054C  1003               	clrc
  3494  054D  0CF3               	rrf	___bmul@multiplier,f
  3495  054E  0873               	movf	___bmul@multiplier,w
  3496  054F  1D03               	btfss	3,2
  3497  0550  2D52               	goto	u451
  3498  0551  2D53               	goto	u450
  3499  0552                     u451:
  3500  0552  2D42               	goto	l1342
  3501  0553                     u450:
  3502  0553                     l1350:
  3503  0553  0872               	movf	___bmul@product,w
  3504  0554                     l452:
  3505  0554  0008               	return
  3506  0555                     __end_of___bmul:
  3507                           
  3508                           	psect	text19
  3509  04DB                     __ptext19:	
  3510 ;; *************** function _SYSTEM_Initialize *****************
  3511 ;; Defined at:
  3512 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3526 ;;      Params:         0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0
  3529 ;;      Totals:         0       0       0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    1
  3533 ;; This function calls:
  3534 ;;		_OSCILLATOR_Initialize
  3535 ;;		_PIN_MANAGER_Initialize
  3536 ;;		_WDT_Initialize
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           
  3543                           ;psect for function _SYSTEM_Initialize
  3544  04DB                     _SYSTEM_Initialize:
  3545  04DB                     l1520:	
  3546                           ;incstack = 0
  3547                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3548                           
  3549                           
  3550                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3551  04DB  3185  2555  3184   	fcall	_PIN_MANAGER_Initialize
  3552                           
  3553                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3554  04DE  3184  24B3  3184   	fcall	_OSCILLATOR_Initialize
  3555                           
  3556                           ;mcc.c: 55: WDT_Initialize();
  3557  04E1  3184  24A9  3184   	fcall	_WDT_Initialize
  3558  04E4                     l45:
  3559  04E4  0008               	return
  3560  04E5                     __end_of_SYSTEM_Initialize:
  3561                           
  3562                           	psect	text20
  3563  04A9                     __ptext20:	
  3564 ;; *************** function _WDT_Initialize *****************
  3565 ;; Defined at:
  3566 ;;		line 68 in file "mcc_generated_files/mcc.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3580 ;;      Params:         0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_SYSTEM_Initialize
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _WDT_Initialize
  3595  04A9                     _WDT_Initialize:
  3596  04A9                     l1380:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _WDT_Initialize: [wreg]
  3599                           
  3600                           
  3601                           ;mcc.c: 71: WDTCON = 0x16;
  3602  04A9  3016               	movlw	22
  3603  04AA  0021               	movlb	1	; select bank1
  3604  04AB  0097               	movwf	23	;volatile
  3605  04AC                     l51:
  3606  04AC  0008               	return
  3607  04AD                     __end_of_WDT_Initialize:
  3608                           
  3609                           	psect	text21
  3610  0555                     __ptext21:	
  3611 ;; *************** function _PIN_MANAGER_Initialize *****************
  3612 ;; Defined at:
  3613 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3627 ;;      Params:         0       0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0
  3630 ;;      Totals:         0       0       0       0       0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_SYSTEM_Initialize
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _PIN_MANAGER_Initialize
  3642  0555                     _PIN_MANAGER_Initialize:
  3643  0555                     l1354:	
  3644                           ;incstack = 0
  3645                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3646                           
  3647                           
  3648                           ;pin_manager.c: 60: LATA = 0x00;
  3649  0555  0022               	movlb	2	; select bank2
  3650  0556  018C               	clrf	12	;volatile
  3651                           
  3652                           ;pin_manager.c: 61: LATB = 0x00;
  3653  0557  018D               	clrf	13	;volatile
  3654  0558                     l1356:
  3655                           
  3656                           ;pin_manager.c: 66: TRISA = 0xFF;
  3657  0558  30FF               	movlw	255
  3658  0559  0021               	movlb	1	; select bank1
  3659  055A  008C               	movwf	12	;volatile
  3660  055B                     l1358:
  3661                           
  3662                           ;pin_manager.c: 67: TRISB = 0xFF;
  3663  055B  30FF               	movlw	255
  3664  055C  008D               	movwf	13	;volatile
  3665  055D                     l1360:
  3666                           
  3667                           ;pin_manager.c: 72: ANSELB = 0xDA;
  3668  055D  30DA               	movlw	218
  3669  055E  0023               	movlb	3	; select bank3
  3670  055F  008D               	movwf	13	;volatile
  3671  0560                     l1362:
  3672                           
  3673                           ;pin_manager.c: 73: ANSELA = 0x16;
  3674  0560  3016               	movlw	22
  3675  0561  008C               	movwf	12	;volatile
  3676  0562                     l1364:
  3677                           
  3678                           ;pin_manager.c: 78: WPUB = 0x24;
  3679  0562  3024               	movlw	36
  3680  0563  0024               	movlb	4	; select bank4
  3681  0564  008D               	movwf	13	;volatile
  3682  0565                     l1366:
  3683                           
  3684                           ;pin_manager.c: 79: WPUA = 0x00;
  3685  0565  018C               	clrf	12	;volatile
  3686  0566                     l1368:
  3687                           
  3688                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3689  0566  0021               	movlb	1	; select bank1
  3690  0567  1795               	bsf	21,7	;volatile
  3691  0568                     l1370:
  3692                           
  3693                           ;pin_manager.c: 86: APFCON0 = 0x00;
  3694  0568  0022               	movlb	2	; select bank2
  3695  0569  019D               	clrf	29	;volatile
  3696  056A                     l1372:
  3697                           
  3698                           ;pin_manager.c: 87: APFCON1 = 0x00;
  3699  056A  019E               	clrf	30	;volatile
  3700  056B                     l25:
  3701  056B  0008               	return
  3702  056C                     __end_of_PIN_MANAGER_Initialize:
  3703                           
  3704                           	psect	text22
  3705  04B3                     __ptext22:	
  3706 ;; *************** function _OSCILLATOR_Initialize *****************
  3707 ;; Defined at:
  3708 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3722 ;;      Params:         0       0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0
  3725 ;;      Totals:         0       0       0       0       0       0
  3726 ;;Total ram usage:        0 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_SYSTEM_Initialize
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _OSCILLATOR_Initialize
  3737  04B3                     _OSCILLATOR_Initialize:
  3738  04B3                     l1374:	
  3739                           ;incstack = 0
  3740                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3741                           
  3742                           
  3743                           ;mcc.c: 61: OSCCON = 0x70;
  3744  04B3  3070               	movlw	112
  3745  04B4  0021               	movlb	1	; select bank1
  3746  04B5  0099               	movwf	25	;volatile
  3747  04B6                     l1376:
  3748                           
  3749                           ;mcc.c: 63: OSCTUNE = 0x00;
  3750  04B6  0198               	clrf	24	;volatile
  3751  04B7                     l1378:
  3752                           
  3753                           ;mcc.c: 65: BORCON = 0x00;
  3754  04B7  0022               	movlb	2	; select bank2
  3755  04B8  0196               	clrf	22	;volatile
  3756  04B9                     l48:
  3757  04B9  0008               	return
  3758  04BA                     __end_of_OSCILLATOR_Initialize:
  3759  007E                     btemp	set	126	;btemp
  3760  007E                     wtemp0	set	126
  3761                           
  3762                           	psect	config
  3763                           
  3764                           ;Config register CONFIG1 @ 0x8007
  3765                           ;	Oscillator Selection
  3766                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3767                           ;	Watchdog Timer Enable
  3768                           ;	WDTE = OFF, WDT disabled
  3769                           ;	Power-up Timer Enable
  3770                           ;	PWRTE = OFF, PWRT disabled
  3771                           ;	MCLR Pin Function Select
  3772                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3773                           ;	Flash Program Memory Code Protection
  3774                           ;	CP = OFF, Program memory code protection is disabled
  3775                           ;	Data Memory Code Protection
  3776                           ;	CPD = OFF, Data memory code protection is disabled
  3777                           ;	Brown-out Reset Enable
  3778                           ;	BOREN = ON, Brown-out Reset enabled
  3779                           ;	Clock Out Enable
  3780                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3781                           ;	Internal/External Switchover
  3782                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3783                           ;	Fail-Safe Clock Monitor Enable
  3784                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3785  8007                     	org	32775
  3786  8007  3FE4               	dw	16356
  3787                           
  3788                           ;Config register CONFIG2 @ 0x8008
  3789                           ;	Flash Memory Self-Write Protection
  3790                           ;	WRT = OFF, Write protection off
  3791                           ;	PLL Enable
  3792                           ;	PLLEN = OFF, 4x PLL disabled
  3793                           ;	Stack Overflow/Underflow Reset Enable
  3794                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3795                           ;	Brown-out Reset Voltage Selection
  3796                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3797                           ;	Low-Voltage Programming Enable
  3798                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3799  8008                     	org	32776
  3800  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         6
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     15      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    read_dates@min	PTR unsigned char  size(1) Largest target is 1
		 -> min(BANK0[1]), 

    read_dates@sec	PTR unsigned char  size(1) Largest target is 1
		 -> sec(BANK0[1]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear@data(COMMON[4]), rtc_display@segments(BANK0[4]), 

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_rtc_display
    _rtc_display->_set_segments
    _set_segments->_write_data
    _read_dates->_bcd_2_decimal
    _bcd_2_decimal->___bmul

Critical Paths under _main in BANK0

    _main->_rtc_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3088
                                              7 BANK0      8     8      0
                  _SYSTEM_Initialize
                         _read_dates
                        _rtc_display
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                         10    10      0    2397
                                             10 COMMON     3     3      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                         _encode_dig
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     625
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _write_data                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (4) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_dig                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_dates                                           3     2      1     432
                                              8 COMMON     3     2      1
                      _bcd_2_decimal
                          _i2c_start
                           _i2c_stop
                          _recv_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _recv_byte                                            3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _read_dates
     _bcd_2_decimal
       ___bmul
     _i2c_start
       _i2c_wait
     _i2c_stop
     _recv_byte
       _i2c_wait
     _write_byte
       _i2c_wait
   _rtc_display
     ___awdiv
     ___awmod
     _encode_dig
     _set_segments
       _start
       _stop
       _write_data
         _bit_delay
   _set_brigthness

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      32       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      32      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 01 00:42:05 2020

                 ___bmul@product 0072                               l25 056B                               l51 04AC  
                             l45 04E4                               l48 04B9                               l99 07EA  
                   ___awdiv@sign 0076                              l120 04EA                              l200 04D9  
                            l202 04DA                              l210 05C7                              l123 04EE  
                            l212 05CB                              l117 04FA                              l141 0511  
                            l221 05DE                              l126 04BC                              l150 0574  
                            l230 05F1                              l223 05DF                              l215 05CD  
                            l152 0578                              l144 0518                              l129 04C0  
                            l153 0582                              l233 05F8                              l225 05E0  
                            l217 05CE                              l209 05C5                              l138 050D  
                            l234 05FB                              l219 05DD                              l172 04A8  
                            l228 05EF                              l253 04C8                              l181 04CE  
                            l245 05BC                              l190 04D2                              l183 04CF  
                            l175 04C9                              l239 052B                              l264 053F  
                            l192 04D4                              l185 04D0                              l177 04CB  
                            l194 04D5                              l187 04D1                              l179 04CC  
                            l452 0554                              l276 070F                              l196 04D7  
                            l198 04D8                              l592 064E                              l579 06AD  
                            u400 04FA                              u401 04F9                              u410 05CB  
                            u411 05CA                              u500 0515                              u420 05DD  
                            u501 0514                              u421 05DC                              u510 0578  
                            u430 05EF                              u511 0577                              u431 05EE  
                            u440 0546                              u441 0545                              u450 0553  
                            u610 069F                              u530 0654                              u451 0552  
                            u611 069E                              u531 0653                              u620 06A4  
                            u540 065F                              u700 0640                              u460 05AD  
                            u525 0537                              u621 06A3                              u605 0695  
                            u541 065E                              u701 063F                              u461 05AC  
                            u390 04F6                              u470 04EE                              u550 0670  
                            u710 0645                              u630 0601                              u391 04F5  
                            u471 04ED                              u551 066F                              u711 0644  
                            u631 0600                              u480 04C0                              u640 060C  
                            u720 051F                              u481 04BF                              u641 060B  
                            u721 051E                              u490 0511                              u570 0680  
                            u650 0617                              u491 0510                              u571 067F  
                            u651 0616                              u740 075C                              u565 0674  
                            u741 075B                              u590 068F                              u670 0627  
                            u591 068E                              u671 0626                              u680 0631  
                            u585 0681                              u681 0630                              u665 061B  
                            u595 068B                              u685 062D                              u695 0636  
                            u777 074E                              u787 0770                              _cnt 0041  
                            _min 0043                              _sec 0042                     ___awmod@sign 0076  
                            wreg 0009                    write_data@ack 0072              bcd_2_decimal@number 0077  
                 ?_bcd_2_decimal 0070                             l1310 04EF                             l1312 04F6  
                           l1400 05A3                             l1410 04E5                             l1330 05E5  
                           l1314 05BE                             l1402 05A7                             l1340 0541  
                           l1308 04EF                             l1412 04E8                             l1420 056D  
                           l1500 061F                             l1332 05EA                             l1324 05CF  
                           l1316 05C2                             l1404 05AD                             l1350 0553  
                           l1342 0542                             l1414 04BA                             l1430 0581  
                           l1422 0573                             l1510 063A                             l1502 0623  
                           l1334 05F3                             l1326 05D7                             l1318 05C4  
                           l1406 05B3                             l1360 055D                             l1520 04DB  
                           l1344 0546                             l1424 0579                             l1416 050A  
                           l1440 0650                             l1504 0627                             l1512 0640  
                           l1336 05F6                             l1328 05E2                             l1408 05B9  
                           l1600 072A                             l1370 0568                             l1362 0560  
                           l1354 0555                             l1346 054A                             l1434 052D  
                           l1426 057D                             l1418 0515                             l1450 0664  
                           l1442 0654                             l1514 0645                             l1506 0631  
                           l1530 0784                             l1522 051A                             l1610 073F  
                           l1602 072E                             l1372 056A                             l1364 0562  
                           l1356 0558                             l1380 04A9                             l1348 054C  
                           l1428 057E                             l1460 0678                             l1452 0668  
                           l1444 0659                             l1516 064A                             l1508 0635  
                           l1540 07B5                             l1532 0784                             l1524 051F  
                           l1620 075D                             l1612 0743                             l1604 0732  
                           l1374 04B3                             l1366 0565                             l1358 055B  
                           l1550 06BD                             l1470 0694                             l1462 067C  
                           l1454 066A                             l1446 065B                             l1438 064F  
                           l1382 04C2                             l1390 058B                             l1542 07CB  
                           l1534 0784                             l1526 0526                             l1622 0766  
                           l1614 0748                             l1606 0738                             l1376 04B6  
                           l1368 0566                             l1560 06E5                             l1552 06C0  
                           l1472 0699                             l1464 0680                             l1456 0670  
                           l1448 065F                             l1392 058E                             l1544 07E1  
                           l1536 0789                             l1528 077C                             l1624 076A  
                           l1616 0755                             l1608 073C                             l1378 04B7  
                           l1570 0704                             l1562 06E9                             l1554 06C4  
                           l1546 06AF                             l1466 068F                             l1458 0673  
                           l1474 069F                             l1490 0608                             l1482 05FC  
                           l1394 0591                             l1386 0584                             l1538 079F  
                           l1618 075C                             l1572 0708                             l1564 06F0  
                           l1556 06D1                             l1548 06BA                             l1476 06A4  
                           l1468 0693                             l1492 060C                             l1484 05FD  
                           l1396 0597                             l1388 0587                             l1580 0710  
                           l1574 070C                             l1566 06F7                             l1558 06DE  
                           l1478 06A9                             l1494 0611                             l1486 0601  
                           l1398 0599                             l1590 071B                             l1582 0713  
                           l1568 0701                             l1496 0617                             l1488 0606  
                           l1592 071C                             l1584 0715                             l1498 061A  
                           l1594 071D                             l1586 0716                             l1596 0722  
                           l1588 0719                             l1598 0726                             _LATA 010C  
                           _LATB 010D                             _WPUA 020C                             _WPUB 020D  
                           _main 0710                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             _stop 04D2                  rtc_display@date 0026  
                           start 0002                   write_data@data 0073                ___bmul@multiplier 0073  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 04BA                            ?_main 0070  
                __end_of___awdiv 06AE                  __end_of___awmod 064F                            ?_stop 0070  
                ___awdiv@divisor 0070                  ___awdiv@counter 0075                            _TRISA 008C  
                          _TRISB 008D                 rtc_display@F2398 0039                   _WDT_Initialize 04A9  
                 write_byte@data 0070                            _start 04C9                            status 0003  
                          wtemp0 007E                  __initialization 07EB                     __end_of_main 077A  
                   __end_of_stop 04DB                 __end_of_i2c_wait 04FB                 __end_of_i2c_stop 04C1  
                         ??_main 0027                           ??_stop 0070                  ??_bcd_2_decimal 0074  
         __end_of_WDT_Initialize 04AD                  encode_dig@digit 0070                  set_segments@pos 0076  
               ___awdiv@dividend 0072                           _ANSELA 018C                           _ANSELB 018D  
                         ?_start 0070                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                           _TRISB2 046A                           _TRISB5 046D  
             __size_of_i2c_start 000A                           ___bmul 0540                        ??___awdiv 0074  
                      ??___awmod 0074                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                  ?_WDT_Initialize 0070                     ?_rtc_display 0070  
        __size_of_set_brigthness 0013                _SYSTEM_Initialize 04DB          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070              ___bmul@multiplicand 0070         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 04FB              ??_SYSTEM_Initialize 0070  
                  __end_of_start 04D2               __size_of_bit_delay 0001                __end_of_i2c_start 04EF  
                 _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 04E5                          ??_start 0070  
                     __pbssBANK0 003D                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
                  recv_byte@data 0072                       __pmaintext 0710                          ?___bmul 0070  
             __size_of_recv_byte 0017                          _APFCON0 011D                          _APFCON1 011E  
                     _encode_dig 04C1               set_segments@length 0075                          _OSCTUNE 0098  
                        _SSP2ADD 021A                          _SSP2BUF 0219                       ??_i2c_wait 0070  
                     ??_i2c_stop 0070                __end_of_bit_delay 04A9                  __size_of___bmul 0015  
                        ___awdiv 064F                          ___awmod 05FC                       clear@F2384 003D  
                  ?_set_segments 0075                       _read_dates 06AE                          __ptext1 0519  
                        __ptext2 077A                          __ptext3 0583                          __ptext4 05BD  
                        __ptext5 04A8                          __ptext6 04D2                          __ptext7 04C9  
                        __ptext8 04C1                          __ptext9 05FC            _OSCILLATOR_Initialize 04B3  
               ___awmod@dividend 0072                          _segdata 002F         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 0519       __size_of_SYSTEM_Initialize 000A                __end_of_recv_byte 0583  
           end_of_initialization 07FD             __size_of_rtc_display 0071                          init_ram 04AD  
                        initloop 04AE             set_segments@segments 0078                   ??_set_segments 0077  
               ??_WDT_Initialize 0070                        _PORTAbits 000C                     _m_brightness 007D  
                    ?_encode_dig 0070           __end_of_set_brigthness 052C                        _TRISAbits 008C  
          __end_of_bcd_2_decimal 0540                   __end_of___bmul 0555                       _write_data 05BD  
                    ?_read_dates 0078                       _write_byte 0509           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07EB                  ?_set_brigthness 0070  __size_of_PIN_MANAGER_Initialize 0017  
                      _i2c_start 04E5                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
            __size_of_encode_dig 0008                         ??___bmul 0071                      __pdataBANK0 002F  
                    __pbssCOMMON 007D                        ___latbits 0001                    __pcstackBANK0 0020  
                     ?_i2c_start 0070             __end_of_set_segments 05BD              __size_of_read_dates 0062  
                      __pnvBANK0 0042                     recv_byte@ack 0071                 set_brigthness@on 0070  
         _PIN_MANAGER_Initialize 0555                        _bit_delay 04A8                         ?___awdiv 0070  
                       ?___awmod 0070                      ?_write_data 0070                      ?_write_byte 0070  
                 __size_of_start 0009                         _LATAbits 010C                        _recv_byte 056C  
                     ?_bit_delay 0070                         _SSP2CON1 021D                         _SSP2CON2 021E  
                       _SSP2STAT 021C                      write_data@b 0071                      write_data@i 0074  
                   ??_encode_dig 0070                    ??_rtc_display 007A                      ??_i2c_start 0070  
                       _i2c_wait 04EF                         _i2c_stop 04BA              __size_of_write_data 003F  
            __size_of_write_byte 0010                       ?_recv_byte 0070                    set_segments@k 0079  
             __end_of_encode_dig 04C9          ??_OSCILLATOR_Initialize 0070                 __size_of___awdiv 005F  
               __size_of___awmod 0053                     ??_read_dates 0079                 ??_set_brigthness 0071  
          __size_of_set_segments 003A                         __ptext10 064F                         __ptext11 06AE  
                       __ptext20 04A9                         __ptext12 0509                         __ptext21 0555  
                       __ptext13 056C                         __ptext22 04B3                         __ptext14 04BA  
                       __ptext15 04E5                         __ptext16 04EF                         __ptext17 052C  
                       __ptext18 0540                         __ptext19 04DB                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E              __end_of_rtc_display 07EB                    __size_of_main 006A  
                  __size_of_stop 0009               __end_of_read_dates 0710                      ??_bit_delay 0070  
         __size_of_bcd_2_decimal 0014                         main@date 0029                     _set_segments 0583  
                   _SSP2STATbits 021C          __size_of_WDT_Initialize 0004                    read_dates@min 007A  
                  read_dates@sec 0078                      ??_recv_byte 0070          ?_PIN_MANAGER_Initialize 0070  
                   ??_write_data 0070                     ??_write_byte 0070              rtc_display@segments 0022  
                    _rtc_display 077A                    _bcd_2_decimal 052C   __end_of_PIN_MANAGER_Initialize 056C  
             __end_of_write_data 05FC               __end_of_write_byte 0519  
