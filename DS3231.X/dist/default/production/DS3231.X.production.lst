

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 01 14:07:59 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.30
    43                           ; Generated 26/08/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1827 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0219                     	;# 
   178  021A                     	;# 
   179  021B                     	;# 
   180  021C                     	;# 
   181  021D                     	;# 
   182  021E                     	;# 
   183  021F                     	;# 
   184  0291                     	;# 
   185  0291                     	;# 
   186  0292                     	;# 
   187  0293                     	;# 
   188  0294                     	;# 
   189  0295                     	;# 
   190  0295                     	;# 
   191  0296                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  029A                     	;# 
   196  029B                     	;# 
   197  029C                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029E                     	;# 
   202  0311                     	;# 
   203  0311                     	;# 
   204  0312                     	;# 
   205  0313                     	;# 
   206  0318                     	;# 
   207  0318                     	;# 
   208  0319                     	;# 
   209  031A                     	;# 
   210  0394                     	;# 
   211  0395                     	;# 
   212  0396                     	;# 
   213  039A                     	;# 
   214  039C                     	;# 
   215  039D                     	;# 
   216  039E                     	;# 
   217  039F                     	;# 
   218  0415                     	;# 
   219  0416                     	;# 
   220  0417                     	;# 
   221  041C                     	;# 
   222  041D                     	;# 
   223  041E                     	;# 
   224  0FE4                     	;# 
   225  0FE5                     	;# 
   226  0FE6                     	;# 
   227  0FE7                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEB                     	;# 
   232  0FED                     	;# 
   233  0FEE                     	;# 
   234  0FEF                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  011E                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020C                     	;# 
   319  020D                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0219                     	;# 
   336  021A                     	;# 
   337  021B                     	;# 
   338  021C                     	;# 
   339  021D                     	;# 
   340  021E                     	;# 
   341  021F                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029C                     	;# 
   357  029D                     	;# 
   358  029E                     	;# 
   359  029E                     	;# 
   360  0311                     	;# 
   361  0311                     	;# 
   362  0312                     	;# 
   363  0313                     	;# 
   364  0318                     	;# 
   365  0318                     	;# 
   366  0319                     	;# 
   367  031A                     	;# 
   368  0394                     	;# 
   369  0395                     	;# 
   370  0396                     	;# 
   371  039A                     	;# 
   372  039C                     	;# 
   373  039D                     	;# 
   374  039E                     	;# 
   375  039F                     	;# 
   376  0415                     	;# 
   377  0416                     	;# 
   378  0417                     	;# 
   379  041C                     	;# 
   380  041D                     	;# 
   381  041E                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  0111                     	;# 
   442  0112                     	;# 
   443  0113                     	;# 
   444  0114                     	;# 
   445  0115                     	;# 
   446  0116                     	;# 
   447  0117                     	;# 
   448  0118                     	;# 
   449  0119                     	;# 
   450  011A                     	;# 
   451  011B                     	;# 
   452  011D                     	;# 
   453  011E                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0194                     	;# 
   463  0195                     	;# 
   464  0196                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019C                     	;# 
   472  019C                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020D                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0219                     	;# 
   494  021A                     	;# 
   495  021B                     	;# 
   496  021C                     	;# 
   497  021D                     	;# 
   498  021E                     	;# 
   499  021F                     	;# 
   500  0291                     	;# 
   501  0291                     	;# 
   502  0292                     	;# 
   503  0293                     	;# 
   504  0294                     	;# 
   505  0295                     	;# 
   506  0295                     	;# 
   507  0296                     	;# 
   508  0298                     	;# 
   509  0298                     	;# 
   510  0299                     	;# 
   511  029A                     	;# 
   512  029B                     	;# 
   513  029C                     	;# 
   514  029C                     	;# 
   515  029D                     	;# 
   516  029E                     	;# 
   517  029E                     	;# 
   518  0311                     	;# 
   519  0311                     	;# 
   520  0312                     	;# 
   521  0313                     	;# 
   522  0318                     	;# 
   523  0318                     	;# 
   524  0319                     	;# 
   525  031A                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  039A                     	;# 
   530  039C                     	;# 
   531  039D                     	;# 
   532  039E                     	;# 
   533  039F                     	;# 
   534  0415                     	;# 
   535  0416                     	;# 
   536  0417                     	;# 
   537  041C                     	;# 
   538  041D                     	;# 
   539  041E                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0113                     	;# 
   602  0114                     	;# 
   603  0115                     	;# 
   604  0116                     	;# 
   605  0117                     	;# 
   606  0118                     	;# 
   607  0119                     	;# 
   608  011A                     	;# 
   609  011B                     	;# 
   610  011D                     	;# 
   611  011E                     	;# 
   612  018C                     	;# 
   613  018D                     	;# 
   614  0191                     	;# 
   615  0191                     	;# 
   616  0192                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0194                     	;# 
   621  0195                     	;# 
   622  0196                     	;# 
   623  0199                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019C                     	;# 
   630  019C                     	;# 
   631  019D                     	;# 
   632  019E                     	;# 
   633  019F                     	;# 
   634  020C                     	;# 
   635  020D                     	;# 
   636  0211                     	;# 
   637  0211                     	;# 
   638  0212                     	;# 
   639  0212                     	;# 
   640  0213                     	;# 
   641  0213                     	;# 
   642  0214                     	;# 
   643  0214                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0216                     	;# 
   649  0217                     	;# 
   650  0217                     	;# 
   651  0219                     	;# 
   652  021A                     	;# 
   653  021B                     	;# 
   654  021C                     	;# 
   655  021D                     	;# 
   656  021E                     	;# 
   657  021F                     	;# 
   658  0291                     	;# 
   659  0291                     	;# 
   660  0292                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0295                     	;# 
   664  0295                     	;# 
   665  0296                     	;# 
   666  0298                     	;# 
   667  0298                     	;# 
   668  0299                     	;# 
   669  029A                     	;# 
   670  029B                     	;# 
   671  029C                     	;# 
   672  029C                     	;# 
   673  029D                     	;# 
   674  029E                     	;# 
   675  029E                     	;# 
   676  0311                     	;# 
   677  0311                     	;# 
   678  0312                     	;# 
   679  0313                     	;# 
   680  0318                     	;# 
   681  0318                     	;# 
   682  0319                     	;# 
   683  031A                     	;# 
   684  0394                     	;# 
   685  0395                     	;# 
   686  0396                     	;# 
   687  039A                     	;# 
   688  039C                     	;# 
   689  039D                     	;# 
   690  039E                     	;# 
   691  039F                     	;# 
   692  0415                     	;# 
   693  0416                     	;# 
   694  0417                     	;# 
   695  041C                     	;# 
   696  041D                     	;# 
   697  041E                     	;# 
   698  0FE4                     	;# 
   699  0FE5                     	;# 
   700  0FE6                     	;# 
   701  0FE7                     	;# 
   702  0FE8                     	;# 
   703  0FE9                     	;# 
   704  0FEA                     	;# 
   705  0FEB                     	;# 
   706  0FED                     	;# 
   707  0FEE                     	;# 
   708  0FEF                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0014                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  001E                     	;# 
   737  001F                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0093                     	;# 
   743  0094                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  0111                     	;# 
   758  0112                     	;# 
   759  0113                     	;# 
   760  0114                     	;# 
   761  0115                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0118                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011B                     	;# 
   768  011D                     	;# 
   769  011E                     	;# 
   770  018C                     	;# 
   771  018D                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  019C                     	;# 
   789  019D                     	;# 
   790  019E                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0213                     	;# 
   800  0214                     	;# 
   801  0214                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  0219                     	;# 
   810  021A                     	;# 
   811  021B                     	;# 
   812  021C                     	;# 
   813  021D                     	;# 
   814  021E                     	;# 
   815  021F                     	;# 
   816  0291                     	;# 
   817  0291                     	;# 
   818  0292                     	;# 
   819  0293                     	;# 
   820  0294                     	;# 
   821  0295                     	;# 
   822  0295                     	;# 
   823  0296                     	;# 
   824  0298                     	;# 
   825  0298                     	;# 
   826  0299                     	;# 
   827  029A                     	;# 
   828  029B                     	;# 
   829  029C                     	;# 
   830  029C                     	;# 
   831  029D                     	;# 
   832  029E                     	;# 
   833  029E                     	;# 
   834  0311                     	;# 
   835  0311                     	;# 
   836  0312                     	;# 
   837  0313                     	;# 
   838  0318                     	;# 
   839  0318                     	;# 
   840  0319                     	;# 
   841  031A                     	;# 
   842  0394                     	;# 
   843  0395                     	;# 
   844  0396                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0415                     	;# 
   851  0416                     	;# 
   852  0417                     	;# 
   853  041C                     	;# 
   854  041D                     	;# 
   855  041E                     	;# 
   856  0FE4                     	;# 
   857  0FE5                     	;# 
   858  0FE6                     	;# 
   859  0FE7                     	;# 
   860  0FE8                     	;# 
   861  0FE9                     	;# 
   862  0FEA                     	;# 
   863  0FEB                     	;# 
   864  0FED                     	;# 
   865  0FEE                     	;# 
   866  0FEF                     	;# 
   867  0000                     	;# 
   868  0001                     	;# 
   869  0002                     	;# 
   870  0003                     	;# 
   871  0004                     	;# 
   872  0005                     	;# 
   873  0006                     	;# 
   874  0007                     	;# 
   875  0008                     	;# 
   876  0009                     	;# 
   877  000A                     	;# 
   878  000B                     	;# 
   879  000C                     	;# 
   880  000D                     	;# 
   881  0011                     	;# 
   882  0012                     	;# 
   883  0013                     	;# 
   884  0014                     	;# 
   885  0015                     	;# 
   886  0016                     	;# 
   887  0016                     	;# 
   888  0017                     	;# 
   889  0018                     	;# 
   890  0019                     	;# 
   891  001A                     	;# 
   892  001B                     	;# 
   893  001C                     	;# 
   894  001E                     	;# 
   895  001F                     	;# 
   896  008C                     	;# 
   897  008D                     	;# 
   898  0091                     	;# 
   899  0092                     	;# 
   900  0093                     	;# 
   901  0094                     	;# 
   902  0095                     	;# 
   903  0096                     	;# 
   904  0097                     	;# 
   905  0098                     	;# 
   906  0099                     	;# 
   907  009A                     	;# 
   908  009B                     	;# 
   909  009B                     	;# 
   910  009C                     	;# 
   911  009D                     	;# 
   912  009E                     	;# 
   913  010C                     	;# 
   914  010D                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011A                     	;# 
   925  011B                     	;# 
   926  011D                     	;# 
   927  011E                     	;# 
   928  018C                     	;# 
   929  018D                     	;# 
   930  0191                     	;# 
   931  0191                     	;# 
   932  0192                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0193                     	;# 
   936  0194                     	;# 
   937  0195                     	;# 
   938  0196                     	;# 
   939  0199                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019C                     	;# 
   946  019C                     	;# 
   947  019D                     	;# 
   948  019E                     	;# 
   949  019F                     	;# 
   950  020C                     	;# 
   951  020D                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  0219                     	;# 
   968  021A                     	;# 
   969  021B                     	;# 
   970  021C                     	;# 
   971  021D                     	;# 
   972  021E                     	;# 
   973  021F                     	;# 
   974  0291                     	;# 
   975  0291                     	;# 
   976  0292                     	;# 
   977  0293                     	;# 
   978  0294                     	;# 
   979  0295                     	;# 
   980  0295                     	;# 
   981  0296                     	;# 
   982  0298                     	;# 
   983  0298                     	;# 
   984  0299                     	;# 
   985  029A                     	;# 
   986  029B                     	;# 
   987  029C                     	;# 
   988  029C                     	;# 
   989  029D                     	;# 
   990  029E                     	;# 
   991  029E                     	;# 
   992  0311                     	;# 
   993  0311                     	;# 
   994  0312                     	;# 
   995  0313                     	;# 
   996  0318                     	;# 
   997  0318                     	;# 
   998  0319                     	;# 
   999  031A                     	;# 
  1000  0394                     	;# 
  1001  0395                     	;# 
  1002  0396                     	;# 
  1003  039A                     	;# 
  1004  039C                     	;# 
  1005  039D                     	;# 
  1006  039E                     	;# 
  1007  039F                     	;# 
  1008  0415                     	;# 
  1009  0416                     	;# 
  1010  0417                     	;# 
  1011  041C                     	;# 
  1012  041D                     	;# 
  1013  041E                     	;# 
  1014  0FE4                     	;# 
  1015  0FE5                     	;# 
  1016  0FE6                     	;# 
  1017  0FE7                     	;# 
  1018  0FE8                     	;# 
  1019  0FE9                     	;# 
  1020  0FEA                     	;# 
  1021  0FEB                     	;# 
  1022  0FED                     	;# 
  1023  0FEE                     	;# 
  1024  0FEF                     	;# 
  1025  0000                     	;# 
  1026  0001                     	;# 
  1027  0002                     	;# 
  1028  0003                     	;# 
  1029  0004                     	;# 
  1030  0005                     	;# 
  1031  0006                     	;# 
  1032  0007                     	;# 
  1033  0008                     	;# 
  1034  0009                     	;# 
  1035  000A                     	;# 
  1036  000B                     	;# 
  1037  000C                     	;# 
  1038  000D                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0013                     	;# 
  1042  0014                     	;# 
  1043  0015                     	;# 
  1044  0016                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001C                     	;# 
  1052  001E                     	;# 
  1053  001F                     	;# 
  1054  008C                     	;# 
  1055  008D                     	;# 
  1056  0091                     	;# 
  1057  0092                     	;# 
  1058  0093                     	;# 
  1059  0094                     	;# 
  1060  0095                     	;# 
  1061  0096                     	;# 
  1062  0097                     	;# 
  1063  0098                     	;# 
  1064  0099                     	;# 
  1065  009A                     	;# 
  1066  009B                     	;# 
  1067  009B                     	;# 
  1068  009C                     	;# 
  1069  009D                     	;# 
  1070  009E                     	;# 
  1071  010C                     	;# 
  1072  010D                     	;# 
  1073  0111                     	;# 
  1074  0112                     	;# 
  1075  0113                     	;# 
  1076  0114                     	;# 
  1077  0115                     	;# 
  1078  0116                     	;# 
  1079  0117                     	;# 
  1080  0118                     	;# 
  1081  0119                     	;# 
  1082  011A                     	;# 
  1083  011B                     	;# 
  1084  011D                     	;# 
  1085  011E                     	;# 
  1086  018C                     	;# 
  1087  018D                     	;# 
  1088  0191                     	;# 
  1089  0191                     	;# 
  1090  0192                     	;# 
  1091  0193                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0194                     	;# 
  1095  0195                     	;# 
  1096  0196                     	;# 
  1097  0199                     	;# 
  1098  019A                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019E                     	;# 
  1107  019F                     	;# 
  1108  020C                     	;# 
  1109  020D                     	;# 
  1110  0211                     	;# 
  1111  0211                     	;# 
  1112  0212                     	;# 
  1113  0212                     	;# 
  1114  0213                     	;# 
  1115  0213                     	;# 
  1116  0214                     	;# 
  1117  0214                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0216                     	;# 
  1122  0216                     	;# 
  1123  0217                     	;# 
  1124  0217                     	;# 
  1125  0219                     	;# 
  1126  021A                     	;# 
  1127  021B                     	;# 
  1128  021C                     	;# 
  1129  021D                     	;# 
  1130  021E                     	;# 
  1131  021F                     	;# 
  1132  0291                     	;# 
  1133  0291                     	;# 
  1134  0292                     	;# 
  1135  0293                     	;# 
  1136  0294                     	;# 
  1137  0295                     	;# 
  1138  0295                     	;# 
  1139  0296                     	;# 
  1140  0298                     	;# 
  1141  0298                     	;# 
  1142  0299                     	;# 
  1143  029A                     	;# 
  1144  029B                     	;# 
  1145  029C                     	;# 
  1146  029C                     	;# 
  1147  029D                     	;# 
  1148  029E                     	;# 
  1149  029E                     	;# 
  1150  0311                     	;# 
  1151  0311                     	;# 
  1152  0312                     	;# 
  1153  0313                     	;# 
  1154  0318                     	;# 
  1155  0318                     	;# 
  1156  0319                     	;# 
  1157  031A                     	;# 
  1158  0394                     	;# 
  1159  0395                     	;# 
  1160  0396                     	;# 
  1161  039A                     	;# 
  1162  039C                     	;# 
  1163  039D                     	;# 
  1164  039E                     	;# 
  1165  039F                     	;# 
  1166  0415                     	;# 
  1167  0416                     	;# 
  1168  0417                     	;# 
  1169  041C                     	;# 
  1170  041D                     	;# 
  1171  041E                     	;# 
  1172  0FE4                     	;# 
  1173  0FE5                     	;# 
  1174  0FE6                     	;# 
  1175  0FE7                     	;# 
  1176  0FE8                     	;# 
  1177  0FE9                     	;# 
  1178  0FEA                     	;# 
  1179  0FEB                     	;# 
  1180  0FED                     	;# 
  1181  0FEE                     	;# 
  1182  0FEF                     	;# 
  1183                           
  1184                           	psect	idataBANK0
  1185  0485                     __pidataBANK0:
  1186                           
  1187                           ;initializer for _segdata
  1188  0485  343F               	retlw	63
  1189  0486  3406               	retlw	6
  1190  0487  345B               	retlw	91
  1191  0488  344F               	retlw	79
  1192  0489  3466               	retlw	102
  1193  048A  346D               	retlw	109
  1194  048B  347D               	retlw	125
  1195  048C  3407               	retlw	7
  1196  048D  347F               	retlw	127
  1197  048E  346F               	retlw	111
  1198                           
  1199                           ;initializer for rtc_display@F2393
  1200  048F  34FF               	retlw	255
  1201  0490  34FF               	retlw	255
  1202  0491  34FF               	retlw	255
  1203  0492  34FF               	retlw	255
  1204  000C                     _PORTAbits	set	12
  1205  008C                     _TRISAbits	set	140
  1206  0097                     _WDTCON	set	151
  1207  0098                     _OSCTUNE	set	152
  1208  0099                     _OSCCON	set	153
  1209  0095                     _OPTION_REGbits	set	149
  1210  008D                     _TRISB	set	141
  1211  008C                     _TRISA	set	140
  1212  046D                     _TRISB5	set	1133
  1213  046A                     _TRISB2	set	1130
  1214  010C                     _LATAbits	set	268
  1215  0116                     _BORCON	set	278
  1216  011E                     _APFCON1	set	286
  1217  011D                     _APFCON0	set	285
  1218  010D                     _LATB	set	269
  1219  010C                     _LATA	set	268
  1220  018C                     _ANSELA	set	396
  1221  018D                     _ANSELB	set	397
  1222  021D                     _SSP2CON1bits	set	541
  1223  021C                     _SSP2STATbits	set	540
  1224  0219                     _SSP2BUF	set	537
  1225  021E                     _SSP2CON2bits	set	542
  1226  021C                     _SSP2STAT	set	540
  1227  021E                     _SSP2CON2	set	542
  1228  021D                     _SSP2CON1	set	541
  1229  021A                     _SSP2ADD	set	538
  1230  020C                     _WPUA	set	524
  1231  020D                     _WPUB	set	525
  1232                           
  1233                           	psect	cinit
  1234  07EC                     start_initialization:	
  1235                           ; #config settings
  1236                           
  1237  07EC                     __initialization:
  1238                           
  1239                           ; Initialize objects allocated to BANK0
  1240  07EC  3085               	movlw	low __pidataBANK0
  1241  07ED  0084               	movwf	4
  1242  07EE  3084               	movlw	(high __pidataBANK0)| (0+128)
  1243  07EF  0085               	movwf	5
  1244  07F0  3033               	movlw	low __pdataBANK0
  1245  07F1  0086               	movwf	6
  1246  07F2  3000               	movlw	high __pdataBANK0
  1247  07F3  0087               	movwf	7
  1248  07F4  300E               	movlw	14
  1249  07F5  3184  242D  3187   	fcall	init_ram
  1250                           
  1251                           ; Clear objects allocated to COMMON
  1252  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
  1253                           
  1254                           ; Clear objects allocated to BANK0
  1255  07F9  01C1               	clrf	__pbssBANK0& (0+127)
  1256  07FA  01C2               	clrf	(__pbssBANK0+1)& (0+127)
  1257  07FB  01C3               	clrf	(__pbssBANK0+2)& (0+127)
  1258  07FC  01C4               	clrf	(__pbssBANK0+3)& (0+127)
  1259  07FD                     end_of_initialization:	
  1260                           ;End of C runtime variable initialization code
  1261                           
  1262  07FD                     __end_of__initialization:
  1263  07FD  0020               	movlb	0
  1264  07FE  3186  2E1C         	ljmp	_main	;jump to C main() function
  1265                           
  1266                           	psect	bssCOMMON
  1267  007D                     __pbssCOMMON:
  1268  007D                     _m_brightness:
  1269  007D                     	ds	1
  1270                           
  1271                           	psect	bssBANK0
  1272  0041                     __pbssBANK0:
  1273  0041                     clear@F2384:
  1274  0041                     	ds	4
  1275                           
  1276                           	psect	dataBANK0
  1277  0033                     __pdataBANK0:
  1278  0033                     _segdata:
  1279  0033                     	ds	10
  1280  003D                     rtc_display@F2393:
  1281  003D                     	ds	4
  1282                           
  1283                           	psect	inittext
  1284  042D                     init_ram:
  1285  042D  00FE               	movwf	btemp
  1286  042E                     initloop:
  1287  042E  0012               	moviw fsr0++
  1288  042F  001E               	movwi fsr1++
  1289  0430  0BFE               	decfsz	btemp,f
  1290  0431  2C2E               	goto	initloop
  1291  0432  3400               	retlw	0
  1292                           
  1293                           	psect	cstackCOMMON
  1294  0070                     __pcstackCOMMON:
  1295  0070                     ?_OSCILLATOR_Initialize:
  1296  0070                     ??_OSCILLATOR_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_WDT_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ??_WDT_Initialize:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_write_date:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_set_brigthness:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_read_date:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_rtc_display:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_encode_dig:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ??_encode_dig:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_PIN_MANAGER_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ??_PIN_MANAGER_Initialize:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_SYSTEM_Initialize:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ??_SYSTEM_Initialize:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_main:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_i2c_wait:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ??_i2c_wait:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_i2c_start:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ??_i2c_start:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_i2c_stop:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ??_i2c_stop:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_i2c_repeated_start:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ??_i2c_repeated_start:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_write_byte:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ??_write_byte:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_recv_byte:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ??_recv_byte:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_bit_delay:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ??_bit_delay:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_start:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ??_start:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_stop:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ??_stop:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_write_data:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ??_write_data:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_bcd_2_decimal:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ?_decimal_2_bcd:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_read_:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?___bmul:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?___awdiv:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ?___awmod:	
  1414                           ; 2 bytes @ 0x0
  1415                           
  1416  0070                     write_byte@data:	
  1417                           ; 2 bytes @ 0x0
  1418                           
  1419  0070                     set_brigthness@on:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     encode_dig@digit:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ___bmul@multiplicand:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ___awdiv@divisor:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ___awmod@divisor:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434                           
  1435                           ; 2 bytes @ 0x0
  1436  0070                     	ds	1
  1437  0071                     ??_set_brigthness:
  1438  0071                     ??___bmul:	
  1439                           ; 1 bytes @ 0x1
  1440                           
  1441  0071                     recv_byte@ack:	
  1442                           ; 1 bytes @ 0x1
  1443                           
  1444  0071                     write_data@b:	
  1445                           ; 1 bytes @ 0x1
  1446                           
  1447                           
  1448                           ; 1 bytes @ 0x1
  1449  0071                     	ds	1
  1450  0072                     recv_byte@data:
  1451  0072                     write_data@ack:	
  1452                           ; 1 bytes @ 0x2
  1453                           
  1454  0072                     set_brigthness@brightness:	
  1455                           ; 1 bytes @ 0x2
  1456                           
  1457  0072                     ___bmul@product:	
  1458                           ; 1 bytes @ 0x2
  1459                           
  1460  0072                     ___awdiv@dividend:	
  1461                           ; 1 bytes @ 0x2
  1462                           
  1463  0072                     ___awmod@dividend:	
  1464                           ; 2 bytes @ 0x2
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x2
  1468  0072                     	ds	1
  1469  0073                     write_data@data:
  1470  0073                     ___bmul@multiplier:	
  1471                           ; 1 bytes @ 0x3
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x3
  1475  0073                     	ds	1
  1476  0074                     ??_bcd_2_decimal:
  1477  0074                     ??___awdiv:	
  1478                           ; 1 bytes @ 0x4
  1479                           
  1480  0074                     ??___awmod:	
  1481                           ; 1 bytes @ 0x4
  1482                           
  1483  0074                     write_data@i:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0x4
  1488  0074                     	ds	1
  1489  0075                     ?_set_segments:
  1490  0075                     set_segments@length:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     ___awdiv@counter:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496  0075                     ___awmod@counter:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x5
  1501  0075                     	ds	1
  1502  0076                     set_segments@pos:
  1503  0076                     ___awdiv@sign:	
  1504                           ; 1 bytes @ 0x6
  1505                           
  1506  0076                     ___awmod@sign:	
  1507                           ; 1 bytes @ 0x6
  1508                           
  1509                           
  1510                           ; 1 bytes @ 0x6
  1511  0076                     	ds	1
  1512  0077                     ??_set_segments:
  1513  0077                     bcd_2_decimal@number:	
  1514                           ; 1 bytes @ 0x7
  1515                           
  1516  0077                     ___awdiv@quotient:	
  1517                           ; 1 bytes @ 0x7
  1518                           
  1519                           
  1520                           ; 2 bytes @ 0x7
  1521  0077                     	ds	1
  1522  0078                     ??_read_:
  1523  0078                     set_segments@segments:	
  1524                           ; 1 bytes @ 0x8
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x8
  1528  0078                     	ds	1
  1529  0079                     set_segments@k:
  1530  0079                     decimal_2_bcd@number:	
  1531                           ; 1 bytes @ 0x9
  1532                           
  1533  0079                     read_@address:	
  1534                           ; 1 bytes @ 0x9
  1535                           
  1536                           
  1537                           ; 1 bytes @ 0x9
  1538  0079                     	ds	1
  1539  007A                     ??_write_date:
  1540  007A                     ??_rtc_display:	
  1541                           ; 1 bytes @ 0xA
  1542                           
  1543  007A                     read_@data:	
  1544                           ; 1 bytes @ 0xA
  1545                           
  1546                           
  1547                           ; 1 bytes @ 0xA
  1548  007A                     	ds	1
  1549  007B                     ??_read_date:
  1550                           
  1551                           ; 1 bytes @ 0xB
  1552  007B                     	ds	1
  1553  007C                     write_date@date:
  1554  007C                     read_date@date:	
  1555                           ; 1 bytes @ 0xC
  1556                           
  1557                           
  1558                           ; 1 bytes @ 0xC
  1559  007C                     	ds	1
  1560                           
  1561                           	psect	cstackBANK0
  1562  0020                     __pcstackBANK0:
  1563  0020                     ??_decimal_2_bcd:
  1564                           
  1565                           ; 1 bytes @ 0x0
  1566  0020                     	ds	4
  1567  0024                     rtc_display@segments:
  1568                           
  1569                           ; 4 bytes @ 0x4
  1570  0024                     	ds	4
  1571  0028                     rtc_display@min:
  1572                           
  1573                           ; 1 bytes @ 0x8
  1574  0028                     	ds	1
  1575  0029                     rtc_display@sec:
  1576                           
  1577                           ; 1 bytes @ 0x9
  1578  0029                     	ds	1
  1579  002A                     rtc_display@date:
  1580                           
  1581                           ; 1 bytes @ 0xA
  1582  002A                     	ds	1
  1583  002B                     ??_main:
  1584                           
  1585                           ; 1 bytes @ 0xB
  1586  002B                     	ds	2
  1587  002D                     main@date:
  1588                           
  1589                           ; 6 bytes @ 0xD
  1590  002D                     	ds	6
  1591                           
  1592                           	psect	maintext
  1593  061C                     __pmaintext:	
  1594 ;;
  1595 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1596 ;;
  1597 ;; *************** function _main *****************
  1598 ;; Defined at:
  1599 ;;		line 7 in file "main.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  date            6   13[BANK0 ] struct Date
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : B1F/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1613 ;;      Params:         0       0       0       0       0       0
  1614 ;;      Locals:         0       6       0       0       0       0
  1615 ;;      Temps:          0       2       0       0       0       0
  1616 ;;      Totals:         0       8       0       0       0       0
  1617 ;;Total ram usage:        8 bytes
  1618 ;; Hardware stack levels required when called:    4
  1619 ;; This function calls:
  1620 ;;		_SYSTEM_Initialize
  1621 ;;		_read_date
  1622 ;;		_rtc_display
  1623 ;;		_set_brigthness
  1624 ;;		_write_date
  1625 ;; This function is called by:
  1626 ;;		Startup code after reset
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _main
  1632  061C                     _main:
  1633  061C                     l1541:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1636                           
  1637                           
  1638                           ;main.c: 10: SYSTEM_Initialize();
  1639  061C  3184  245B  3186   	fcall	_SYSTEM_Initialize
  1640  061F                     l1543:
  1641                           
  1642                           ;main.c: 12: TRISB2 = 1;
  1643  061F  0021               	movlb	1	; select bank1
  1644  0620  150D               	bsf	13,2	;volatile
  1645  0621                     l1545:
  1646                           
  1647                           ;main.c: 13: TRISB5 = 1;
  1648  0621  168D               	bsf	13,5	;volatile
  1649  0622                     l1547:
  1650                           
  1651                           ;main.c: 14: WPUB = 0x24;
  1652  0622  3024               	movlw	36
  1653  0623  0024               	movlb	4	; select bank4
  1654  0624  008D               	movwf	13	;volatile
  1655  0625                     l1549:
  1656                           
  1657                           ;main.c: 17: SSP2ADD = 0x13;
  1658  0625  3013               	movlw	19
  1659  0626  009A               	movwf	26	;volatile
  1660  0627                     l1551:
  1661                           
  1662                           ;main.c: 18: SSP2CON1 = 0x28;
  1663  0627  3028               	movlw	40
  1664  0628  009D               	movwf	29	;volatile
  1665  0629                     l1553:
  1666                           
  1667                           ;main.c: 19: SSP2CON2 = 0x0;
  1668  0629  019E               	clrf	30	;volatile
  1669  062A                     l1555:
  1670                           
  1671                           ;main.c: 20: SSP2STAT = 0;
  1672  062A  019C               	clrf	28	;volatile
  1673  062B                     l1557:
  1674                           
  1675                           ;main.c: 22: struct Date date;;main.c: 23: date.year = 20;
  1676  062B  3014               	movlw	20
  1677  062C  0020               	movlb	0	; select bank0
  1678  062D  00AB               	movwf	??_main
  1679  062E  082B               	movf	??_main,w
  1680  062F  00AD               	movwf	main@date
  1681  0630                     l1559:
  1682                           
  1683                           ;main.c: 24: date.month = 11;
  1684  0630  300B               	movlw	11
  1685  0631  00AB               	movwf	??_main
  1686  0632  082B               	movf	??_main,w
  1687  0633  00AE               	movwf	main@date+1
  1688  0634                     l1561:
  1689                           
  1690                           ;main.c: 25: date.day = 1;
  1691  0634  01AF               	clrf	main@date+2
  1692  0635  0AAF               	incf	main@date+2,f
  1693  0636                     l1563:
  1694                           
  1695                           ;main.c: 26: date.hour = 10;
  1696  0636  300A               	movlw	10
  1697  0637  00AB               	movwf	??_main
  1698  0638  082B               	movf	??_main,w
  1699  0639  00B0               	movwf	main@date+3
  1700  063A                     l1565:
  1701                           
  1702                           ;main.c: 27: date.min = 38;
  1703  063A  3026               	movlw	38
  1704  063B  00AB               	movwf	??_main
  1705  063C  082B               	movf	??_main,w
  1706  063D  00B1               	movwf	main@date+4
  1707  063E                     l1567:
  1708                           
  1709                           ;main.c: 28: date.sec = 24;
  1710  063E  3018               	movlw	24
  1711  063F  00AB               	movwf	??_main
  1712  0640  082B               	movf	??_main,w
  1713  0641  00B2               	movwf	main@date+5
  1714  0642                     l1569:
  1715                           
  1716                           ;main.c: 30: write_date(&date);
  1717  0642  302D               	movlw	(low (main@date| 0))& (0+255)
  1718  0643  3187  2716  3186   	fcall	_write_date
  1719  0646                     l1571:
  1720                           
  1721                           ;main.c: 32: set_brigthness(0x0f, 1);
  1722  0646  01F0               	clrf	set_brigthness@on
  1723  0647  0AF0               	incf	set_brigthness@on,f
  1724  0648  300F               	movlw	15
  1725  0649  3184  24A3  3186   	fcall	_set_brigthness
  1726  064C                     l86:	
  1727                           ;main.c: 35: while (1)
  1728                           
  1729                           
  1730                           ;main.c: 36: {;main.c: 37: read_date(&date);
  1731  064C  302D               	movlw	(low (main@date| 0))& (0+255)
  1732  064D  3185  25D6  3186   	fcall	_read_date
  1733                           
  1734                           ;main.c: 38: rtc_display(&date);
  1735  0650  302D               	movlw	(low (main@date| 0))& (0+255)
  1736  0651  3187  2776  3186   	fcall	_rtc_display
  1737  0654                     l1573:
  1738                           
  1739                           ;main.c: 39: _delay((unsigned long)((100)*(8000000/4000.0)));
  1740  0654  3002               	movlw	2
  1741  0655  0020               	movlb	0	; select bank0
  1742  0656  00AC               	movwf	??_main+1
  1743  0657  3004               	movlw	4
  1744  0658  00AB               	movwf	??_main
  1745  0659  30BA               	movlw	186
  1746  065A                     u757:
  1747  065A  0B89               	decfsz	9,f
  1748  065B  2E5A               	goto	u757
  1749  065C  0BAB               	decfsz	??_main,f
  1750  065D  2E5A               	goto	u757
  1751  065E  0BAC               	decfsz	??_main+1,f
  1752  065F  2E5A               	goto	u757
  1753  0660  0000               	nop
  1754  0661  2E4C               	goto	l86
  1755  0662  3180  2802         	ljmp	start
  1756  0664                     __end_of_main:
  1757                           
  1758                           	psect	text1
  1759  0716                     __ptext1:	
  1760 ;; *************** function _write_date *****************
  1761 ;; Defined at:
  1762 ;;		line 23 in file "DS3231.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  date            1    wreg     PTR struct Date
  1765 ;;		 -> main@date(6), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  date            1   12[COMMON] PTR struct Date
  1768 ;;		 -> main@date(6), 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1778 ;;      Params:         0       0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0       0
  1781 ;;      Totals:         3       0       0       0       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    2
  1785 ;; This function calls:
  1786 ;;		_decimal_2_bcd
  1787 ;;		_i2c_start
  1788 ;;		_i2c_stop
  1789 ;;		_write_byte
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _write_date
  1797  0716                     _write_date:
  1798                           
  1799                           ;incstack = 0
  1800                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1801                           ;write_date@date stored from wreg
  1802  0716  00FC               	movwf	write_date@date
  1803  0717                     l1487:
  1804                           
  1805                           ;DS3231.c: 24: i2c_start();
  1806  0717  3184  246F  3187   	fcall	_i2c_start
  1807                           
  1808                           ;DS3231.c: 25: write_byte(0xD0);
  1809  071A  30D0               	movlw	208
  1810  071B  3184  2493  3187   	fcall	_write_byte
  1811                           
  1812                           ;DS3231.c: 26: write_byte(0x00);
  1813  071E  3000               	movlw	0
  1814  071F  3184  2493  3187   	fcall	_write_byte
  1815  0722                     l1489:
  1816                           
  1817                           ;DS3231.c: 28: write_byte(decimal_2_bcd(date->sec));
  1818  0722  087C               	movf	write_date@date,w
  1819  0723  3E05               	addlw	5
  1820  0724  0086               	movwf	6
  1821  0725  0187               	clrf	7
  1822  0726  0801               	movf	1,w
  1823  0727  3185  252F  3187   	fcall	_decimal_2_bcd
  1824  072A  3184  2493  3187   	fcall	_write_byte
  1825  072D                     l1491:
  1826                           
  1827                           ;DS3231.c: 29: write_byte(decimal_2_bcd(date->min));
  1828  072D  087C               	movf	write_date@date,w
  1829  072E  3E04               	addlw	4
  1830  072F  0086               	movwf	6
  1831  0730  0187               	clrf	7
  1832  0731  0801               	movf	1,w
  1833  0732  3185  252F  3187   	fcall	_decimal_2_bcd
  1834  0735  3184  2493  3187   	fcall	_write_byte
  1835  0738                     l1493:
  1836                           
  1837                           ;DS3231.c: 30: write_byte(decimal_2_bcd(date->hour));
  1838  0738  087C               	movf	write_date@date,w
  1839  0739  3E03               	addlw	3
  1840  073A  0086               	movwf	6
  1841  073B  0187               	clrf	7
  1842  073C  0801               	movf	1,w
  1843  073D  3185  252F  3187   	fcall	_decimal_2_bcd
  1844  0740  3184  2493  3187   	fcall	_write_byte
  1845  0743                     l1495:
  1846                           
  1847                           ;DS3231.c: 31: write_byte(1);
  1848  0743  3001               	movlw	1
  1849  0744  3184  2493  3187   	fcall	_write_byte
  1850                           
  1851                           ;DS3231.c: 32: write_byte(decimal_2_bcd(date->day));
  1852  0747  087C               	movf	write_date@date,w
  1853  0748  3E02               	addlw	2
  1854  0749  0086               	movwf	6
  1855  074A  0187               	clrf	7
  1856  074B  0801               	movf	1,w
  1857  074C  3185  252F  3187   	fcall	_decimal_2_bcd
  1858  074F  3184  2493  3187   	fcall	_write_byte
  1859                           
  1860                           ;DS3231.c: 33: write_byte(decimal_2_bcd(date->month));
  1861  0752  0A7C               	incf	write_date@date,w
  1862  0753  0086               	movwf	6
  1863  0754  0187               	clrf	7
  1864  0755  0801               	movf	1,w
  1865  0756  3185  252F  3187   	fcall	_decimal_2_bcd
  1866  0759  3184  2493  3187   	fcall	_write_byte
  1867                           
  1868                           ;DS3231.c: 34: write_byte(decimal_2_bcd(date->year));
  1869  075C  087C               	movf	write_date@date,w
  1870  075D  0086               	movwf	6
  1871  075E  0187               	clrf	7
  1872  075F  0801               	movf	1,w
  1873  0760  3185  252F  3187   	fcall	_decimal_2_bcd
  1874  0763  3184  2493  3187   	fcall	_write_byte
  1875  0766                     l1497:
  1876                           
  1877                           ;DS3231.c: 35: i2c_stop();
  1878  0766  3184  243A  3187   	fcall	_i2c_stop
  1879  0769                     l1499:
  1880                           
  1881                           ;DS3231.c: 40: _delay((unsigned long)((200)*(8000000/4000.0)));
  1882  0769  3003               	movlw	3
  1883  076A  00FB               	movwf	??_write_date+1
  1884  076B  3008               	movlw	8
  1885  076C  00FA               	movwf	??_write_date
  1886  076D  3077               	movlw	119
  1887  076E                     u767:
  1888  076E  0B89               	decfsz	9,f
  1889  076F  2F6E               	goto	u767
  1890  0770  0BFA               	decfsz	??_write_date,f
  1891  0771  2F6E               	goto	u767
  1892  0772  0BFB               	decfsz	??_write_date+1,f
  1893  0773  2F6E               	goto	u767
  1894  0774  0000               	nop
  1895  0775                     l269:
  1896  0775  0008               	return
  1897  0776                     __end_of_write_date:
  1898                           
  1899                           	psect	text2
  1900  052F                     __ptext2:	
  1901 ;; *************** function _decimal_2_bcd *****************
  1902 ;; Defined at:
  1903 ;;		line 19 in file "DS3231.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  number          1    wreg     unsigned char 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  number          1    9[COMMON] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      unsigned char 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1917 ;;      Params:         0       0       0       0       0       0
  1918 ;;      Locals:         1       0       0       0       0       0
  1919 ;;      Temps:          0       7       0       0       0       0
  1920 ;;      Totals:         1       7       0       0       0       0
  1921 ;;Total ram usage:        8 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    1
  1924 ;; This function calls:
  1925 ;;		___awdiv
  1926 ;;		___awmod
  1927 ;; This function is called by:
  1928 ;;		_write_date
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _decimal_2_bcd
  1934  052F                     _decimal_2_bcd:
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  1938                           ;decimal_2_bcd@number stored from wreg
  1939  052F  00F9               	movwf	decimal_2_bcd@number
  1940  0530                     l1475:
  1941                           
  1942                           ;DS3231.c: 20: return (((number / 10) << 4) + (number % 10));
  1943  0530  300A               	movlw	10
  1944  0531  00F0               	movwf	___awmod@divisor
  1945  0532  3000               	movlw	0
  1946  0533  00F1               	movwf	___awmod@divisor+1
  1947  0534  0879               	movf	decimal_2_bcd@number,w
  1948  0535  0020               	movlb	0	; select bank0
  1949  0536  00A0               	movwf	??_decimal_2_bcd
  1950  0537  01A1               	clrf	??_decimal_2_bcd+1
  1951  0538  0820               	movf	??_decimal_2_bcd,w
  1952  0539  00F2               	movwf	___awmod@dividend
  1953  053A  0821               	movf	??_decimal_2_bcd+1,w
  1954  053B  00F3               	movwf	___awmod@dividend+1
  1955  053C  3186  2664  3185   	fcall	___awmod
  1956  053F  0870               	movf	?___awmod,w
  1957  0540  0020               	movlb	0	; select bank0
  1958  0541  00A2               	movwf	??_decimal_2_bcd+2
  1959  0542  0871               	movf	?___awmod+1,w
  1960  0543  00A3               	movwf	??_decimal_2_bcd+3
  1961  0544  300A               	movlw	10
  1962  0545  00F0               	movwf	___awdiv@divisor
  1963  0546  3000               	movlw	0
  1964  0547  00F1               	movwf	___awdiv@divisor+1
  1965  0548  0879               	movf	decimal_2_bcd@number,w
  1966  0549  00A4               	movwf	??_decimal_2_bcd+4
  1967  054A  01A5               	clrf	??_decimal_2_bcd+5
  1968  054B  0824               	movf	??_decimal_2_bcd+4,w
  1969  054C  00F2               	movwf	___awdiv@dividend
  1970  054D  0825               	movf	??_decimal_2_bcd+5,w
  1971  054E  00F3               	movwf	___awdiv@dividend+1
  1972  054F  3186  26B7  3185   	fcall	___awdiv
  1973  0552  0870               	movf	?___awdiv,w
  1974  0553  0020               	movlb	0	; select bank0
  1975  0554  00A6               	movwf	??_decimal_2_bcd+6
  1976  0555  3003               	movlw	3
  1977  0556                     u725:
  1978  0556  35A6               	lslf	??_decimal_2_bcd+6,f
  1979  0557  3EFF               	addlw	-1
  1980  0558  1D03               	skipz
  1981  0559  2D56               	goto	u725
  1982  055A  3526               	lslf	??_decimal_2_bcd+6,w
  1983  055B  0722               	addwf	??_decimal_2_bcd+2,w
  1984  055C                     l266:
  1985  055C  0008               	return
  1986  055D                     __end_of_decimal_2_bcd:
  1987                           
  1988                           	psect	text3
  1989  04A3                     __ptext3:	
  1990 ;; *************** function _set_brigthness *****************
  1991 ;; Defined at:
  1992 ;;		line 97 in file "TM1637.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  brightness      1    wreg     unsigned char 
  1995 ;;  on              1    0[COMMON] unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  brightness      1    2[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2007 ;;      Params:         1       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0
  2009 ;;      Temps:          1       0       0       0       0       0
  2010 ;;      Totals:         3       0       0       0       0       0
  2011 ;;Total ram usage:        3 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _set_brigthness
  2022  04A3                     _set_brigthness:
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  2026                           ;set_brigthness@brightness stored from wreg
  2027  04A3  00F2               	movwf	set_brigthness@brightness
  2028  04A4                     l1501:
  2029                           
  2030                           ;TM1637.c: 98: if(on == 1){
  2031  04A4  0370               	decf	set_brigthness@on,w
  2032  04A5  1D03               	btfss	3,2
  2033  04A6  2CA8               	goto	u731
  2034  04A7  2CA9               	goto	u730
  2035  04A8                     u731:
  2036  04A8  2CB0               	goto	l1505
  2037  04A9                     u730:
  2038  04A9                     l1503:
  2039                           
  2040                           ;TM1637.c: 99: m_brightness = (brightness & 0x7 | 0x08);
  2041  04A9  0872               	movf	set_brigthness@brightness,w
  2042  04AA  3907               	andlw	7
  2043  04AB  3808               	iorlw	8
  2044  04AC  00F1               	movwf	??_set_brigthness
  2045  04AD  0871               	movf	??_set_brigthness,w
  2046  04AE  00FD               	movwf	_m_brightness
  2047                           
  2048                           ;TM1637.c: 100: }else{
  2049  04AF  2CB5               	goto	l234
  2050  04B0                     l1505:
  2051                           
  2052                           ;TM1637.c: 101: m_brightness = (brightness & 0x7 | 0x00);
  2053  04B0  0872               	movf	set_brigthness@brightness,w
  2054  04B1  3907               	andlw	7
  2055  04B2  00F1               	movwf	??_set_brigthness
  2056  04B3  0871               	movf	??_set_brigthness,w
  2057  04B4  00FD               	movwf	_m_brightness
  2058  04B5                     l234:
  2059  04B5  0008               	return
  2060  04B6                     __end_of_set_brigthness:
  2061                           
  2062                           	psect	text4
  2063  0776                     __ptext4:	
  2064 ;; *************** function _rtc_display *****************
  2065 ;; Defined at:
  2066 ;;		line 45 in file "main.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  date            1    wreg     PTR struct Date
  2069 ;;		 -> main@date(6), 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  date            1   10[BANK0 ] PTR struct Date
  2072 ;;		 -> main@date(6), 
  2073 ;;  segments        4    4[BANK0 ] unsigned char [4]
  2074 ;;  sec             1    9[BANK0 ] unsigned char 
  2075 ;;  min             1    8[BANK0 ] unsigned char 
  2076 ;;  hour            1    0        unsigned char 
  2077 ;;  day             1    0        unsigned char 
  2078 ;;  month           1    0        unsigned char 
  2079 ;;  year            1    0        unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2089 ;;      Params:         0       0       0       0       0       0
  2090 ;;      Locals:         0      11       0       0       0       0
  2091 ;;      Temps:          3       0       0       0       0       0
  2092 ;;      Totals:         3      11       0       0       0       0
  2093 ;;Total ram usage:       14 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    3
  2096 ;; This function calls:
  2097 ;;		___awdiv
  2098 ;;		___awmod
  2099 ;;		_encode_dig
  2100 ;;		_set_segments
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _rtc_display
  2108  0776                     _rtc_display:
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2112                           ;rtc_display@date stored from wreg
  2113  0776  0020               	movlb	0	; select bank0
  2114  0777  00AA               	movwf	rtc_display@date
  2115  0778                     l1517:
  2116                           
  2117                           ;main.c: 46: uint8_t segments[] = {0xff, 0xff, 0xff, 0xff};
  2118  0778  0840               	movf	rtc_display@F2393+3,w
  2119  0779  00A7               	movwf	rtc_display@segments+3
  2120  077A  083F               	movf	rtc_display@F2393+2,w
  2121  077B  00A6               	movwf	rtc_display@segments+2
  2122  077C  083E               	movf	rtc_display@F2393+1,w
  2123  077D  00A5               	movwf	rtc_display@segments+1
  2124  077E  083D               	movf	rtc_display@F2393,w
  2125  077F  00A4               	movwf	rtc_display@segments
  2126  0780                     l1519:
  2127  0780                     l1521:
  2128  0780                     l1523:
  2129  0780                     l1525:
  2130  0780                     l1527:
  2131                           
  2132                           ;main.c: 52: uint8_t min = date->min;
  2133  0780  082A               	movf	rtc_display@date,w
  2134  0781  0086               	movwf	6
  2135  0782  0187               	clrf	7
  2136  0783  3F44               	moviw [4]fsr1
  2137  0784  00A8               	movwf	rtc_display@min
  2138  0785                     l1529:
  2139                           
  2140                           ;main.c: 53: uint8_t sec = date->sec;
  2141  0785  082A               	movf	rtc_display@date,w
  2142  0786  0086               	movwf	6
  2143  0787  0187               	clrf	7
  2144  0788  3F45               	moviw [5]fsr1
  2145  0789  00A9               	movwf	rtc_display@sec
  2146  078A                     l1531:
  2147                           
  2148                           ;main.c: 55: segments[0] = encode_dig(min / 10);
  2149  078A  300A               	movlw	10
  2150  078B  00F0               	movwf	___awdiv@divisor
  2151  078C  3000               	movlw	0
  2152  078D  00F1               	movwf	___awdiv@divisor+1
  2153  078E  0828               	movf	rtc_display@min,w
  2154  078F  00FA               	movwf	??_rtc_display
  2155  0790  01FB               	clrf	??_rtc_display+1
  2156  0791  087A               	movf	??_rtc_display,w
  2157  0792  00F2               	movwf	___awdiv@dividend
  2158  0793  087B               	movf	??_rtc_display+1,w
  2159  0794  00F3               	movwf	___awdiv@dividend+1
  2160  0795  3186  26B7  3187   	fcall	___awdiv
  2161  0798  0870               	movf	?___awdiv,w
  2162  0799  3184  2441  3187   	fcall	_encode_dig
  2163  079C  00FC               	movwf	??_rtc_display+2
  2164  079D  087C               	movf	??_rtc_display+2,w
  2165  079E  0020               	movlb	0	; select bank0
  2166  079F  00A4               	movwf	rtc_display@segments
  2167  07A0                     l1533:
  2168                           
  2169                           ;main.c: 56: segments[1] = encode_dig(min % 10);
  2170  07A0  300A               	movlw	10
  2171  07A1  00F0               	movwf	___awmod@divisor
  2172  07A2  3000               	movlw	0
  2173  07A3  00F1               	movwf	___awmod@divisor+1
  2174  07A4  0828               	movf	rtc_display@min,w
  2175  07A5  00FA               	movwf	??_rtc_display
  2176  07A6  01FB               	clrf	??_rtc_display+1
  2177  07A7  087A               	movf	??_rtc_display,w
  2178  07A8  00F2               	movwf	___awmod@dividend
  2179  07A9  087B               	movf	??_rtc_display+1,w
  2180  07AA  00F3               	movwf	___awmod@dividend+1
  2181  07AB  3186  2664  3187   	fcall	___awmod
  2182  07AE  0870               	movf	?___awmod,w
  2183  07AF  3184  2441  3187   	fcall	_encode_dig
  2184  07B2  00FC               	movwf	??_rtc_display+2
  2185  07B3  087C               	movf	??_rtc_display+2,w
  2186  07B4  0020               	movlb	0	; select bank0
  2187  07B5  00A5               	movwf	rtc_display@segments+1
  2188  07B6                     l1535:
  2189                           
  2190                           ;main.c: 57: segments[2] = encode_dig(sec / 10);
  2191  07B6  300A               	movlw	10
  2192  07B7  00F0               	movwf	___awdiv@divisor
  2193  07B8  3000               	movlw	0
  2194  07B9  00F1               	movwf	___awdiv@divisor+1
  2195  07BA  0829               	movf	rtc_display@sec,w
  2196  07BB  00FA               	movwf	??_rtc_display
  2197  07BC  01FB               	clrf	??_rtc_display+1
  2198  07BD  087A               	movf	??_rtc_display,w
  2199  07BE  00F2               	movwf	___awdiv@dividend
  2200  07BF  087B               	movf	??_rtc_display+1,w
  2201  07C0  00F3               	movwf	___awdiv@dividend+1
  2202  07C1  3186  26B7  3187   	fcall	___awdiv
  2203  07C4  0870               	movf	?___awdiv,w
  2204  07C5  3184  2441  3187   	fcall	_encode_dig
  2205  07C8  00FC               	movwf	??_rtc_display+2
  2206  07C9  087C               	movf	??_rtc_display+2,w
  2207  07CA  0020               	movlb	0	; select bank0
  2208  07CB  00A6               	movwf	rtc_display@segments+2
  2209  07CC                     l1537:
  2210                           
  2211                           ;main.c: 58: segments[3] = encode_dig(sec % 10);
  2212  07CC  300A               	movlw	10
  2213  07CD  00F0               	movwf	___awmod@divisor
  2214  07CE  3000               	movlw	0
  2215  07CF  00F1               	movwf	___awmod@divisor+1
  2216  07D0  0829               	movf	rtc_display@sec,w
  2217  07D1  00FA               	movwf	??_rtc_display
  2218  07D2  01FB               	clrf	??_rtc_display+1
  2219  07D3  087A               	movf	??_rtc_display,w
  2220  07D4  00F2               	movwf	___awmod@dividend
  2221  07D5  087B               	movf	??_rtc_display+1,w
  2222  07D6  00F3               	movwf	___awmod@dividend+1
  2223  07D7  3186  2664  3187   	fcall	___awmod
  2224  07DA  0870               	movf	?___awmod,w
  2225  07DB  3184  2441  3187   	fcall	_encode_dig
  2226  07DE  00FC               	movwf	??_rtc_display+2
  2227  07DF  087C               	movf	??_rtc_display+2,w
  2228  07E0  0020               	movlb	0	; select bank0
  2229  07E1  00A7               	movwf	rtc_display@segments+3
  2230  07E2                     l1539:
  2231                           
  2232                           ;main.c: 60: set_segments(segments, 4, 0);
  2233  07E2  3004               	movlw	4
  2234  07E3  00FA               	movwf	??_rtc_display
  2235  07E4  087A               	movf	??_rtc_display,w
  2236  07E5  00F5               	movwf	set_segments@length
  2237  07E6  01F6               	clrf	set_segments@pos
  2238  07E7  3024               	movlw	(low (rtc_display@segments| 0))& (0+255)
  2239  07E8  3185  255D  3187   	fcall	_set_segments
  2240  07EB                     l94:
  2241  07EB  0008               	return
  2242  07EC                     __end_of_rtc_display:
  2243                           
  2244                           	psect	text5
  2245  055D                     __ptext5:	
  2246 ;; *************** function _set_segments *****************
  2247 ;; Defined at:
  2248 ;;		line 105 in file "TM1637.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  segments        1    wreg     PTR const unsigned char 
  2251 ;;		 -> clear@data(4), rtc_display@segments(4), 
  2252 ;;  length          1    5[COMMON] unsigned char 
  2253 ;;  pos             1    6[COMMON] unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  segments        1    8[COMMON] PTR const unsigned char 
  2256 ;;		 -> clear@data(4), rtc_display@segments(4), 
  2257 ;;  k               1    9[COMMON] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2267 ;;      Params:         2       0       0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0       0
  2270 ;;      Totals:         5       0       0       0       0       0
  2271 ;;Total ram usage:        5 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    2
  2274 ;; This function calls:
  2275 ;;		_start
  2276 ;;		_stop
  2277 ;;		_write_data
  2278 ;; This function is called by:
  2279 ;;		_rtc_display
  2280 ;;		_clear
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _set_segments
  2286  055D                     _set_segments:
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2290                           ;set_segments@segments stored from wreg
  2291  055D  00F8               	movwf	set_segments@segments
  2292  055E                     l1451:
  2293                           
  2294                           ;TM1637.c: 108: start();
  2295  055E  3184  2449  3185   	fcall	_start
  2296  0561                     l1453:
  2297                           
  2298                           ;TM1637.c: 109: write_data(0x40);
  2299  0561  3040               	movlw	64
  2300  0562  3185  2597  3185   	fcall	_write_data
  2301  0565                     l1455:
  2302                           
  2303                           ;TM1637.c: 110: stop();
  2304  0565  3184  2452  3185   	fcall	_stop
  2305  0568                     l1457:
  2306                           
  2307                           ;TM1637.c: 113: start();
  2308  0568  3184  2449  3185   	fcall	_start
  2309  056B                     l1459:
  2310                           
  2311                           ;TM1637.c: 114: write_data(0xC0 + (pos & 0x03));
  2312  056B  0876               	movf	set_segments@pos,w
  2313  056C  3903               	andlw	3
  2314  056D  3EC0               	addlw	192
  2315  056E  3185  2597  3185   	fcall	_write_data
  2316  0571                     l1461:
  2317                           
  2318                           ;TM1637.c: 117: for(uint8_t k = 0; k < length; k++){
  2319  0571  01F9               	clrf	set_segments@k
  2320  0572  2D81               	goto	l1467
  2321  0573                     l1463:
  2322                           
  2323                           ;TM1637.c: 118: write_data(segments[k]);
  2324  0573  0879               	movf	set_segments@k,w
  2325  0574  0778               	addwf	set_segments@segments,w
  2326  0575  00F7               	movwf	??_set_segments
  2327  0576  0877               	movf	??_set_segments,w
  2328  0577  0086               	movwf	6
  2329  0578  0187               	clrf	7
  2330  0579  0801               	movf	1,w
  2331  057A  3185  2597  3185   	fcall	_write_data
  2332  057D                     l1465:
  2333  057D  3001               	movlw	1
  2334  057E  00F7               	movwf	??_set_segments
  2335  057F  0877               	movf	??_set_segments,w
  2336  0580  07F9               	addwf	set_segments@k,f
  2337  0581                     l1467:
  2338  0581  0875               	movf	set_segments@length,w
  2339  0582  0279               	subwf	set_segments@k,w
  2340  0583  1C03               	skipc
  2341  0584  2D86               	goto	u711
  2342  0585  2D87               	goto	u710
  2343  0586                     u711:
  2344  0586  2D73               	goto	l1463
  2345  0587                     u710:
  2346  0587                     l1469:
  2347                           
  2348                           ;TM1637.c: 119: };TM1637.c: 121: stop();
  2349  0587  3184  2452  3185   	fcall	_stop
  2350                           
  2351                           ;TM1637.c: 124: start();
  2352  058A  3184  2449  3185   	fcall	_start
  2353  058D                     l1471:
  2354                           
  2355                           ;TM1637.c: 125: write_data(0x80 + (m_brightness & 0x0f));
  2356  058D  087D               	movf	_m_brightness,w
  2357  058E  390F               	andlw	15
  2358  058F  3E80               	addlw	128
  2359  0590  3185  2597  3185   	fcall	_write_data
  2360  0593                     l1473:
  2361                           
  2362                           ;TM1637.c: 126: stop();
  2363  0593  3184  2452  3185   	fcall	_stop
  2364  0596                     l240:
  2365  0596  0008               	return
  2366  0597                     __end_of_set_segments:
  2367                           
  2368                           	psect	text6
  2369  0597                     __ptext6:	
  2370 ;; *************** function _write_data *****************
  2371 ;; Defined at:
  2372 ;;		line 56 in file "TM1637.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  b               1    wreg     unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  b               1    1[COMMON] unsigned char 
  2377 ;;  i               1    4[COMMON] unsigned char 
  2378 ;;  data            1    3[COMMON] unsigned char 
  2379 ;;  ack             1    2[COMMON] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      unsigned char 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2389 ;;      Params:         0       0       0       0       0       0
  2390 ;;      Locals:         4       0       0       0       0       0
  2391 ;;      Temps:          1       0       0       0       0       0
  2392 ;;      Totals:         5       0       0       0       0       0
  2393 ;;Total ram usage:        5 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		_bit_delay
  2398 ;; This function is called by:
  2399 ;;		_set_segments
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _write_data
  2405  0597                     _write_data:
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  2409                           ;write_data@b stored from wreg
  2410  0597  00F1               	movwf	write_data@b
  2411  0598                     l1307:
  2412                           
  2413                           ;TM1637.c: 57: uint8_t data = b;
  2414  0598  0871               	movf	write_data@b,w
  2415  0599  00F0               	movwf	??_write_data
  2416  059A  0870               	movf	??_write_data,w
  2417  059B  00F3               	movwf	write_data@data
  2418  059C                     l1309:
  2419  059C  0021               	movlb	1	; select bank1
  2420  059D  100C               	bcf	12,0	;volatile
  2421  059E                     l1311:
  2422                           
  2423                           ;TM1637.c: 60: for(uint8_t i = 0; i < 8; i++){
  2424  059E  01F4               	clrf	write_data@i
  2425  059F                     l204:	
  2426                           ;TM1637.c: 61: do { LATAbits.LATA0 = 0; } while(0);
  2427                           
  2428  059F  0022               	movlb	2	; select bank2
  2429  05A0  100C               	bcf	12,0	;volatile
  2430  05A1                     l205:
  2431                           
  2432                           ;TM1637.c: 63: if(data & 0x01){
  2433  05A1  1C73               	btfss	write_data@data,0
  2434  05A2  2DA4               	goto	u481
  2435  05A3  2DA5               	goto	u480
  2436  05A4                     u481:
  2437  05A4  2DA7               	goto	l210
  2438  05A5                     u480:
  2439  05A5                     l207:	
  2440                           ;TM1637.c: 64: do { LATAbits.LATA3 = 1; } while(0);
  2441                           
  2442  05A5  158C               	bsf	12,3	;volatile
  2443  05A6  2DA8               	goto	l212
  2444  05A7                     l210:	
  2445                           ;TM1637.c: 66: do { LATAbits.LATA3 = 0; } while(0);
  2446                           
  2447  05A7  118C               	bcf	12,3	;volatile
  2448  05A8                     l212:	
  2449                           ;TM1637.c: 67: };TM1637.c: 69: do { LATAbits.LATA0 = 1; } while(0);
  2450                           
  2451  05A8  140C               	bsf	12,0	;volatile
  2452  05A9                     l1317:
  2453                           
  2454                           ;TM1637.c: 71: data = data >> 1;
  2455  05A9  3673               	lsrf	write_data@data,w
  2456  05AA  00F0               	movwf	??_write_data
  2457  05AB  0870               	movf	??_write_data,w
  2458  05AC  00F3               	movwf	write_data@data
  2459  05AD  3001               	movlw	1
  2460  05AE  00F0               	movwf	??_write_data
  2461  05AF  0870               	movf	??_write_data,w
  2462  05B0  07F4               	addwf	write_data@i,f
  2463  05B1                     l1319:
  2464  05B1  3008               	movlw	8
  2465  05B2  0274               	subwf	write_data@i,w
  2466  05B3  1C03               	skipc
  2467  05B4  2DB6               	goto	u491
  2468  05B5  2DB7               	goto	u490
  2469  05B6                     u491:
  2470  05B6  2D9F               	goto	l204
  2471  05B7                     u490:
  2472  05B7                     l214:	
  2473                           ;TM1637.c: 72: };TM1637.c: 75: do { LATAbits.LATA0 = 0; } while(0);
  2474                           
  2475  05B7  100C               	bcf	12,0	;volatile
  2476  05B8                     l216:	
  2477                           ;TM1637.c: 76: do { LATAbits.LATA3 = 1; } while(0);
  2478                           
  2479  05B8  158C               	bsf	12,3	;volatile
  2480  05B9                     l218:	
  2481                           ;TM1637.c: 79: do { LATAbits.LATA0 = 1; } while(0);
  2482                           
  2483  05B9  140C               	bsf	12,0	;volatile
  2484  05BA                     l220:	
  2485                           ;TM1637.c: 81: do { TRISAbits.TRISA3 = 1; } while(0);
  2486                           
  2487  05BA  0021               	movlb	1	; select bank1
  2488  05BB  158C               	bsf	12,3	;volatile
  2489  05BC                     l1321:
  2490                           
  2491                           ;TM1637.c: 82: bit_delay();
  2492  05BC  3184  2428  3185   	fcall	_bit_delay
  2493  05BF                     l1323:
  2494                           
  2495                           ;TM1637.c: 84: uint8_t ack = PORTAbits.RA3;
  2496  05BF  3000               	movlw	0
  2497  05C0  0020               	movlb	0	; select bank0
  2498  05C1  198C               	btfsc	12,3	;volatile
  2499  05C2  3001               	movlw	1
  2500  05C3  00F2               	movwf	write_data@ack
  2501  05C4                     l1325:
  2502                           
  2503                           ;TM1637.c: 85: if(ack == 0){
  2504  05C4  0872               	movf	write_data@ack,w
  2505  05C5  1D03               	btfss	3,2
  2506  05C6  2DC8               	goto	u501
  2507  05C7  2DC9               	goto	u500
  2508  05C8                     u501:
  2509  05C8  2DCD               	goto	l1327
  2510  05C9                     u500:
  2511  05C9                     l223:	
  2512                           ;TM1637.c: 86: do { TRISAbits.TRISA3 = 0; } while(0);
  2513                           
  2514  05C9  0021               	movlb	1	; select bank1
  2515  05CA  118C               	bcf	12,3	;volatile
  2516  05CB                     l225:	
  2517                           ;TM1637.c: 87: do { LATAbits.LATA3 = 0; } while(0);
  2518                           
  2519  05CB  0022               	movlb	2	; select bank2
  2520  05CC  118C               	bcf	12,3	;volatile
  2521  05CD                     l1327:
  2522                           
  2523                           ;TM1637.c: 88: };TM1637.c: 90: bit_delay();
  2524  05CD  3184  2428  3185   	fcall	_bit_delay
  2525  05D0                     l1329:
  2526  05D0  0021               	movlb	1	; select bank1
  2527  05D1  118C               	bcf	12,3	;volatile
  2528  05D2                     l228:
  2529                           
  2530                           ;TM1637.c: 92: bit_delay();
  2531  05D2  3184  2428  3185   	fcall	_bit_delay
  2532  05D5                     l229:
  2533  05D5  0008               	return
  2534  05D6                     __end_of_write_data:
  2535                           
  2536                           	psect	text7
  2537  0428                     __ptext7:	
  2538 ;; *************** function _bit_delay *****************
  2539 ;; Defined at:
  2540 ;;		line 30 in file "TM1637.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		None
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2554 ;;      Params:         0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_write_data
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _bit_delay
  2569  0428                     _bit_delay:
  2570  0428                     l167:	
  2571                           ;incstack = 0
  2572                           ; Regs used in _bit_delay: []
  2573                           
  2574  0428  0008               	return
  2575  0429                     __end_of_bit_delay:
  2576                           
  2577                           	psect	text8
  2578  0452                     __ptext8:	
  2579 ;; *************** function _stop *****************
  2580 ;; Defined at:
  2581 ;;		line 45 in file "TM1637.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		None
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2595 ;;      Params:         0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_set_segments
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function _stop
  2610  0452                     _stop:
  2611  0452                     l185:	
  2612                           ;incstack = 0
  2613                           ; Regs used in _stop: []
  2614                           ;TM1637.c: 46: do { TRISAbits.TRISA3 = 0; } while(0);
  2615                           
  2616  0452  0021               	movlb	1	; select bank1
  2617  0453  118C               	bcf	12,3	;volatile
  2618  0454                     l187:	
  2619                           ;TM1637.c: 47: do { TRISAbits.TRISA0 = 0; } while(0);
  2620                           
  2621  0454  100C               	bcf	12,0	;volatile
  2622  0455                     l189:	
  2623                           ;TM1637.c: 49: do { LATAbits.LATA0 = 0; } while(0);
  2624                           
  2625  0455  0022               	movlb	2	; select bank2
  2626  0456  100C               	bcf	12,0	;volatile
  2627  0457                     l191:	
  2628                           ;TM1637.c: 50: do { LATAbits.LATA3 = 0; } while(0);
  2629                           
  2630  0457  118C               	bcf	12,3	;volatile
  2631  0458                     l193:	
  2632                           ;TM1637.c: 52: do { LATAbits.LATA0 = 1; } while(0);
  2633                           
  2634  0458  140C               	bsf	12,0	;volatile
  2635  0459                     l195:	
  2636                           ;TM1637.c: 53: do { LATAbits.LATA3 = 1; } while(0);
  2637                           
  2638  0459  158C               	bsf	12,3	;volatile
  2639  045A                     l197:
  2640  045A  0008               	return
  2641  045B                     __end_of_stop:
  2642                           
  2643                           	psect	text9
  2644  0449                     __ptext9:	
  2645 ;; *************** function _start *****************
  2646 ;; Defined at:
  2647 ;;		line 34 in file "TM1637.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		None
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2661 ;;      Params:         0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_set_segments
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _start
  2676  0449                     _start:
  2677  0449                     l170:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _start: []
  2680                           ;TM1637.c: 35: do { TRISAbits.TRISA3 = 0; } while(0);
  2681                           
  2682  0449  0021               	movlb	1	; select bank1
  2683  044A  118C               	bcf	12,3	;volatile
  2684  044B                     l172:	
  2685                           ;TM1637.c: 36: do { TRISAbits.TRISA0 = 0; } while(0);
  2686                           
  2687  044B  100C               	bcf	12,0	;volatile
  2688  044C                     l174:	
  2689                           ;TM1637.c: 38: do { LATAbits.LATA3 = 1; } while(0);
  2690                           
  2691  044C  0022               	movlb	2	; select bank2
  2692  044D  158C               	bsf	12,3	;volatile
  2693  044E                     l176:	
  2694                           ;TM1637.c: 39: do { LATAbits.LATA0 = 1; } while(0);
  2695                           
  2696  044E  140C               	bsf	12,0	;volatile
  2697  044F                     l178:	
  2698                           ;TM1637.c: 41: do { LATAbits.LATA3 = 0; } while(0);
  2699                           
  2700  044F  118C               	bcf	12,3	;volatile
  2701  0450                     l180:	
  2702                           ;TM1637.c: 42: do { LATAbits.LATA0 = 0; } while(0);
  2703                           
  2704  0450  100C               	bcf	12,0	;volatile
  2705  0451                     l182:
  2706  0451  0008               	return
  2707  0452                     __end_of_start:
  2708                           
  2709                           	psect	text10
  2710  0441                     __ptext10:	
  2711 ;; *************** function _encode_dig *****************
  2712 ;; Defined at:
  2713 ;;		line 134 in file "TM1637.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  digit           1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  digit           1    0[COMMON] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      unsigned char 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2727 ;;      Params:         0       0       0       0       0       0
  2728 ;;      Locals:         1       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0
  2730 ;;      Totals:         1       0       0       0       0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_rtc_display
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _encode_dig
  2742  0441                     _encode_dig:
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _encode_dig: [wreg+fsr1l+fsr1h+status,2+status,0]
  2746                           ;encode_dig@digit stored from wreg
  2747  0441  00F0               	movwf	encode_dig@digit
  2748  0442                     l1447:
  2749                           
  2750                           ;TM1637.c: 135: return segdata[digit & 0x0f];
  2751  0442  0870               	movf	encode_dig@digit,w
  2752  0443  390F               	andlw	15
  2753  0444  3E33               	addlw	(low (_segdata| 0))& (0+255)
  2754  0445  0086               	movwf	6
  2755  0446  0187               	clrf	7
  2756  0447  0801               	movf	1,w
  2757  0448                     l248:
  2758  0448  0008               	return
  2759  0449                     __end_of_encode_dig:
  2760                           
  2761                           	psect	text11
  2762  0664                     __ptext11:	
  2763 ;; *************** function ___awmod *****************
  2764 ;; Defined at:
  2765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  divisor         2    0[COMMON] int 
  2768 ;;  dividend        2    2[COMMON] int 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  sign            1    6[COMMON] unsigned char 
  2771 ;;  counter         1    5[COMMON] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  2    0[COMMON] int 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2781 ;;      Params:         4       0       0       0       0       0
  2782 ;;      Locals:         2       0       0       0       0       0
  2783 ;;      Temps:          1       0       0       0       0       0
  2784 ;;      Totals:         7       0       0       0       0       0
  2785 ;;Total ram usage:        7 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_rtc_display
  2791 ;;		_decimal_2_bcd
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function ___awmod
  2797  0664                     ___awmod:
  2798  0664                     l1381:	
  2799                           ;incstack = 0
  2800                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2801                           
  2802  0664  01F6               	clrf	___awmod@sign
  2803  0665                     l1383:
  2804  0665  1FF3               	btfss	___awmod@dividend+1,7
  2805  0666  2E68               	goto	u621
  2806  0667  2E69               	goto	u620
  2807  0668                     u621:
  2808  0668  2E70               	goto	l1389
  2809  0669                     u620:
  2810  0669                     l1385:
  2811  0669  09F2               	comf	___awmod@dividend,f
  2812  066A  09F3               	comf	___awmod@dividend+1,f
  2813  066B  0AF2               	incf	___awmod@dividend,f
  2814  066C  1903               	skipnz
  2815  066D  0AF3               	incf	___awmod@dividend+1,f
  2816  066E                     l1387:
  2817  066E  01F6               	clrf	___awmod@sign
  2818  066F  0AF6               	incf	___awmod@sign,f
  2819  0670                     l1389:
  2820  0670  1FF1               	btfss	___awmod@divisor+1,7
  2821  0671  2E73               	goto	u631
  2822  0672  2E74               	goto	u630
  2823  0673                     u631:
  2824  0673  2E79               	goto	l1393
  2825  0674                     u630:
  2826  0674                     l1391:
  2827  0674  09F0               	comf	___awmod@divisor,f
  2828  0675  09F1               	comf	___awmod@divisor+1,f
  2829  0676  0AF0               	incf	___awmod@divisor,f
  2830  0677  1903               	skipnz
  2831  0678  0AF1               	incf	___awmod@divisor+1,f
  2832  0679                     l1393:
  2833  0679  0870               	movf	___awmod@divisor,w
  2834  067A  0471               	iorwf	___awmod@divisor+1,w
  2835  067B  1903               	btfsc	3,2
  2836  067C  2E7E               	goto	u641
  2837  067D  2E7F               	goto	u640
  2838  067E                     u641:
  2839  067E  2EA8               	goto	l1411
  2840  067F                     u640:
  2841  067F                     l1395:
  2842  067F  01F5               	clrf	___awmod@counter
  2843  0680  0AF5               	incf	___awmod@counter,f
  2844  0681  2E8B               	goto	l1401
  2845  0682                     l1397:
  2846  0682  3001               	movlw	1
  2847  0683                     u655:
  2848  0683  35F0               	lslf	___awmod@divisor,f
  2849  0684  0DF1               	rlf	___awmod@divisor+1,f
  2850  0685  0B89               	decfsz	9,f
  2851  0686  2E83               	goto	u655
  2852  0687                     l1399:
  2853  0687  3001               	movlw	1
  2854  0688  00F4               	movwf	??___awmod
  2855  0689  0874               	movf	??___awmod,w
  2856  068A  07F5               	addwf	___awmod@counter,f
  2857  068B                     l1401:
  2858  068B  1FF1               	btfss	___awmod@divisor+1,7
  2859  068C  2E8E               	goto	u661
  2860  068D  2E8F               	goto	u660
  2861  068E                     u661:
  2862  068E  2E82               	goto	l1397
  2863  068F                     u660:
  2864  068F                     l1403:
  2865  068F  0871               	movf	___awmod@divisor+1,w
  2866  0690  0273               	subwf	___awmod@dividend+1,w
  2867  0691  1D03               	skipz
  2868  0692  2E95               	goto	u675
  2869  0693  0870               	movf	___awmod@divisor,w
  2870  0694  0272               	subwf	___awmod@dividend,w
  2871  0695                     u675:
  2872  0695  1C03               	skipc
  2873  0696  2E98               	goto	u671
  2874  0697  2E99               	goto	u670
  2875  0698                     u671:
  2876  0698  2E9D               	goto	l1407
  2877  0699                     u670:
  2878  0699                     l1405:
  2879  0699  0870               	movf	___awmod@divisor,w
  2880  069A  02F2               	subwf	___awmod@dividend,f
  2881  069B  0871               	movf	___awmod@divisor+1,w
  2882  069C  3BF3               	subwfb	___awmod@dividend+1,f
  2883  069D                     l1407:
  2884  069D  3001               	movlw	1
  2885  069E                     u685:
  2886  069E  36F1               	lsrf	___awmod@divisor+1,f
  2887  069F  0CF0               	rrf	___awmod@divisor,f
  2888  06A0  0B89               	decfsz	9,f
  2889  06A1  2E9E               	goto	u685
  2890  06A2                     l1409:
  2891  06A2  3001               	movlw	1
  2892  06A3  02F5               	subwf	___awmod@counter,f
  2893  06A4  1D03               	btfss	3,2
  2894  06A5  2EA7               	goto	u691
  2895  06A6  2EA8               	goto	u690
  2896  06A7                     u691:
  2897  06A7  2E8F               	goto	l1403
  2898  06A8                     u690:
  2899  06A8                     l1411:
  2900  06A8  0876               	movf	___awmod@sign,w
  2901  06A9  1903               	btfsc	3,2
  2902  06AA  2EAC               	goto	u701
  2903  06AB  2EAD               	goto	u700
  2904  06AC                     u701:
  2905  06AC  2EB2               	goto	l1415
  2906  06AD                     u700:
  2907  06AD                     l1413:
  2908  06AD  09F2               	comf	___awmod@dividend,f
  2909  06AE  09F3               	comf	___awmod@dividend+1,f
  2910  06AF  0AF2               	incf	___awmod@dividend,f
  2911  06B0  1903               	skipnz
  2912  06B1  0AF3               	incf	___awmod@dividend+1,f
  2913  06B2                     l1415:
  2914  06B2  0873               	movf	___awmod@dividend+1,w
  2915  06B3  00F1               	movwf	?___awmod+1
  2916  06B4  0872               	movf	___awmod@dividend,w
  2917  06B5  00F0               	movwf	?___awmod
  2918  06B6                     l591:
  2919  06B6  0008               	return
  2920  06B7                     __end_of___awmod:
  2921                           
  2922                           	psect	text12
  2923  06B7                     __ptext12:	
  2924 ;; *************** function ___awdiv *****************
  2925 ;; Defined at:
  2926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  divisor         2    0[COMMON] int 
  2929 ;;  dividend        2    2[COMMON] int 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  quotient        2    7[COMMON] int 
  2932 ;;  sign            1    6[COMMON] unsigned char 
  2933 ;;  counter         1    5[COMMON] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    0[COMMON] int 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2943 ;;      Params:         4       0       0       0       0       0
  2944 ;;      Locals:         4       0       0       0       0       0
  2945 ;;      Temps:          1       0       0       0       0       0
  2946 ;;      Totals:         9       0       0       0       0       0
  2947 ;;Total ram usage:        9 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_rtc_display
  2953 ;;		_decimal_2_bcd
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function ___awdiv
  2959  06B7                     ___awdiv:
  2960  06B7                     l1337:	
  2961                           ;incstack = 0
  2962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2963                           
  2964  06B7  01F6               	clrf	___awdiv@sign
  2965  06B8                     l1339:
  2966  06B8  1FF1               	btfss	___awdiv@divisor+1,7
  2967  06B9  2EBB               	goto	u521
  2968  06BA  2EBC               	goto	u520
  2969  06BB                     u521:
  2970  06BB  2EC3               	goto	l1345
  2971  06BC                     u520:
  2972  06BC                     l1341:
  2973  06BC  09F0               	comf	___awdiv@divisor,f
  2974  06BD  09F1               	comf	___awdiv@divisor+1,f
  2975  06BE  0AF0               	incf	___awdiv@divisor,f
  2976  06BF  1903               	skipnz
  2977  06C0  0AF1               	incf	___awdiv@divisor+1,f
  2978  06C1                     l1343:
  2979  06C1  01F6               	clrf	___awdiv@sign
  2980  06C2  0AF6               	incf	___awdiv@sign,f
  2981  06C3                     l1345:
  2982  06C3  1FF3               	btfss	___awdiv@dividend+1,7
  2983  06C4  2EC6               	goto	u531
  2984  06C5  2EC7               	goto	u530
  2985  06C6                     u531:
  2986  06C6  2ED0               	goto	l1351
  2987  06C7                     u530:
  2988  06C7                     l1347:
  2989  06C7  09F2               	comf	___awdiv@dividend,f
  2990  06C8  09F3               	comf	___awdiv@dividend+1,f
  2991  06C9  0AF2               	incf	___awdiv@dividend,f
  2992  06CA  1903               	skipnz
  2993  06CB  0AF3               	incf	___awdiv@dividend+1,f
  2994  06CC                     l1349:
  2995  06CC  3001               	movlw	1
  2996  06CD  00F4               	movwf	??___awdiv
  2997  06CE  0874               	movf	??___awdiv,w
  2998  06CF  06F6               	xorwf	___awdiv@sign,f
  2999  06D0                     l1351:
  3000  06D0  01F7               	clrf	___awdiv@quotient
  3001  06D1  01F8               	clrf	___awdiv@quotient+1
  3002  06D2                     l1353:
  3003  06D2  0870               	movf	___awdiv@divisor,w
  3004  06D3  0471               	iorwf	___awdiv@divisor+1,w
  3005  06D4  1903               	btfsc	3,2
  3006  06D5  2ED7               	goto	u541
  3007  06D6  2ED8               	goto	u540
  3008  06D7                     u541:
  3009  06D7  2F07               	goto	l1373
  3010  06D8                     u540:
  3011  06D8                     l1355:
  3012  06D8  01F5               	clrf	___awdiv@counter
  3013  06D9  0AF5               	incf	___awdiv@counter,f
  3014  06DA  2EE4               	goto	l1361
  3015  06DB                     l1357:
  3016  06DB  3001               	movlw	1
  3017  06DC                     u555:
  3018  06DC  35F0               	lslf	___awdiv@divisor,f
  3019  06DD  0DF1               	rlf	___awdiv@divisor+1,f
  3020  06DE  0B89               	decfsz	9,f
  3021  06DF  2EDC               	goto	u555
  3022  06E0                     l1359:
  3023  06E0  3001               	movlw	1
  3024  06E1  00F4               	movwf	??___awdiv
  3025  06E2  0874               	movf	??___awdiv,w
  3026  06E3  07F5               	addwf	___awdiv@counter,f
  3027  06E4                     l1361:
  3028  06E4  1FF1               	btfss	___awdiv@divisor+1,7
  3029  06E5  2EE7               	goto	u561
  3030  06E6  2EE8               	goto	u560
  3031  06E7                     u561:
  3032  06E7  2EDB               	goto	l1357
  3033  06E8                     u560:
  3034  06E8                     l1363:
  3035  06E8  3001               	movlw	1
  3036  06E9                     u575:
  3037  06E9  35F7               	lslf	___awdiv@quotient,f
  3038  06EA  0DF8               	rlf	___awdiv@quotient+1,f
  3039  06EB  0B89               	decfsz	9,f
  3040  06EC  2EE9               	goto	u575
  3041  06ED  0871               	movf	___awdiv@divisor+1,w
  3042  06EE  0273               	subwf	___awdiv@dividend+1,w
  3043  06EF  1D03               	skipz
  3044  06F0  2EF3               	goto	u585
  3045  06F1  0870               	movf	___awdiv@divisor,w
  3046  06F2  0272               	subwf	___awdiv@dividend,w
  3047  06F3                     u585:
  3048  06F3  1C03               	skipc
  3049  06F4  2EF6               	goto	u581
  3050  06F5  2EF7               	goto	u580
  3051  06F6                     u581:
  3052  06F6  2EFC               	goto	l1369
  3053  06F7                     u580:
  3054  06F7                     l1365:
  3055  06F7  0870               	movf	___awdiv@divisor,w
  3056  06F8  02F2               	subwf	___awdiv@dividend,f
  3057  06F9  0871               	movf	___awdiv@divisor+1,w
  3058  06FA  3BF3               	subwfb	___awdiv@dividend+1,f
  3059  06FB                     l1367:
  3060  06FB  1477               	bsf	___awdiv@quotient,0
  3061  06FC                     l1369:
  3062  06FC  3001               	movlw	1
  3063  06FD                     u595:
  3064  06FD  36F1               	lsrf	___awdiv@divisor+1,f
  3065  06FE  0CF0               	rrf	___awdiv@divisor,f
  3066  06FF  0B89               	decfsz	9,f
  3067  0700  2EFD               	goto	u595
  3068  0701                     l1371:
  3069  0701  3001               	movlw	1
  3070  0702  02F5               	subwf	___awdiv@counter,f
  3071  0703  1D03               	btfss	3,2
  3072  0704  2F06               	goto	u601
  3073  0705  2F07               	goto	u600
  3074  0706                     u601:
  3075  0706  2EE8               	goto	l1363
  3076  0707                     u600:
  3077  0707                     l1373:
  3078  0707  0876               	movf	___awdiv@sign,w
  3079  0708  1903               	btfsc	3,2
  3080  0709  2F0B               	goto	u611
  3081  070A  2F0C               	goto	u610
  3082  070B                     u611:
  3083  070B  2F11               	goto	l1377
  3084  070C                     u610:
  3085  070C                     l1375:
  3086  070C  09F7               	comf	___awdiv@quotient,f
  3087  070D  09F8               	comf	___awdiv@quotient+1,f
  3088  070E  0AF7               	incf	___awdiv@quotient,f
  3089  070F  1903               	skipnz
  3090  0710  0AF8               	incf	___awdiv@quotient+1,f
  3091  0711                     l1377:
  3092  0711  0878               	movf	___awdiv@quotient+1,w
  3093  0712  00F1               	movwf	?___awdiv+1
  3094  0713  0877               	movf	___awdiv@quotient,w
  3095  0714  00F0               	movwf	?___awdiv
  3096  0715                     l578:
  3097  0715  0008               	return
  3098  0716                     __end_of___awdiv:
  3099                           
  3100                           	psect	text13
  3101  05D6                     __ptext13:	
  3102 ;; *************** function _read_date *****************
  3103 ;; Defined at:
  3104 ;;		line 59 in file "DS3231.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  date            1    wreg     PTR struct Date
  3107 ;;		 -> main@date(6), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  date            1   12[COMMON] PTR struct Date
  3110 ;;		 -> main@date(6), 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3120 ;;      Params:         0       0       0       0       0       0
  3121 ;;      Locals:         1       0       0       0       0       0
  3122 ;;      Temps:          1       0       0       0       0       0
  3123 ;;      Totals:         2       0       0       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    3
  3127 ;; This function calls:
  3128 ;;		_read_
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _read_date
  3136  05D6                     _read_date:
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3140                           ;read_date@date stored from wreg
  3141  05D6  00FC               	movwf	read_date@date
  3142  05D7                     l1507:
  3143                           
  3144                           ;DS3231.c: 62: date->year = read_(6);
  3145  05D7  3006               	movlw	6
  3146  05D8  3185  250D  3185   	fcall	_read_
  3147  05DB  00FB               	movwf	??_read_date
  3148  05DC  087C               	movf	read_date@date,w
  3149  05DD  0086               	movwf	6
  3150  05DE  0187               	clrf	7
  3151  05DF  087B               	movf	??_read_date,w
  3152  05E0  0081               	movwf	1
  3153                           
  3154                           ;DS3231.c: 63: date->month = read_(5);
  3155  05E1  3005               	movlw	5
  3156  05E2  3185  250D  3185   	fcall	_read_
  3157  05E5  00FB               	movwf	??_read_date
  3158  05E6  0A7C               	incf	read_date@date,w
  3159  05E7  0086               	movwf	6
  3160  05E8  0187               	clrf	7
  3161  05E9  087B               	movf	??_read_date,w
  3162  05EA  0081               	movwf	1
  3163                           
  3164                           ;DS3231.c: 64: date->day = read_(4);
  3165  05EB  3004               	movlw	4
  3166  05EC  3185  250D  3185   	fcall	_read_
  3167  05EF  00FB               	movwf	??_read_date
  3168  05F0  087C               	movf	read_date@date,w
  3169  05F1  3E02               	addlw	2
  3170  05F2  0086               	movwf	6
  3171  05F3  0187               	clrf	7
  3172  05F4  087B               	movf	??_read_date,w
  3173  05F5  0081               	movwf	1
  3174  05F6                     l1509:
  3175                           
  3176                           ;DS3231.c: 65: read_(3);
  3177  05F6  3003               	movlw	3
  3178  05F7  3185  250D  3185   	fcall	_read_
  3179  05FA                     l1511:
  3180                           
  3181                           ;DS3231.c: 66: date->hour = read_(2);
  3182  05FA  3002               	movlw	2
  3183  05FB  3185  250D  3185   	fcall	_read_
  3184  05FE  00FB               	movwf	??_read_date
  3185  05FF  087C               	movf	read_date@date,w
  3186  0600  3E03               	addlw	3
  3187  0601  0086               	movwf	6
  3188  0602  0187               	clrf	7
  3189  0603  087B               	movf	??_read_date,w
  3190  0604  0081               	movwf	1
  3191  0605                     l1513:
  3192                           
  3193                           ;DS3231.c: 67: date->min = read_(1);
  3194  0605  3001               	movlw	1
  3195  0606  3185  250D  3185   	fcall	_read_
  3196  0609  00FB               	movwf	??_read_date
  3197  060A  087C               	movf	read_date@date,w
  3198  060B  3E04               	addlw	4
  3199  060C  0086               	movwf	6
  3200  060D  0187               	clrf	7
  3201  060E  087B               	movf	??_read_date,w
  3202  060F  0081               	movwf	1
  3203  0610                     l1515:
  3204                           
  3205                           ;DS3231.c: 68: date->sec = read_(0);
  3206  0610  3000               	movlw	0
  3207  0611  3185  250D  3185   	fcall	_read_
  3208  0614  00FB               	movwf	??_read_date
  3209  0615  087C               	movf	read_date@date,w
  3210  0616  3E05               	addlw	5
  3211  0617  0086               	movwf	6
  3212  0618  0187               	clrf	7
  3213  0619  087B               	movf	??_read_date,w
  3214  061A  0081               	movwf	1
  3215  061B                     l275:
  3216  061B  0008               	return
  3217  061C                     __end_of_read_date:
  3218                           
  3219                           	psect	text14
  3220  050D                     __ptext14:	
  3221 ;; *************** function _read_ *****************
  3222 ;; Defined at:
  3223 ;;		line 44 in file "DS3231.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  address         1    wreg     unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  address         1    9[COMMON] unsigned char 
  3228 ;;  data            1   10[COMMON] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      unsigned char 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3238 ;;      Params:         0       0       0       0       0       0
  3239 ;;      Locals:         2       0       0       0       0       0
  3240 ;;      Temps:          1       0       0       0       0       0
  3241 ;;      Totals:         3       0       0       0       0       0
  3242 ;;Total ram usage:        3 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    2
  3245 ;; This function calls:
  3246 ;;		_bcd_2_decimal
  3247 ;;		_i2c_repeated_start
  3248 ;;		_i2c_start
  3249 ;;		_i2c_stop
  3250 ;;		_recv_byte
  3251 ;;		_write_byte
  3252 ;; This function is called by:
  3253 ;;		_read_date
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _read_
  3259  050D                     _read_:
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _read_: [wreg+status,2+status,0+pclath+cstack]
  3263                           ;read_@address stored from wreg
  3264  050D  00F9               	movwf	read_@address
  3265  050E                     l1479:
  3266                           
  3267                           ;DS3231.c: 45: uint8_t data;;DS3231.c: 46: i2c_start();
  3268  050E  3184  246F  3185   	fcall	_i2c_start
  3269                           
  3270                           ;DS3231.c: 47: write_byte(0xD0);
  3271  0511  30D0               	movlw	208
  3272  0512  3184  2493  3185   	fcall	_write_byte
  3273                           
  3274                           ;DS3231.c: 48: write_byte(address);
  3275  0515  0879               	movf	read_@address,w
  3276  0516  3184  2493  3185   	fcall	_write_byte
  3277                           
  3278                           ;DS3231.c: 50: i2c_repeated_start();
  3279  0519  3184  2465  3185   	fcall	_i2c_repeated_start
  3280                           
  3281                           ;DS3231.c: 52: write_byte(0xD0 | 0x01);
  3282  051C  30D1               	movlw	209
  3283  051D  3184  2493  3185   	fcall	_write_byte
  3284                           
  3285                           ;DS3231.c: 53: data = bcd_2_decimal(recv_byte(1));
  3286  0520  3001               	movlw	1
  3287  0521  3184  24F6  3185   	fcall	_recv_byte
  3288  0524  3184  24B6  3185   	fcall	_bcd_2_decimal
  3289  0527  00F8               	movwf	??_read_
  3290  0528  0878               	movf	??_read_,w
  3291  0529  00FA               	movwf	read_@data
  3292  052A                     l1481:
  3293                           
  3294                           ;DS3231.c: 54: i2c_stop();
  3295  052A  3184  243A  3185   	fcall	_i2c_stop
  3296                           
  3297                           ;DS3231.c: 56: return data;
  3298  052D  087A               	movf	read_@data,w
  3299  052E                     l272:
  3300  052E  0008               	return
  3301  052F                     __end_of_read_:
  3302                           
  3303                           	psect	text15
  3304  0493                     __ptext15:	
  3305 ;; *************** function _write_byte *****************
  3306 ;; Defined at:
  3307 ;;		line 33 in file "i2c.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  data            1    wreg     unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  data            1    0[COMMON] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3321 ;;      Params:         0       0       0       0       0       0
  3322 ;;      Locals:         1       0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0
  3324 ;;      Totals:         1       0       0       0       0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    1
  3328 ;; This function calls:
  3329 ;;		_i2c_wait
  3330 ;; This function is called by:
  3331 ;;		_write_date
  3332 ;;		_read_
  3333 ;;		_i2c_cmd
  3334 ;;		_recv_data
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _write_byte
  3340  0493                     _write_byte:
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3344                           ;write_byte@data stored from wreg
  3345  0493  00F0               	movwf	write_byte@data
  3346  0494                     l1289:
  3347                           
  3348                           ;i2c.c: 34: SSP2BUF = data;
  3349  0494  0870               	movf	write_byte@data,w
  3350  0495  0024               	movlb	4	; select bank4
  3351  0496  0099               	movwf	25	;volatile
  3352  0497                     l133:	
  3353                           ;i2c.c: 35: while(SSP2STATbits.BF);
  3354                           
  3355  0497  181C               	btfsc	28,0	;volatile
  3356  0498  2C9A               	goto	u451
  3357  0499  2C9B               	goto	u450
  3358  049A                     u451:
  3359  049A  2C97               	goto	l133
  3360  049B                     u450:
  3361  049B                     l136:
  3362  049B  1B1E               	btfsc	30,6	;volatile
  3363  049C  2C9E               	goto	u461
  3364  049D  2C9F               	goto	u460
  3365  049E                     u461:
  3366  049E  2C9B               	goto	l136
  3367  049F                     u460:
  3368  049F                     l1291:
  3369                           
  3370                           ;i2c.c: 37: i2c_wait();
  3371  049F  3184  2479  3184   	fcall	_i2c_wait
  3372  04A2                     l139:
  3373  04A2  0008               	return
  3374  04A3                     __end_of_write_byte:
  3375                           
  3376                           	psect	text16
  3377  04F6                     __ptext16:	
  3378 ;; *************** function _recv_byte *****************
  3379 ;; Defined at:
  3380 ;;		line 48 in file "i2c.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  ack             1    wreg     unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  ack             1    1[COMMON] unsigned char 
  3385 ;;  data            1    2[COMMON] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      unsigned char 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3395 ;;      Params:         0       0       0       0       0       0
  3396 ;;      Locals:         2       0       0       0       0       0
  3397 ;;      Temps:          1       0       0       0       0       0
  3398 ;;      Totals:         3       0       0       0       0       0
  3399 ;;Total ram usage:        3 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		_i2c_wait
  3404 ;; This function is called by:
  3405 ;;		_read_
  3406 ;;		_recv_data
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _recv_byte
  3412  04F6                     _recv_byte:
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _recv_byte: [wreg+status,2+status,0+pclath+cstack]
  3416                           ;recv_byte@ack stored from wreg
  3417  04F6  00F1               	movwf	recv_byte@ack
  3418  04F7                     l1293:
  3419                           
  3420                           ;i2c.c: 49: uint8_t data;;i2c.c: 51: SSP2CON2bits.ACKDT = ack;
  3421  04F7  0C71               	rrf	recv_byte@ack,w
  3422  04F8  0024               	movlb	4	; select bank4
  3423  04F9  1C03               	skipc
  3424  04FA  129E               	bcf	30,5	;volatile
  3425  04FB  1803               	skipnc
  3426  04FC  169E               	bsf	30,5	;volatile
  3427  04FD                     l1295:
  3428                           
  3429                           ;i2c.c: 52: SSP2CON2bits.RCEN = 1;
  3430  04FD  159E               	bsf	30,3	;volatile
  3431  04FE                     l145:	
  3432                           ;i2c.c: 53: while(!SSP2STATbits.BF);
  3433                           
  3434  04FE  1C1C               	btfss	28,0	;volatile
  3435  04FF  2D01               	goto	u471
  3436  0500  2D02               	goto	u470
  3437  0501                     u471:
  3438  0501  2CFE               	goto	l145
  3439  0502                     u470:
  3440  0502                     l147:
  3441                           
  3442                           ;i2c.c: 54: SSP2CON2bits.ACKEN = 1;
  3443  0502  161E               	bsf	30,4	;volatile
  3444  0503                     l1297:
  3445                           
  3446                           ;i2c.c: 55: data = SSP2BUF;
  3447  0503  0819               	movf	25,w	;volatile
  3448  0504  00F0               	movwf	??_recv_byte
  3449  0505  0870               	movf	??_recv_byte,w
  3450  0506  00F2               	movwf	recv_byte@data
  3451  0507                     l1299:
  3452                           
  3453                           ;i2c.c: 56: SSP2CON1bits.SSPOV = 0;
  3454  0507  131D               	bcf	29,6	;volatile
  3455  0508                     l1301:
  3456                           
  3457                           ;i2c.c: 57: i2c_wait();
  3458  0508  3184  2479  3184   	fcall	_i2c_wait
  3459  050B                     l1303:
  3460                           
  3461                           ;i2c.c: 59: return data;
  3462  050B  0872               	movf	recv_byte@data,w
  3463  050C                     l148:
  3464  050C  0008               	return
  3465  050D                     __end_of_recv_byte:
  3466                           
  3467                           	psect	text17
  3468  043A                     __ptext17:	
  3469 ;; *************** function _i2c_stop *****************
  3470 ;; Defined at:
  3471 ;;		line 22 in file "i2c.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		None
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3485 ;;      Params:         0       0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_write_date
  3495 ;;		_read_
  3496 ;;		_i2c_cmd
  3497 ;;		_recv_data
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _i2c_stop
  3503  043A                     _i2c_stop:
  3504  043A                     l1283:	
  3505                           ;incstack = 0
  3506                           ; Regs used in _i2c_stop: []
  3507                           
  3508                           
  3509                           ;i2c.c: 23: SSP2CON2bits.PEN = 1;
  3510  043A  0024               	movlb	4	; select bank4
  3511  043B  151E               	bsf	30,2	;volatile
  3512  043C                     l121:	
  3513                           ;i2c.c: 24: while(SSP2CON2bits.PEN);
  3514                           
  3515  043C  191E               	btfsc	30,2	;volatile
  3516  043D  2C3F               	goto	u431
  3517  043E  2C40               	goto	u430
  3518  043F                     u431:
  3519  043F  2C3C               	goto	l121
  3520  0440                     u430:
  3521  0440                     l124:
  3522  0440  0008               	return
  3523  0441                     __end_of_i2c_stop:
  3524                           
  3525                           	psect	text18
  3526  046F                     __ptext18:	
  3527 ;; *************** function _i2c_start *****************
  3528 ;; Defined at:
  3529 ;;		line 16 in file "i2c.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3543 ;;      Params:         0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		_i2c_wait
  3552 ;; This function is called by:
  3553 ;;		_write_date
  3554 ;;		_read_
  3555 ;;		_i2c_cmd
  3556 ;;		_recv_data
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _i2c_start
  3562  046F                     _i2c_start:
  3563  046F                     l1279:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3566                           
  3567                           
  3568                           ;i2c.c: 17: i2c_wait();
  3569  046F  3184  2479  3184   	fcall	_i2c_wait
  3570  0472                     l1281:
  3571                           
  3572                           ;i2c.c: 18: SSP2CON2bits.SEN = 1;
  3573  0472  0024               	movlb	4	; select bank4
  3574  0473  141E               	bsf	30,0	;volatile
  3575  0474                     l115:	
  3576                           ;i2c.c: 19: while(SSP2CON2bits.SEN);
  3577                           
  3578  0474  181E               	btfsc	30,0	;volatile
  3579  0475  2C77               	goto	u421
  3580  0476  2C78               	goto	u420
  3581  0477                     u421:
  3582  0477  2C74               	goto	l115
  3583  0478                     u420:
  3584  0478                     l118:
  3585  0478  0008               	return
  3586  0479                     __end_of_i2c_start:
  3587                           
  3588                           	psect	text19
  3589  0465                     __ptext19:	
  3590 ;; *************** function _i2c_repeated_start *****************
  3591 ;; Defined at:
  3592 ;;		line 27 in file "i2c.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3606 ;;      Params:         0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    1
  3613 ;; This function calls:
  3614 ;;		_i2c_wait
  3615 ;; This function is called by:
  3616 ;;		_read_
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _i2c_repeated_start
  3622  0465                     _i2c_repeated_start:
  3623  0465                     l1285:	
  3624                           ;incstack = 0
  3625                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3626                           
  3627                           
  3628                           ;i2c.c: 28: i2c_wait();
  3629  0465  3184  2479  3184   	fcall	_i2c_wait
  3630  0468                     l1287:
  3631                           
  3632                           ;i2c.c: 29: SSP2CON2bits.RSEN = 1;
  3633  0468  0024               	movlb	4	; select bank4
  3634  0469  149E               	bsf	30,1	;volatile
  3635  046A                     l127:	
  3636                           ;i2c.c: 30: while(SSP2CON2bits.RSEN);
  3637                           
  3638  046A  189E               	btfsc	30,1	;volatile
  3639  046B  2C6D               	goto	u441
  3640  046C  2C6E               	goto	u440
  3641  046D                     u441:
  3642  046D  2C6A               	goto	l127
  3643  046E                     u440:
  3644  046E                     l130:
  3645  046E  0008               	return
  3646  046F                     __end_of_i2c_repeated_start:
  3647                           
  3648                           	psect	text20
  3649  0479                     __ptext20:	
  3650 ;; *************** function _i2c_wait *****************
  3651 ;; Defined at:
  3652 ;;		line 12 in file "i2c.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3666 ;;      Params:         0       0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0
  3669 ;;      Totals:         0       0       0       0       0       0
  3670 ;;Total ram usage:        0 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_i2c_start
  3676 ;;		_i2c_repeated_start
  3677 ;;		_write_byte
  3678 ;;		_recv_byte
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _i2c_wait
  3684  0479                     _i2c_wait:
  3685  0479                     l1259:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _i2c_wait: [wreg+status,2]
  3688                           
  3689  0479                     l1261:	
  3690                           ;i2c.c: 13: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  3691                           
  3692  0479  0024               	movlb	4	; select bank4
  3693  047A  081E               	movf	30,w	;volatile
  3694  047B  391F               	andlw	31
  3695  047C  1D03               	btfss	3,2
  3696  047D  2C7F               	goto	u381
  3697  047E  2C80               	goto	u380
  3698  047F                     u381:
  3699  047F  2C79               	goto	l1261
  3700  0480                     u380:
  3701  0480                     l1263:
  3702  0480  191C               	btfsc	28,2	;volatile
  3703  0481  2C83               	goto	u391
  3704  0482  2C84               	goto	u390
  3705  0483                     u391:
  3706  0483  2C79               	goto	l1261
  3707  0484                     u390:
  3708  0484                     l112:
  3709  0484  0008               	return
  3710  0485                     __end_of_i2c_wait:
  3711                           
  3712                           	psect	text21
  3713  04B6                     __ptext21:	
  3714 ;; *************** function _bcd_2_decimal *****************
  3715 ;; Defined at:
  3716 ;;		line 15 in file "DS3231.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  number          1    wreg     unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  number          1    7[COMMON] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0, pclath, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3730 ;;      Params:         0       0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0
  3732 ;;      Temps:          3       0       0       0       0       0
  3733 ;;      Totals:         4       0       0       0       0       0
  3734 ;;Total ram usage:        4 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    1
  3737 ;; This function calls:
  3738 ;;		___bmul
  3739 ;; This function is called by:
  3740 ;;		_read_
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _bcd_2_decimal
  3746  04B6                     _bcd_2_decimal:
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3750                           ;bcd_2_decimal@number stored from wreg
  3751  04B6  00F7               	movwf	bcd_2_decimal@number
  3752  04B7                     l1333:
  3753                           
  3754                           ;DS3231.c: 16: return ((number >> 4) * 10 + (number & 0x0F));
  3755  04B7  300F               	movlw	15
  3756  04B8  0577               	andwf	bcd_2_decimal@number,w
  3757  04B9  00F4               	movwf	??_bcd_2_decimal
  3758  04BA  300A               	movlw	10
  3759  04BB  00F5               	movwf	??_bcd_2_decimal+1
  3760  04BC  0875               	movf	??_bcd_2_decimal+1,w
  3761  04BD  00F0               	movwf	___bmul@multiplicand
  3762  04BE  0877               	movf	bcd_2_decimal@number,w
  3763  04BF  00F6               	movwf	??_bcd_2_decimal+2
  3764  04C0  3004               	movlw	4
  3765  04C1                     u515:
  3766  04C1  36F6               	lsrf	??_bcd_2_decimal+2,f
  3767  04C2  0B89               	decfsz	9,f
  3768  04C3  2CC1               	goto	u515
  3769  04C4  0876               	movf	??_bcd_2_decimal+2,w
  3770  04C5  3184  24CA  3184   	fcall	___bmul
  3771  04C8  0774               	addwf	??_bcd_2_decimal,w
  3772  04C9                     l263:
  3773  04C9  0008               	return
  3774  04CA                     __end_of_bcd_2_decimal:
  3775                           
  3776                           	psect	text22
  3777  04CA                     __ptext22:	
  3778 ;; *************** function ___bmul *****************
  3779 ;; Defined at:
  3780 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  multiplier      1    wreg     unsigned char 
  3783 ;;  multiplicand    1    0[COMMON] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  multiplier      1    3[COMMON] unsigned char 
  3786 ;;  product         1    2[COMMON] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      unsigned char 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3796 ;;      Params:         1       0       0       0       0       0
  3797 ;;      Locals:         2       0       0       0       0       0
  3798 ;;      Temps:          1       0       0       0       0       0
  3799 ;;      Totals:         4       0       0       0       0       0
  3800 ;;Total ram usage:        4 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_bcd_2_decimal
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function ___bmul
  3811  04CA                     ___bmul:
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3815                           ;___bmul@multiplier stored from wreg
  3816  04CA  00F3               	movwf	___bmul@multiplier
  3817  04CB                     l1265:
  3818  04CB  01F2               	clrf	___bmul@product
  3819  04CC                     l1267:
  3820  04CC  1C73               	btfss	___bmul@multiplier,0
  3821  04CD  2CCF               	goto	u401
  3822  04CE  2CD0               	goto	u400
  3823  04CF                     u401:
  3824  04CF  2CD4               	goto	l1271
  3825  04D0                     u400:
  3826  04D0                     l1269:
  3827  04D0  0870               	movf	___bmul@multiplicand,w
  3828  04D1  00F1               	movwf	??___bmul
  3829  04D2  0871               	movf	??___bmul,w
  3830  04D3  07F2               	addwf	___bmul@product,f
  3831  04D4                     l1271:
  3832  04D4  1003               	clrc
  3833  04D5  0DF0               	rlf	___bmul@multiplicand,f
  3834  04D6                     l1273:
  3835  04D6  1003               	clrc
  3836  04D7  0CF3               	rrf	___bmul@multiplier,f
  3837  04D8  0873               	movf	___bmul@multiplier,w
  3838  04D9  1D03               	btfss	3,2
  3839  04DA  2CDC               	goto	u411
  3840  04DB  2CDD               	goto	u410
  3841  04DC                     u411:
  3842  04DC  2CCC               	goto	l1267
  3843  04DD                     u410:
  3844  04DD                     l1275:
  3845  04DD  0872               	movf	___bmul@product,w
  3846  04DE                     l451:
  3847  04DE  0008               	return
  3848  04DF                     __end_of___bmul:
  3849                           
  3850                           	psect	text23
  3851  045B                     __ptext23:	
  3852 ;; *************** function _SYSTEM_Initialize *****************
  3853 ;; Defined at:
  3854 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3868 ;;      Params:         0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    1
  3875 ;; This function calls:
  3876 ;;		_OSCILLATOR_Initialize
  3877 ;;		_PIN_MANAGER_Initialize
  3878 ;;		_WDT_Initialize
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _SYSTEM_Initialize
  3886  045B                     _SYSTEM_Initialize:
  3887  045B                     l1485:	
  3888                           ;incstack = 0
  3889                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3890                           
  3891                           
  3892                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3893  045B  3184  24DF  3184   	fcall	_PIN_MANAGER_Initialize
  3894                           
  3895                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3896  045E  3184  2433  3184   	fcall	_OSCILLATOR_Initialize
  3897                           
  3898                           ;mcc.c: 55: WDT_Initialize();
  3899  0461  3184  2429  3184   	fcall	_WDT_Initialize
  3900  0464                     l45:
  3901  0464  0008               	return
  3902  0465                     __end_of_SYSTEM_Initialize:
  3903                           
  3904                           	psect	text24
  3905  0429                     __ptext24:	
  3906 ;; *************** function _WDT_Initialize *****************
  3907 ;; Defined at:
  3908 ;;		line 68 in file "mcc_generated_files/mcc.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3922 ;;      Params:         0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_SYSTEM_Initialize
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function _WDT_Initialize
  3937  0429                     _WDT_Initialize:
  3938  0429                     l1445:	
  3939                           ;incstack = 0
  3940                           ; Regs used in _WDT_Initialize: [wreg]
  3941                           
  3942                           
  3943                           ;mcc.c: 71: WDTCON = 0x16;
  3944  0429  3016               	movlw	22
  3945  042A  0021               	movlb	1	; select bank1
  3946  042B  0097               	movwf	23	;volatile
  3947  042C                     l51:
  3948  042C  0008               	return
  3949  042D                     __end_of_WDT_Initialize:
  3950                           
  3951                           	psect	text25
  3952  04DF                     __ptext25:	
  3953 ;; *************** function _PIN_MANAGER_Initialize *****************
  3954 ;; Defined at:
  3955 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3969 ;;      Params:         0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_SYSTEM_Initialize
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function _PIN_MANAGER_Initialize
  3984  04DF                     _PIN_MANAGER_Initialize:
  3985  04DF                     l1419:	
  3986                           ;incstack = 0
  3987                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3988                           
  3989                           
  3990                           ;pin_manager.c: 60: LATA = 0x00;
  3991  04DF  0022               	movlb	2	; select bank2
  3992  04E0  018C               	clrf	12	;volatile
  3993                           
  3994                           ;pin_manager.c: 61: LATB = 0x00;
  3995  04E1  018D               	clrf	13	;volatile
  3996  04E2                     l1421:
  3997                           
  3998                           ;pin_manager.c: 66: TRISA = 0xFF;
  3999  04E2  30FF               	movlw	255
  4000  04E3  0021               	movlb	1	; select bank1
  4001  04E4  008C               	movwf	12	;volatile
  4002  04E5                     l1423:
  4003                           
  4004                           ;pin_manager.c: 67: TRISB = 0xFF;
  4005  04E5  30FF               	movlw	255
  4006  04E6  008D               	movwf	13	;volatile
  4007  04E7                     l1425:
  4008                           
  4009                           ;pin_manager.c: 72: ANSELB = 0xDA;
  4010  04E7  30DA               	movlw	218
  4011  04E8  0023               	movlb	3	; select bank3
  4012  04E9  008D               	movwf	13	;volatile
  4013  04EA                     l1427:
  4014                           
  4015                           ;pin_manager.c: 73: ANSELA = 0x16;
  4016  04EA  3016               	movlw	22
  4017  04EB  008C               	movwf	12	;volatile
  4018  04EC                     l1429:
  4019                           
  4020                           ;pin_manager.c: 78: WPUB = 0x24;
  4021  04EC  3024               	movlw	36
  4022  04ED  0024               	movlb	4	; select bank4
  4023  04EE  008D               	movwf	13	;volatile
  4024  04EF                     l1431:
  4025                           
  4026                           ;pin_manager.c: 79: WPUA = 0x00;
  4027  04EF  018C               	clrf	12	;volatile
  4028  04F0                     l1433:
  4029                           
  4030                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  4031  04F0  0021               	movlb	1	; select bank1
  4032  04F1  1795               	bsf	21,7	;volatile
  4033  04F2                     l1435:
  4034                           
  4035                           ;pin_manager.c: 86: APFCON0 = 0x00;
  4036  04F2  0022               	movlb	2	; select bank2
  4037  04F3  019D               	clrf	29	;volatile
  4038  04F4                     l1437:
  4039                           
  4040                           ;pin_manager.c: 87: APFCON1 = 0x00;
  4041  04F4  019E               	clrf	30	;volatile
  4042  04F5                     l25:
  4043  04F5  0008               	return
  4044  04F6                     __end_of_PIN_MANAGER_Initialize:
  4045                           
  4046                           	psect	text26
  4047  0433                     __ptext26:	
  4048 ;; *************** function _OSCILLATOR_Initialize *****************
  4049 ;; Defined at:
  4050 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4064 ;;      Params:         0       0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0
  4067 ;;      Totals:         0       0       0       0       0       0
  4068 ;;Total ram usage:        0 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_SYSTEM_Initialize
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _OSCILLATOR_Initialize
  4079  0433                     _OSCILLATOR_Initialize:
  4080  0433                     l1439:	
  4081                           ;incstack = 0
  4082                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4083                           
  4084                           
  4085                           ;mcc.c: 61: OSCCON = 0x70;
  4086  0433  3070               	movlw	112
  4087  0434  0021               	movlb	1	; select bank1
  4088  0435  0099               	movwf	25	;volatile
  4089  0436                     l1441:
  4090                           
  4091                           ;mcc.c: 63: OSCTUNE = 0x00;
  4092  0436  0198               	clrf	24	;volatile
  4093  0437                     l1443:
  4094                           
  4095                           ;mcc.c: 65: BORCON = 0x00;
  4096  0437  0022               	movlb	2	; select bank2
  4097  0438  0196               	clrf	22	;volatile
  4098  0439                     l48:
  4099  0439  0008               	return
  4100  043A                     __end_of_OSCILLATOR_Initialize:
  4101  007E                     btemp	set	126	;btemp
  4102  007E                     wtemp0	set	126
  4103                           
  4104                           	psect	config
  4105                           
  4106                           ;Config register CONFIG1 @ 0x8007
  4107                           ;	Oscillator Selection
  4108                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4109                           ;	Watchdog Timer Enable
  4110                           ;	WDTE = OFF, WDT disabled
  4111                           ;	Power-up Timer Enable
  4112                           ;	PWRTE = OFF, PWRT disabled
  4113                           ;	MCLR Pin Function Select
  4114                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4115                           ;	Flash Program Memory Code Protection
  4116                           ;	CP = OFF, Program memory code protection is disabled
  4117                           ;	Data Memory Code Protection
  4118                           ;	CPD = OFF, Data memory code protection is disabled
  4119                           ;	Brown-out Reset Enable
  4120                           ;	BOREN = ON, Brown-out Reset enabled
  4121                           ;	Clock Out Enable
  4122                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4123                           ;	Internal/External Switchover
  4124                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4125                           ;	Fail-Safe Clock Monitor Enable
  4126                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4127  8007                     	org	32775
  4128  8007  3FE4               	dw	16356
  4129                           
  4130                           ;Config register CONFIG2 @ 0x8008
  4131                           ;	Flash Memory Self-Write Protection
  4132                           ;	WRT = OFF, Write protection off
  4133                           ;	PLL Enable
  4134                           ;	PLLEN = OFF, 4x PLL disabled
  4135                           ;	Stack Overflow/Underflow Reset Enable
  4136                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4137                           ;	Brown-out Reset Voltage Selection
  4138                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4139                           ;	Low-Voltage Programming Enable
  4140                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4141  8008                     	org	32776
  4142  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     19      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear@data(COMMON[4]), rtc_display@segments(BANK0[4]), 

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_read_date
    _main->_rtc_display
    _main->_write_date
    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _rtc_display->_set_segments
    _set_segments->_write_data
    _read_date->_read_
    _read_->_bcd_2_decimal
    _bcd_2_decimal->___bmul

Critical Paths under _main in BANK0

    _main->_rtc_display
    _write_date->_decimal_2_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5092
                                             11 BANK0      8     8      0
                  _SYSTEM_Initialize
                          _read_date
                        _rtc_display
                     _set_brigthness
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1739
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0    1552
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                         14    14      0    2511
                                             10 COMMON     3     3      0
                                              0 BANK0     11    11      0
                            ___awdiv
                            ___awmod
                         _encode_dig
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     625
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _write_data                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (4) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_dig                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     489
                                             11 COMMON     2     2      0
                              _read_
 ---------------------------------------------------------------------------------
 (2) _read_                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _recv_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _recv_byte                                            3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _read_date
     _read_
       _bcd_2_decimal
         ___bmul
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _recv_byte
         _i2c_wait
       _write_byte
         _i2c_wait
   _rtc_display
     ___awdiv
     ___awmod
     _encode_dig
     _set_segments
       _start
       _stop
       _write_data
         _bit_delay
   _set_brigthness
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
     _write_byte
       _i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      25       6       46.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      33      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 01 14:07:59 2020

                 ___bmul@product 0072                               l25 04F5                               l51 042C  
                             l45 0464                               l48 0439                               l94 07EB  
                             l86 064C                     ___awdiv@sign 0076            __end_of_decimal_2_bcd 055D  
                            l112 0484                              l121 043C                              l130 046E  
                            l210 05A7                              l115 0474                              l124 0440  
                            l220 05BA                              l212 05A8                              l204 059F  
                            l133 0497                              l205 05A1                              l118 0478  
                            l214 05B7                              l127 046A                              l223 05C9  
                            l207 05A5                              l136 049B                              l216 05B8  
                            l240 0596                              l145 04FE                              l225 05CB  
                            l170 0449                              l218 05B9                              l234 04B5  
                            l147 0502                              l139 04A2                              l148 050C  
                            l180 0450                              l172 044B                              l228 05D2  
                            l229 05D5                              l182 0451                              l174 044C  
                            l263 04C9                              l191 0457                              l167 0428  
                            l272 052E                              l248 0448                              l176 044E  
                            l193 0458                              l185 0452                              l178 044F  
                            l266 055C                              l451 04DE                              l275 061B  
                            l195 0459                              l187 0454                              l197 045A  
                            l189 0455                              l269 0775                              l591 06B6  
                            l578 0715                              u400 04D0                              u401 04CF  
                            u410 04DD                              u411 04DC                              u420 0478  
                            u500 05C9                              u421 0477                              u501 05C8  
                            u430 0440                              u431 043F                              u440 046E  
                            u600 0707                              u520 06BC                              u441 046D  
                            u601 0706                              u521 06BB                              u450 049B  
                            u610 070C                              u530 06C7                              u515 04C1  
                            u451 049A                              u611 070B                              u531 06C6  
                            u380 0480                              u460 049F                              u540 06D8  
                            u700 06AD                              u620 0669                              u381 047F  
                            u461 049E                              u541 06D7                              u701 06AC  
                            u621 0668                              u390 0484                              u470 0502  
                            u630 0674                              u710 0587                              u391 0483  
                            u471 0501                              u631 0673                              u711 0586  
                            u560 06E8                              u640 067F                              u480 05A5  
                            u561 06E7                              u641 067E                              u481 05A4  
                            u490 05B7                              u730 04A9                              u555 06DC  
                            u491 05B6                              u731 04A8                              u580 06F7  
                            u660 068F                              u581 06F6                              u661 068E  
                            u725 0556                              u670 0699                              u575 06E9  
                            u671 0698                              u655 0683                              u585 06F3  
                            u690 06A8                              u595 06FD                              u691 06A7  
                            u675 0695                              u685 069E                              u757 065A  
                            u767 076E                     ___awmod@sign 0076                   rtc_display@min 0028  
                 rtc_display@sec 0029                              wreg 0009                    write_data@ack 0072  
            bcd_2_decimal@number 0077                   ?_bcd_2_decimal 0070                             l1301 0508  
                           l1303 050B                             l1311 059E                             l1401 068B  
                           l1321 05BC                             l1403 068F                             l1411 06A8  
                           l1323 05BF                             l1307 0598                             l1421 04E2  
                           l1333 04B7                             l1261 0479                             l1341 06BC  
                           l1413 06AD                             l1405 0699                             l1325 05C4  
                           l1317 05A9                             l1309 059C                             l1501 04A4  
                           l1431 04EF                             l1423 04E5                             l1271 04D4  
                           l1263 0480                             l1511 05FA                             l1351 06D0  
                           l1343 06C1                             l1415 06B2                             l1407 069D  
                           l1327 05CD                             l1319 05B1                             l1503 04A9  
                           l1441 0436                             l1433 04F0                             l1425 04E7  
                           l1273 04D6                             l1265 04CB                             l1281 0472  
                           l1513 0605                             l1361 06E4                             l1353 06D2  
                           l1345 06C3                             l1337 06B7                             l1409 06A2  
                           l1329 05D0                             l1521 0780                             l1505 04B0  
                           l1443 0437                             l1435 04F2                             l1427 04EA  
                           l1419 04DF                             l1275 04DD                             l1267 04CC  
                           l1259 0479                             l1283 043A                             l1291 049F  
                           l1515 0610                             l1507 05D7                             l1371 0701  
                           l1363 06E8                             l1355 06D8                             l1347 06C7  
                           l1339 06B8                             l1451 055E                             l1531 078A  
                           l1523 0780                             l1437 04F4                             l1429 04EC  
                           l1445 0429                             l1269 04D0                             l1285 0465  
                           l1293 04F7                             l1509 05F6                             l1365 06F7  
                           l1357 06DB                             l1373 0707                             l1349 06CC  
                           l1381 0664                             l1461 0571                             l1453 0561  
                           l1533 07A0                             l1525 0780                             l1517 0778  
                           l1541 061C                             l1439 0433                             l1287 0468  
                           l1279 046F                             l1295 04FD                             l1375 070C  
                           l1367 06FB                             l1359 06E0                             l1391 0674  
                           l1383 0665                             l1447 0442                             l1471 058D  
                           l1463 0573                             l1455 0565                             l1535 07B6  
                           l1527 0780                             l1519 0780                             l1551 0627  
                           l1543 061F                             l1297 0503                             l1289 0494  
                           l1481 052A                             l1377 0711                             l1369 06FC  
                           l1393 0679                             l1385 0669                             l1473 0593  
                           l1465 057D                             l1457 0568                             l1537 07CC  
                           l1529 0785                             l1561 0634                             l1553 0629  
                           l1545 0621                             l1299 0507                             l1395 067F  
                           l1387 066E                             l1467 0581                             l1459 056B  
                           l1539 07E2                             l1475 0530                             l1491 072D  
                           l1571 0646                             l1563 0636                             l1555 062A  
                           l1547 0622                             l1485 045B                             l1397 0682  
                           l1389 0670                             l1469 0587                             l1493 0738  
                           l1573 0654                             l1565 063A                             l1557 062B  
                           l1549 0625                             l1479 050E                             l1399 0687  
                           l1495 0743                             l1487 0717                             l1567 063E  
                           l1559 0630                             l1497 0766                             l1489 0722  
                           l1569 0642                             l1499 0769                             _LATA 010C  
                           _LATB 010D                             _WPUA 020C                             _WPUB 020D  
                           _main 061C                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             _stop 0452                  rtc_display@date 002A  
                           start 0002                   write_data@data 0073                ___bmul@multiplier 0073  
                 write_date@date 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 043A  
                          ?_main 0070                  __end_of___awdiv 0716                  __end_of___awmod 06B7  
                          ?_stop 0070                  ___awdiv@divisor 0070                  ___awdiv@counter 0075  
                          _TRISA 008C                            _TRISB 008D                 rtc_display@F2393 003D  
                 _WDT_Initialize 0429                            _read_ 050D                   write_byte@data 0070  
                          _start 0449                            status 0003                            wtemp0 007E  
                __initialization 07EC                     __end_of_main 0664                     __end_of_stop 045B  
               __end_of_i2c_wait 0485                 __end_of_i2c_stop 0441                           ??_main 002B  
                         ??_stop 0070                  ??_bcd_2_decimal 0074           __end_of_WDT_Initialize 042D  
                encode_dig@digit 0070                  set_segments@pos 0076                           ?_read_ 0070  
               ___awdiv@dividend 0072                           _ANSELA 018C                           _ANSELB 018D  
                         ?_start 0070                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                           _TRISB2 046A                           _TRISB5 046D  
             __size_of_i2c_start 000A                           ___bmul 04CA                        ??___awdiv 0074  
                      ??___awmod 0074                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075               _i2c_repeated_start 0465                  ?_WDT_Initialize 0070  
                   ?_rtc_display 0070          __size_of_set_brigthness 0013              ?_i2c_repeated_start 0070  
              _SYSTEM_Initialize 045B          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
            ___bmul@multiplicand 0070         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 0485              ??_SYSTEM_Initialize 0070                    __end_of_read_ 052F  
           ??_i2c_repeated_start 0070                    __end_of_start 0452               __size_of_bit_delay 0001  
              __end_of_i2c_start 0479                   _OPTION_REGbits 0095                          ??_read_ 0078  
      __end_of_SYSTEM_Initialize 0465                          ??_start 0070                       __pbssBANK0 0041  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070                    recv_byte@data 0072  
             __size_of_read_date 0046                       __pmaintext 061C                          ?___bmul 0070  
             __size_of_recv_byte 0017                          _APFCON0 011D                          _APFCON1 011E  
                     _encode_dig 0441               set_segments@length 0075                          _OSCTUNE 0098  
                        _SSP2ADD 021A                          _SSP2BUF 0219                     read_@address 0079  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070                __end_of_bit_delay 0429  
         __size_of_decimal_2_bcd 002E                  __size_of___bmul 0015                          ___awdiv 06B7  
                        ___awmod 0664                       clear@F2384 0041                    ?_set_segments 0075  
                        __ptext1 0716                          __ptext2 052F                          __ptext3 04A3  
                        __ptext4 0776                          __ptext5 055D                          __ptext6 0597  
                        __ptext7 0428                          __ptext8 0452                          __ptext9 0449  
          _OSCILLATOR_Initialize 0433                __end_of_read_date 061C                 ___awmod@dividend 0072  
                        _segdata 0033         ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 04A3  
     __size_of_SYSTEM_Initialize 000A                __end_of_recv_byte 050D             end_of_initialization 07FD  
           __size_of_rtc_display 0076                          init_ram 042D                          initloop 042E  
           set_segments@segments 0078                   ??_set_segments 0077                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                     _m_brightness 007D                    _decimal_2_bcd 052F  
                    ?_encode_dig 0070           __end_of_set_brigthness 04B6                        _TRISAbits 008C  
          __end_of_bcd_2_decimal 04CA                   __end_of___bmul 04DF                       _write_data 0597  
                     _write_date 0716                       _write_byte 0493                   ?_decimal_2_bcd 0070  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EC                  ?_set_brigthness 0070  
__size_of_PIN_MANAGER_Initialize 0017                        _i2c_start 046F                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007              __size_of_encode_dig 0008                         ??___bmul 0071  
                    __pdataBANK0 0033      __size_of_i2c_repeated_start 000A                      __pbssCOMMON 007D  
                      ___latbits 0001                    __pcstackBANK0 0020                       ?_i2c_start 0070  
           __end_of_set_segments 0597                     recv_byte@ack 0071                 set_brigthness@on 0070  
         _PIN_MANAGER_Initialize 04DF                        _bit_delay 0428                         ?___awdiv 0070  
                       ?___awmod 0070                  ??_decimal_2_bcd 0020                      ?_write_data 0070  
                    ?_write_date 0070                      ?_write_byte 0070                        _read_date 05D6  
                 __size_of_read_ 0022                   __size_of_start 0009                         _LATAbits 010C  
                      _recv_byte 04F6                       ?_bit_delay 0070                         _SSP2CON1 021D  
                       _SSP2CON2 021E                         _SSP2STAT 021C                      write_data@b 0071  
                    write_data@i 0074                     ??_encode_dig 0070                    ??_rtc_display 007A  
                    ??_i2c_start 0070                       ?_read_date 0070                         _i2c_wait 0479  
                       _i2c_stop 043A              __size_of_write_data 003F              __size_of_write_date 0060  
            __size_of_write_byte 0010                       ?_recv_byte 0070                    set_segments@k 0079  
                      read_@data 007A               __end_of_encode_dig 0449          ??_OSCILLATOR_Initialize 0070  
               __size_of___awdiv 005F                 __size_of___awmod 0053                 ??_set_brigthness 0071  
          __size_of_set_segments 003A                         __ptext10 0441                         __ptext11 0664  
                       __ptext20 0479                         __ptext12 06B7                         __ptext21 04B6  
                       __ptext13 05D6                         __ptext22 04CA                         __ptext14 050D  
                       __ptext23 045B                         __ptext15 0493                         __ptext24 0429  
                       __ptext16 04F6                         __ptext25 04DF                         __ptext17 043A  
                       __ptext26 0433                         __ptext18 046F                         __ptext19 0465  
                   _SSP2CON1bits 021D                     _SSP2CON2bits 021E              __end_of_rtc_display 07EC  
                  __size_of_main 0048                    __size_of_stop 0009                      ??_bit_delay 0070  
         __size_of_bcd_2_decimal 0014                         main@date 002D                     _set_segments 055D  
                   _SSP2STATbits 021C                    read_date@date 007C                      ??_read_date 007B  
        __size_of_WDT_Initialize 0004                      ??_recv_byte 0070          ?_PIN_MANAGER_Initialize 0070  
     __end_of_i2c_repeated_start 046F                     ??_write_data 0070                     ??_write_date 007A  
                   ??_write_byte 0070              decimal_2_bcd@number 0079              rtc_display@segments 0024  
                    _rtc_display 0776                    _bcd_2_decimal 04B6   __end_of_PIN_MANAGER_Initialize 04F6  
             __end_of_write_data 05D6               __end_of_write_date 0776               __end_of_write_byte 04A3  
