

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 09 22:18:54 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.30
    55                           ; Generated 26/08/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1827 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011D                     	;# 
   149  011E                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  029E                     	;# 
   213  029E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0318                     	;# 
   219  0318                     	;# 
   220  0319                     	;# 
   221  031A                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  039A                     	;# 
   226  039C                     	;# 
   227  039D                     	;# 
   228  039E                     	;# 
   229  039F                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0113                     	;# 
   298  0114                     	;# 
   299  0115                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  0118                     	;# 
   303  0119                     	;# 
   304  011A                     	;# 
   305  011B                     	;# 
   306  011D                     	;# 
   307  011E                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020C                     	;# 
   331  020D                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0219                     	;# 
   348  021A                     	;# 
   349  021B                     	;# 
   350  021C                     	;# 
   351  021D                     	;# 
   352  021E                     	;# 
   353  021F                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  029E                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  039A                     	;# 
   384  039C                     	;# 
   385  039D                     	;# 
   386  039E                     	;# 
   387  039F                     	;# 
   388  0415                     	;# 
   389  0416                     	;# 
   390  0417                     	;# 
   391  041C                     	;# 
   392  041D                     	;# 
   393  041E                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011E                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  020D                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0219                     	;# 
   506  021A                     	;# 
   507  021B                     	;# 
   508  021C                     	;# 
   509  021D                     	;# 
   510  021E                     	;# 
   511  021F                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  029B                     	;# 
   525  029C                     	;# 
   526  029C                     	;# 
   527  029D                     	;# 
   528  029E                     	;# 
   529  029E                     	;# 
   530  0311                     	;# 
   531  0311                     	;# 
   532  0312                     	;# 
   533  0313                     	;# 
   534  0318                     	;# 
   535  0318                     	;# 
   536  0319                     	;# 
   537  031A                     	;# 
   538  0394                     	;# 
   539  0395                     	;# 
   540  0396                     	;# 
   541  039A                     	;# 
   542  039C                     	;# 
   543  039D                     	;# 
   544  039E                     	;# 
   545  039F                     	;# 
   546  0415                     	;# 
   547  0416                     	;# 
   548  0417                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  0111                     	;# 
   612  0112                     	;# 
   613  0113                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011A                     	;# 
   621  011B                     	;# 
   622  011D                     	;# 
   623  011E                     	;# 
   624  018C                     	;# 
   625  018D                     	;# 
   626  0191                     	;# 
   627  0191                     	;# 
   628  0192                     	;# 
   629  0193                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0194                     	;# 
   633  0195                     	;# 
   634  0196                     	;# 
   635  0199                     	;# 
   636  019A                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019E                     	;# 
   645  019F                     	;# 
   646  020C                     	;# 
   647  020D                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  0219                     	;# 
   664  021A                     	;# 
   665  021B                     	;# 
   666  021C                     	;# 
   667  021D                     	;# 
   668  021E                     	;# 
   669  021F                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029C                     	;# 
   685  029D                     	;# 
   686  029E                     	;# 
   687  029E                     	;# 
   688  0311                     	;# 
   689  0311                     	;# 
   690  0312                     	;# 
   691  0313                     	;# 
   692  0318                     	;# 
   693  0318                     	;# 
   694  0319                     	;# 
   695  031A                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  039A                     	;# 
   700  039C                     	;# 
   701  039D                     	;# 
   702  039E                     	;# 
   703  039F                     	;# 
   704  0415                     	;# 
   705  0416                     	;# 
   706  0417                     	;# 
   707  041C                     	;# 
   708  041D                     	;# 
   709  041E                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001E                     	;# 
   749  001F                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0093                     	;# 
   755  0094                     	;# 
   756  0095                     	;# 
   757  0096                     	;# 
   758  0097                     	;# 
   759  0098                     	;# 
   760  0099                     	;# 
   761  009A                     	;# 
   762  009B                     	;# 
   763  009B                     	;# 
   764  009C                     	;# 
   765  009D                     	;# 
   766  009E                     	;# 
   767  010C                     	;# 
   768  010D                     	;# 
   769  0111                     	;# 
   770  0112                     	;# 
   771  0113                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  0118                     	;# 
   777  0119                     	;# 
   778  011A                     	;# 
   779  011B                     	;# 
   780  011D                     	;# 
   781  011E                     	;# 
   782  018C                     	;# 
   783  018D                     	;# 
   784  0191                     	;# 
   785  0191                     	;# 
   786  0192                     	;# 
   787  0193                     	;# 
   788  0193                     	;# 
   789  0193                     	;# 
   790  0194                     	;# 
   791  0195                     	;# 
   792  0196                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019C                     	;# 
   800  019C                     	;# 
   801  019D                     	;# 
   802  019E                     	;# 
   803  019F                     	;# 
   804  020C                     	;# 
   805  020D                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0216                     	;# 
   818  0216                     	;# 
   819  0217                     	;# 
   820  0217                     	;# 
   821  0219                     	;# 
   822  021A                     	;# 
   823  021B                     	;# 
   824  021C                     	;# 
   825  021D                     	;# 
   826  021E                     	;# 
   827  021F                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0294                     	;# 
   833  0295                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029C                     	;# 
   843  029D                     	;# 
   844  029E                     	;# 
   845  029E                     	;# 
   846  0311                     	;# 
   847  0311                     	;# 
   848  0312                     	;# 
   849  0313                     	;# 
   850  0318                     	;# 
   851  0318                     	;# 
   852  0319                     	;# 
   853  031A                     	;# 
   854  0394                     	;# 
   855  0395                     	;# 
   856  0396                     	;# 
   857  039A                     	;# 
   858  039C                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  0415                     	;# 
   863  0416                     	;# 
   864  0417                     	;# 
   865  041C                     	;# 
   866  041D                     	;# 
   867  041E                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000D                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0013                     	;# 
   896  0014                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0016                     	;# 
   900  0017                     	;# 
   901  0018                     	;# 
   902  0019                     	;# 
   903  001A                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001E                     	;# 
   907  001F                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  0091                     	;# 
   911  0092                     	;# 
   912  0093                     	;# 
   913  0094                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0098                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  0111                     	;# 
   928  0112                     	;# 
   929  0113                     	;# 
   930  0114                     	;# 
   931  0115                     	;# 
   932  0116                     	;# 
   933  0117                     	;# 
   934  0118                     	;# 
   935  0119                     	;# 
   936  011A                     	;# 
   937  011B                     	;# 
   938  011D                     	;# 
   939  011E                     	;# 
   940  018C                     	;# 
   941  018D                     	;# 
   942  0191                     	;# 
   943  0191                     	;# 
   944  0192                     	;# 
   945  0193                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0194                     	;# 
   949  0195                     	;# 
   950  0196                     	;# 
   951  0199                     	;# 
   952  019A                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019B                     	;# 
   957  019C                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  020D                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0219                     	;# 
   980  021A                     	;# 
   981  021B                     	;# 
   982  021C                     	;# 
   983  021D                     	;# 
   984  021E                     	;# 
   985  021F                     	;# 
   986  0291                     	;# 
   987  0291                     	;# 
   988  0292                     	;# 
   989  0293                     	;# 
   990  0294                     	;# 
   991  0295                     	;# 
   992  0295                     	;# 
   993  0296                     	;# 
   994  0298                     	;# 
   995  0298                     	;# 
   996  0299                     	;# 
   997  029A                     	;# 
   998  029B                     	;# 
   999  029C                     	;# 
  1000  029C                     	;# 
  1001  029D                     	;# 
  1002  029E                     	;# 
  1003  029E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0318                     	;# 
  1009  0318                     	;# 
  1010  0319                     	;# 
  1011  031A                     	;# 
  1012  0394                     	;# 
  1013  0395                     	;# 
  1014  0396                     	;# 
  1015  039A                     	;# 
  1016  039C                     	;# 
  1017  039D                     	;# 
  1018  039E                     	;# 
  1019  039F                     	;# 
  1020  0415                     	;# 
  1021  0416                     	;# 
  1022  0417                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  0FE4                     	;# 
  1027  0FE5                     	;# 
  1028  0FE6                     	;# 
  1029  0FE7                     	;# 
  1030  0FE8                     	;# 
  1031  0FE9                     	;# 
  1032  0FEA                     	;# 
  1033  0FEB                     	;# 
  1034  0FED                     	;# 
  1035  0FEE                     	;# 
  1036  0FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  0011                     	;# 
  1052  0012                     	;# 
  1053  0013                     	;# 
  1054  0014                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0016                     	;# 
  1058  0017                     	;# 
  1059  0018                     	;# 
  1060  0019                     	;# 
  1061  001A                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  001E                     	;# 
  1065  001F                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  0091                     	;# 
  1069  0092                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  010C                     	;# 
  1084  010D                     	;# 
  1085  0111                     	;# 
  1086  0112                     	;# 
  1087  0113                     	;# 
  1088  0114                     	;# 
  1089  0115                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  0118                     	;# 
  1093  0119                     	;# 
  1094  011A                     	;# 
  1095  011B                     	;# 
  1096  011D                     	;# 
  1097  011E                     	;# 
  1098  018C                     	;# 
  1099  018D                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019C                     	;# 
  1116  019C                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019F                     	;# 
  1120  020C                     	;# 
  1121  020D                     	;# 
  1122  0211                     	;# 
  1123  0211                     	;# 
  1124  0212                     	;# 
  1125  0212                     	;# 
  1126  0213                     	;# 
  1127  0213                     	;# 
  1128  0214                     	;# 
  1129  0214                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  0219                     	;# 
  1138  021A                     	;# 
  1139  021B                     	;# 
  1140  021C                     	;# 
  1141  021D                     	;# 
  1142  021E                     	;# 
  1143  021F                     	;# 
  1144  0291                     	;# 
  1145  0291                     	;# 
  1146  0292                     	;# 
  1147  0293                     	;# 
  1148  0294                     	;# 
  1149  0295                     	;# 
  1150  0295                     	;# 
  1151  0296                     	;# 
  1152  0298                     	;# 
  1153  0298                     	;# 
  1154  0299                     	;# 
  1155  029A                     	;# 
  1156  029B                     	;# 
  1157  029C                     	;# 
  1158  029C                     	;# 
  1159  029D                     	;# 
  1160  029E                     	;# 
  1161  029E                     	;# 
  1162  0311                     	;# 
  1163  0311                     	;# 
  1164  0312                     	;# 
  1165  0313                     	;# 
  1166  0318                     	;# 
  1167  0318                     	;# 
  1168  0319                     	;# 
  1169  031A                     	;# 
  1170  0394                     	;# 
  1171  0395                     	;# 
  1172  0396                     	;# 
  1173  039A                     	;# 
  1174  039C                     	;# 
  1175  039D                     	;# 
  1176  039E                     	;# 
  1177  039F                     	;# 
  1178  0415                     	;# 
  1179  0416                     	;# 
  1180  0417                     	;# 
  1181  041C                     	;# 
  1182  041D                     	;# 
  1183  041E                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  0011                     	;# 
  1210  0012                     	;# 
  1211  0013                     	;# 
  1212  0014                     	;# 
  1213  0015                     	;# 
  1214  0016                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001B                     	;# 
  1221  001C                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009B                     	;# 
  1238  009C                     	;# 
  1239  009D                     	;# 
  1240  009E                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  011A                     	;# 
  1253  011B                     	;# 
  1254  011D                     	;# 
  1255  011E                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  0191                     	;# 
  1259  0191                     	;# 
  1260  0192                     	;# 
  1261  0193                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0194                     	;# 
  1265  0195                     	;# 
  1266  0196                     	;# 
  1267  0199                     	;# 
  1268  019A                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019D                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  0211                     	;# 
  1281  0211                     	;# 
  1282  0212                     	;# 
  1283  0212                     	;# 
  1284  0213                     	;# 
  1285  0213                     	;# 
  1286  0214                     	;# 
  1287  0214                     	;# 
  1288  0215                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0219                     	;# 
  1296  021A                     	;# 
  1297  021B                     	;# 
  1298  021C                     	;# 
  1299  021D                     	;# 
  1300  021E                     	;# 
  1301  021F                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0294                     	;# 
  1307  0295                     	;# 
  1308  0295                     	;# 
  1309  0296                     	;# 
  1310  0298                     	;# 
  1311  0298                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  029B                     	;# 
  1315  029C                     	;# 
  1316  029C                     	;# 
  1317  029D                     	;# 
  1318  029E                     	;# 
  1319  029E                     	;# 
  1320  0311                     	;# 
  1321  0311                     	;# 
  1322  0312                     	;# 
  1323  0313                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  039A                     	;# 
  1332  039C                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0415                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353                           
  1354                           	psect	idataBANK0
  1355  0296                     __pidataBANK0:
  1356                           
  1357                           ;initializer for _segdata
  1358  0296  343F               	retlw	63
  1359  0297  3406               	retlw	6
  1360  0298  345B               	retlw	91
  1361  0299  344F               	retlw	79
  1362  029A  3466               	retlw	102
  1363  029B  346D               	retlw	109
  1364  029C  347D               	retlw	125
  1365  029D  3407               	retlw	7
  1366  029E  347F               	retlw	127
  1367  029F  346F               	retlw	111
  1368                           
  1369                           ;initializer for _m_segments
  1370  02A0  340F               	retlw	15
  1371  02A1  340F               	retlw	15
  1372  02A2  340F               	retlw	15
  1373  02A3  340F               	retlw	15
  1374                           
  1375                           ;initializer for _t_segments
  1376  02A4  340F               	retlw	15
  1377  02A5  340F               	retlw	15
  1378  02A6  340F               	retlw	15
  1379  02A7  340F               	retlw	15
  1380                           
  1381                           	psect	stringtext1
  1382  0800                     __pstringtext1:
  1383  0800                     _HOUR_4_MONEY:
  1384  0800  3454               	retlw	84
  1385  0801  3406               	retlw	6
  1386  0802                     __end_of_HOUR_4_MONEY:
  1387                           
  1388                           	psect	stringtext2
  1389  0802                     __pstringtext2:
  1390  0802                     _MIN_4_MONEY:
  1391  0802  341B               	retlw	27
  1392  0803  3400               	retlw	0
  1393  0804                     __end_of_MIN_4_MONEY:
  1394                           
  1395                           	psect	stringtext3
  1396  0804                     __pstringtext3:
  1397  0804                     _REGULAR_HOUR:
  1398  0804  3411               	retlw	17
  1399  0805  3400               	retlw	0
  1400  0806                     __end_of_REGULAR_HOUR:
  1401  000C                     _PORTAbits	set	12
  1402  008C                     _TRISAbits	set	140
  1403  0097                     _WDTCON	set	151
  1404  0098                     _OSCTUNE	set	152
  1405  0099                     _OSCCON	set	153
  1406  0095                     _OPTION_REGbits	set	149
  1407  008D                     _TRISB	set	141
  1408  008C                     _TRISA	set	140
  1409  046D                     _TRISB5	set	1133
  1410  046A                     _TRISB2	set	1130
  1411  010C                     _LATAbits	set	268
  1412  0116                     _BORCON	set	278
  1413  011E                     _APFCON1	set	286
  1414  011D                     _APFCON0	set	285
  1415  010D                     _LATB	set	269
  1416  010C                     _LATA	set	268
  1417  018C                     _ANSELA	set	396
  1418  018D                     _ANSELB	set	397
  1419  021D                     _SSP2CON1bits	set	541
  1420  021C                     _SSP2STATbits	set	540
  1421  0219                     _SSP2BUF	set	537
  1422  021E                     _SSP2CON2bits	set	542
  1423  021C                     _SSP2STAT	set	540
  1424  021E                     _SSP2CON2	set	542
  1425  021D                     _SSP2CON1	set	541
  1426  021A                     _SSP2ADD	set	538
  1427  020C                     _WPUA	set	524
  1428  020D                     _WPUB	set	525
  1429                           
  1430                           	psect	cinit
  1431  07EE                     start_initialization:	
  1432                           ; #config settings
  1433                           
  1434  07EE                     __initialization:
  1435                           
  1436                           ; Initialize objects allocated to BANK0
  1437  07EE  3096               	movlw	low __pidataBANK0
  1438  07EF  0084               	movwf	4
  1439  07F0  3082               	movlw	(high __pidataBANK0)| (0+128)
  1440  07F1  0085               	movwf	5
  1441  07F2  3020               	movlw	low __pdataBANK0
  1442  07F3  0086               	movwf	6
  1443  07F4  3000               	movlw	high __pdataBANK0
  1444  07F5  0087               	movwf	7
  1445  07F6  3012               	movlw	18
  1446  07F7  3182  221C  3187   	fcall	init_ram
  1447                           
  1448                           ; Clear objects allocated to COMMON
  1449  07FA  01FD               	clrf	__pbssCOMMON& (0+127)
  1450                           
  1451                           ; Clear objects allocated to BANK0
  1452  07FB  01C2               	clrf	__pbssBANK0& (0+127)
  1453  07FC  01C3               	clrf	(__pbssBANK0+1)& (0+127)
  1454  07FD                     end_of_initialization:	
  1455                           ;End of C runtime variable initialization code
  1456                           
  1457  07FD                     __end_of__initialization:
  1458  07FD  0020               	movlb	0
  1459  07FE  3187  2F5F         	ljmp	_main	;jump to C main() function
  1460                           
  1461                           	psect	bssCOMMON
  1462  007D                     __pbssCOMMON:
  1463  007D                     _m_brightness:
  1464  007D                     	ds	1
  1465                           
  1466                           	psect	bssBANK0
  1467  0042                     __pbssBANK0:
  1468  0042                     _money:
  1469  0042                     	ds	2
  1470                           
  1471                           	psect	dataBANK0
  1472  0020                     __pdataBANK0:
  1473  0020                     _segdata:
  1474  0020                     	ds	10
  1475  002A                     _m_segments:
  1476  002A                     	ds	4
  1477  002E                     _t_segments:
  1478  002E                     	ds	4
  1479                           
  1480                           	psect	inittext
  1481  021C                     init_ram:
  1482  021C  00FE               	movwf	btemp
  1483  021D                     initloop:
  1484  021D  0012               	moviw fsr0++
  1485  021E  001E               	movwi fsr1++
  1486  021F  0BFE               	decfsz	btemp,f
  1487  0220  2A1D               	goto	initloop
  1488  0221  3400               	retlw	0
  1489                           
  1490                           	psect	cstackCOMMON
  1491  0070                     __pcstackCOMMON:
  1492  0070                     ?_OSCILLATOR_Initialize:
  1493  0070                     ??_OSCILLATOR_Initialize:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_WDT_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_WDT_Initialize:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_write_date:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_set_brigthness:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_m_set_brigthness:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_read_date:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_money_display:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_rtc_display:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_encode_digit:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ??_encode_digit:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_PIN_MANAGER_Initialize:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ??_PIN_MANAGER_Initialize:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_SYSTEM_Initialize:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ??_SYSTEM_Initialize:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_main:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_i2c_wait:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_i2c_wait:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_i2c_start:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ??_i2c_start:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_i2c_stop:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??_i2c_stop:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_i2c_repeated_start:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ??_i2c_repeated_start:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_i2c_write:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ??_i2c_write:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_i2c_read:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ??_i2c_read:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_bcd_2_decimal:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_decimal_2_bcd:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?__read:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_start:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ??_start:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_stop:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ??_stop:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_write_data:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ??_write_data:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_m_start:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ??_m_start:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_m_stop:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ??_m_stop:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_m_write_data:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ??_m_write_data:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?___bmul:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?___wmul:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?___awdiv:	
  1629                           ; 2 bytes @ 0x0
  1630                           
  1631  0070                     ?___awmod:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634  0070                     ?___lwdiv:	
  1635                           ; 2 bytes @ 0x0
  1636                           
  1637  0070                     ?___lwmod:	
  1638                           ; 2 bytes @ 0x0
  1639                           
  1640  0070                     i2c_write@data:	
  1641                           ; 2 bytes @ 0x0
  1642                           
  1643  0070                     set_brigthness@on:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     encode_digit@digit:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     m_set_brigthness@on:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ___bmul@multiplicand:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ___wmul@multiplier:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ___awdiv@divisor:	
  1659                           ; 2 bytes @ 0x0
  1660                           
  1661  0070                     ___awmod@divisor:	
  1662                           ; 2 bytes @ 0x0
  1663                           
  1664  0070                     ___lwdiv@divisor:	
  1665                           ; 2 bytes @ 0x0
  1666                           
  1667  0070                     ___lwmod@divisor:	
  1668                           ; 2 bytes @ 0x0
  1669                           
  1670                           
  1671                           ; 2 bytes @ 0x0
  1672  0070                     	ds	1
  1673  0071                     ??_set_brigthness:
  1674  0071                     ??_m_set_brigthness:	
  1675                           ; 1 bytes @ 0x1
  1676                           
  1677  0071                     ??___bmul:	
  1678                           ; 1 bytes @ 0x1
  1679                           
  1680  0071                     i2c_read@ack:	
  1681                           ; 1 bytes @ 0x1
  1682                           
  1683  0071                     write_data@b:	
  1684                           ; 1 bytes @ 0x1
  1685                           
  1686  0071                     m_write_data@b:	
  1687                           ; 1 bytes @ 0x1
  1688                           
  1689                           
  1690                           ; 1 bytes @ 0x1
  1691  0071                     	ds	1
  1692  0072                     i2c_read@data:
  1693  0072                     write_data@ack:	
  1694                           ; 1 bytes @ 0x2
  1695                           
  1696  0072                     set_brigthness@brightness:	
  1697                           ; 1 bytes @ 0x2
  1698                           
  1699  0072                     m_write_data@ack:	
  1700                           ; 1 bytes @ 0x2
  1701                           
  1702  0072                     m_set_brigthness@brightness:	
  1703                           ; 1 bytes @ 0x2
  1704                           
  1705  0072                     ___bmul@product:	
  1706                           ; 1 bytes @ 0x2
  1707                           
  1708  0072                     ___wmul@multiplicand:	
  1709                           ; 1 bytes @ 0x2
  1710                           
  1711  0072                     ___awdiv@dividend:	
  1712                           ; 2 bytes @ 0x2
  1713                           
  1714  0072                     ___awmod@dividend:	
  1715                           ; 2 bytes @ 0x2
  1716                           
  1717  0072                     ___lwdiv@dividend:	
  1718                           ; 2 bytes @ 0x2
  1719                           
  1720  0072                     ___lwmod@dividend:	
  1721                           ; 2 bytes @ 0x2
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0x2
  1725  0072                     	ds	1
  1726  0073                     write_data@data:
  1727  0073                     m_write_data@data:	
  1728                           ; 1 bytes @ 0x3
  1729                           
  1730  0073                     ___bmul@multiplier:	
  1731                           ; 1 bytes @ 0x3
  1732                           
  1733                           
  1734                           ; 1 bytes @ 0x3
  1735  0073                     	ds	1
  1736  0074                     ??_bcd_2_decimal:
  1737  0074                     ??___wmul:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     ??___awdiv:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     ??___awmod:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     ??___lwdiv:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     ??___lwmod:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     write_data@i:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     m_write_data@i:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     ___wmul@product:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x4
  1763  0074                     	ds	1
  1764  0075                     ?_set_segments:
  1765  0075                     ?_m_set_segments:	
  1766                           ; 1 bytes @ 0x5
  1767                           
  1768  0075                     set_segments@length:	
  1769                           ; 1 bytes @ 0x5
  1770                           
  1771  0075                     m_set_segments@length:	
  1772                           ; 1 bytes @ 0x5
  1773                           
  1774  0075                     ___awdiv@counter:	
  1775                           ; 1 bytes @ 0x5
  1776                           
  1777  0075                     ___awmod@counter:	
  1778                           ; 1 bytes @ 0x5
  1779                           
  1780  0075                     ___lwdiv@counter:	
  1781                           ; 1 bytes @ 0x5
  1782                           
  1783  0075                     ___lwmod@counter:	
  1784                           ; 1 bytes @ 0x5
  1785                           
  1786                           
  1787                           ; 1 bytes @ 0x5
  1788  0075                     	ds	1
  1789  0076                     ?_calc_money:
  1790  0076                     set_segments@pos:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793  0076                     m_set_segments@pos:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796  0076                     ___awdiv@sign:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799  0076                     ___awmod@sign:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802  0076                     ___lwdiv@quotient:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805  0076                     calc_money@date:	
  1806                           ; 2 bytes @ 0x6
  1807                           
  1808                           
  1809                           ; 6 bytes @ 0x6
  1810  0076                     	ds	1
  1811  0077                     ??_set_segments:
  1812  0077                     ??_m_set_segments:	
  1813                           ; 1 bytes @ 0x7
  1814                           
  1815  0077                     bcd_2_decimal@number:	
  1816                           ; 1 bytes @ 0x7
  1817                           
  1818  0077                     ___awdiv@quotient:	
  1819                           ; 1 bytes @ 0x7
  1820                           
  1821                           
  1822                           ; 2 bytes @ 0x7
  1823  0077                     	ds	1
  1824  0078                     ??__read:
  1825  0078                     set_segments@segments:	
  1826                           ; 1 bytes @ 0x8
  1827                           
  1828  0078                     m_set_segments@segments:	
  1829                           ; 1 bytes @ 0x8
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x8
  1833  0078                     	ds	1
  1834  0079                     decimal_2_bcd@number:
  1835  0079                     __read@address:	
  1836                           ; 1 bytes @ 0x9
  1837                           
  1838  0079                     set_segments@k:	
  1839                           ; 1 bytes @ 0x9
  1840                           
  1841  0079                     m_set_segments@k:	
  1842                           ; 1 bytes @ 0x9
  1843                           
  1844                           
  1845                           ; 1 bytes @ 0x9
  1846  0079                     	ds	1
  1847  007A                     ??_write_date:
  1848  007A                     ??_money_display:	
  1849                           ; 1 bytes @ 0xA
  1850                           
  1851  007A                     ??_rtc_display:	
  1852                           ; 1 bytes @ 0xA
  1853                           
  1854  007A                     __read@data:	
  1855                           ; 1 bytes @ 0xA
  1856                           
  1857                           
  1858                           ; 1 bytes @ 0xA
  1859  007A                     	ds	1
  1860  007B                     ??_read_date:
  1861  007B                     money_display@value:	
  1862                           ; 1 bytes @ 0xB
  1863                           
  1864                           
  1865                           ; 2 bytes @ 0xB
  1866  007B                     	ds	1
  1867  007C                     write_date@date:
  1868  007C                     read_date@date:	
  1869                           ; 1 bytes @ 0xC
  1870                           
  1871                           
  1872                           ; 1 bytes @ 0xC
  1873  007C                     	ds	1
  1874                           
  1875                           	psect	cstackBANK0
  1876  0032                     __pcstackBANK0:
  1877  0032                     ??_calc_money:
  1878  0032                     ??_decimal_2_bcd:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881  0032                     rtc_display@date:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0x0
  1886  0032                     	ds	1
  1887  0033                     rtc_display@hour:
  1888                           
  1889                           ; 1 bytes @ 0x1
  1890  0033                     	ds	1
  1891  0034                     rtc_display@min:
  1892                           
  1893                           ; 1 bytes @ 0x2
  1894  0034                     	ds	2
  1895  0036                     calc_money@hour:
  1896                           
  1897                           ; 2 bytes @ 0x4
  1898  0036                     	ds	2
  1899  0038                     calc_money@min:
  1900                           
  1901                           ; 2 bytes @ 0x6
  1902  0038                     	ds	2
  1903  003A                     ??_main:
  1904                           
  1905                           ; 1 bytes @ 0x8
  1906  003A                     	ds	2
  1907  003C                     main@date:
  1908                           
  1909                           ; 6 bytes @ 0xA
  1910  003C                     	ds	6
  1911                           
  1912                           	psect	maintext
  1913  075F                     __pmaintext:	
  1914 ;;
  1915 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1916 ;;
  1917 ;; *************** function _main *****************
  1918 ;; Defined at:
  1919 ;;		line 21 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  date            6   10[BANK0 ] struct Date
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : B1F/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1933 ;;      Params:         0       0       0       0       0       0
  1934 ;;      Locals:         0       6       0       0       0       0
  1935 ;;      Temps:          0       2       0       0       0       0
  1936 ;;      Totals:         0       8       0       0       0       0
  1937 ;;Total ram usage:        8 bytes
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		_SYSTEM_Initialize
  1941 ;;		_calc_money
  1942 ;;		_m_set_brigthness
  1943 ;;		_money_display
  1944 ;;		_read_date
  1945 ;;		_rtc_display
  1946 ;;		_set_brigthness
  1947 ;;		_write_date
  1948 ;; This function is called by:
  1949 ;;		Startup code after reset
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _main
  1955  075F                     _main:
  1956  075F                     l2067:	
  1957                           ;incstack = 0
  1958                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1959                           
  1960                           
  1961                           ;main.c: 24: SYSTEM_Initialize();
  1962  075F  3182  225C  3187   	fcall	_SYSTEM_Initialize
  1963  0762                     l2069:
  1964                           
  1965                           ;main.c: 26: TRISB2 = 1;
  1966  0762  0021               	movlb	1	; select bank1
  1967  0763  150D               	bsf	13,2	;volatile
  1968  0764                     l2071:
  1969                           
  1970                           ;main.c: 27: TRISB5 = 1;
  1971  0764  168D               	bsf	13,5	;volatile
  1972  0765                     l2073:
  1973                           
  1974                           ;main.c: 28: WPUB = 0x24;
  1975  0765  3024               	movlw	36
  1976  0766  0024               	movlb	4	; select bank4
  1977  0767  008D               	movwf	13	;volatile
  1978  0768                     l2075:
  1979                           
  1980                           ;main.c: 30: SSP2ADD = 0x13;
  1981  0768  3013               	movlw	19
  1982  0769  009A               	movwf	26	;volatile
  1983  076A                     l2077:
  1984                           
  1985                           ;main.c: 31: SSP2CON1 = 0x28;
  1986  076A  3028               	movlw	40
  1987  076B  009D               	movwf	29	;volatile
  1988  076C                     l2079:
  1989                           
  1990                           ;main.c: 32: SSP2CON2 = 0x0;
  1991  076C  019E               	clrf	30	;volatile
  1992  076D                     l2081:
  1993                           
  1994                           ;main.c: 33: SSP2STAT = 0;
  1995  076D  019C               	clrf	28	;volatile
  1996  076E                     l2083:
  1997                           
  1998                           ;main.c: 35: struct Date date;;main.c: 36: date.year = 20;
  1999  076E  3014               	movlw	20
  2000  076F  0020               	movlb	0	; select bank0
  2001  0770  00BA               	movwf	??_main
  2002  0771  083A               	movf	??_main,w
  2003  0772  00BC               	movwf	main@date
  2004  0773                     l2085:
  2005                           
  2006                           ;main.c: 37: date.month = 11;
  2007  0773  300B               	movlw	11
  2008  0774  00BA               	movwf	??_main
  2009  0775  083A               	movf	??_main,w
  2010  0776  00BD               	movwf	main@date+1
  2011  0777                     l2087:
  2012                           
  2013                           ;main.c: 38: date.day = 1;
  2014  0777  01BE               	clrf	main@date+2
  2015  0778  0ABE               	incf	main@date+2,f
  2016  0779                     l2089:
  2017                           
  2018                           ;main.c: 39: date.hour = 22;
  2019  0779  3016               	movlw	22
  2020  077A  00BA               	movwf	??_main
  2021  077B  083A               	movf	??_main,w
  2022  077C  00BF               	movwf	main@date+3
  2023  077D                     l2091:
  2024                           
  2025                           ;main.c: 40: date.min = 30;
  2026  077D  301E               	movlw	30
  2027  077E  00BA               	movwf	??_main
  2028  077F  083A               	movf	??_main,w
  2029  0780  00C0               	movwf	main@date+4
  2030  0781                     l2093:
  2031                           
  2032                           ;main.c: 41: date.sec = 0;
  2033  0781  01C1               	clrf	main@date+5
  2034  0782                     l2095:
  2035                           
  2036                           ;main.c: 43: write_date(&date);
  2037  0782  303C               	movlw	(low (main@date| 0))& (0+255)
  2038  0783  3186  2614  3187   	fcall	_write_date
  2039  0786                     l2097:
  2040                           
  2041                           ;main.c: 45: set_brigthness(0x0f, 1);
  2042  0786  01F0               	clrf	set_brigthness@on
  2043  0787  0AF0               	incf	set_brigthness@on,f
  2044  0788  300F               	movlw	15
  2045  0789  3182  22BB  3187   	fcall	_set_brigthness
  2046  078C                     l2099:
  2047                           
  2048                           ;main.c: 46: m_set_brigthness(0x0f, 1);
  2049  078C  01F0               	clrf	m_set_brigthness@on
  2050  078D  0AF0               	incf	m_set_brigthness@on,f
  2051  078E  300F               	movlw	15
  2052  078F  3182  22A8  3187   	fcall	_m_set_brigthness
  2053  0792                     l2101:
  2054                           
  2055                           ;main.c: 48: read_date(&date);
  2056  0792  303C               	movlw	(low (main@date| 0))& (0+255)
  2057  0793  3185  251C  3187   	fcall	_read_date
  2058  0796                     l2103:
  2059                           
  2060                           ;main.c: 49: calc_money(date);
  2061  0796  303C               	movlw	low main@date
  2062  0797  0086               	movwf	6
  2063  0798  3000               	movlw	high main@date
  2064  0799  0087               	movwf	7
  2065  079A  3076               	movlw	low calc_money@date
  2066  079B  0084               	movwf	4
  2067  079C  3000               	movlw	high calc_money@date
  2068  079D  0085               	movwf	5
  2069  079E  3F40               	moviw [0]fsr1
  2070  079F  3F80               	movwi [0]fsr0
  2071  07A0  3F41               	moviw [1]fsr1
  2072  07A1  3F81               	movwi [1]fsr0
  2073  07A2  3F42               	moviw [2]fsr1
  2074  07A3  3F82               	movwi [2]fsr0
  2075  07A4  3F43               	moviw [3]fsr1
  2076  07A5  3F83               	movwi [3]fsr0
  2077  07A6  3F44               	moviw [4]fsr1
  2078  07A7  3F84               	movwi [4]fsr0
  2079  07A8  3F45               	moviw [5]fsr1
  2080  07A9  3F85               	movwi [5]fsr0
  2081  07AA  3184  2434  3187   	fcall	_calc_money
  2082  07AD                     l2105:
  2083                           
  2084                           ;main.c: 50: money_display();
  2085  07AD  3186  26E2  3187   	fcall	_money_display
  2086  07B0                     l2107:
  2087                           
  2088                           ;main.c: 53: {;main.c: 54: read_date(&date);
  2089  07B0  303C               	movlw	(low (main@date| 0))& (0+255)
  2090  07B1  3185  251C  3187   	fcall	_read_date
  2091  07B4                     l2109:
  2092                           
  2093                           ;main.c: 55: rtc_display(&date);
  2094  07B4  303C               	movlw	(low (main@date| 0))& (0+255)
  2095  07B5  3186  2674  3187   	fcall	_rtc_display
  2096  07B8                     l2111:
  2097                           
  2098                           ;main.c: 57: if(date.sec == 0){
  2099  07B8  0020               	movlb	0	; select bank0
  2100  07B9  0841               	movf	main@date+5,w
  2101  07BA  1D03               	btfss	3,2
  2102  07BB  2FBD               	goto	u1391
  2103  07BC  2FBE               	goto	u1390
  2104  07BD                     u1391:
  2105  07BD  2FDB               	goto	l2117
  2106  07BE                     u1390:
  2107  07BE                     l2113:
  2108                           
  2109                           ;main.c: 58: if(date.hour > 17){
  2110  07BE  3012               	movlw	18
  2111  07BF  023F               	subwf	main@date+3,w
  2112  07C0  1C03               	skipc
  2113  07C1  2FC3               	goto	u1401
  2114  07C2  2FC4               	goto	u1400
  2115  07C3                     u1401:
  2116  07C3  2FDB               	goto	l2117
  2117  07C4                     u1400:
  2118  07C4                     l2115:
  2119                           
  2120                           ;main.c: 59: calc_money(date);
  2121  07C4  303C               	movlw	low main@date
  2122  07C5  0086               	movwf	6
  2123  07C6  3000               	movlw	high main@date
  2124  07C7  0087               	movwf	7
  2125  07C8  3076               	movlw	low calc_money@date
  2126  07C9  0084               	movwf	4
  2127  07CA  3000               	movlw	high calc_money@date
  2128  07CB  0085               	movwf	5
  2129  07CC  3F40               	moviw [0]fsr1
  2130  07CD  3F80               	movwi [0]fsr0
  2131  07CE  3F41               	moviw [1]fsr1
  2132  07CF  3F81               	movwi [1]fsr0
  2133  07D0  3F42               	moviw [2]fsr1
  2134  07D1  3F82               	movwi [2]fsr0
  2135  07D2  3F43               	moviw [3]fsr1
  2136  07D3  3F83               	movwi [3]fsr0
  2137  07D4  3F44               	moviw [4]fsr1
  2138  07D5  3F84               	movwi [4]fsr0
  2139  07D6  3F45               	moviw [5]fsr1
  2140  07D7  3F85               	movwi [5]fsr0
  2141  07D8  3184  2434  3187   	fcall	_calc_money
  2142  07DB                     l2117:
  2143                           
  2144                           ;main.c: 60: };main.c: 61: };main.c: 63: money_display();
  2145  07DB  3186  26E2  3187   	fcall	_money_display
  2146  07DE                     l2119:
  2147                           
  2148                           ;main.c: 64: _delay((unsigned long)((100)*(8000000/4000.0)));
  2149  07DE  3002               	movlw	2
  2150  07DF  0020               	movlb	0	; select bank0
  2151  07E0  00BB               	movwf	??_main+1
  2152  07E1  3004               	movlw	4
  2153  07E2  00BA               	movwf	??_main
  2154  07E3  30BA               	movlw	186
  2155  07E4                     u1417:
  2156  07E4  0B89               	decfsz	9,f
  2157  07E5  2FE4               	goto	u1417
  2158  07E6  0BBA               	decfsz	??_main,f
  2159  07E7  2FE4               	goto	u1417
  2160  07E8  0BBB               	decfsz	??_main+1,f
  2161  07E9  2FE4               	goto	u1417
  2162  07EA  0000               	nop
  2163  07EB  2FB0               	goto	l2107
  2164  07EC  3180  2802         	ljmp	start
  2165  07EE                     __end_of_main:
  2166                           
  2167                           	psect	text1
  2168  0614                     __ptext1:	
  2169 ;; *************** function _write_date *****************
  2170 ;; Defined at:
  2171 ;;		line 36 in file "DS3231.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  date            1    wreg     PTR struct Date
  2174 ;;		 -> main@date(6), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  date            1   12[COMMON] PTR struct Date
  2177 ;;		 -> main@date(6), 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2187 ;;      Params:         0       0       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0       0
  2189 ;;      Temps:          2       0       0       0       0       0
  2190 ;;      Totals:         3       0       0       0       0       0
  2191 ;;Total ram usage:        3 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_decimal_2_bcd
  2196 ;;		_i2c_start
  2197 ;;		_i2c_stop
  2198 ;;		_i2c_write
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _write_date
  2206  0614                     _write_date:
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2210                           ;write_date@date stored from wreg
  2211  0614  00FC               	movwf	write_date@date
  2212  0615                     l1795:
  2213                           
  2214                           ;DS3231.c: 37: i2c_start();
  2215  0615  3182  2270  3186   	fcall	_i2c_start
  2216                           
  2217                           ;DS3231.c: 38: i2c_write(0xD0);
  2218  0618  30D0               	movlw	208
  2219  0619  3182  2286  3186   	fcall	_i2c_write
  2220                           
  2221                           ;DS3231.c: 39: i2c_write(0x00);
  2222  061C  3000               	movlw	0
  2223  061D  3182  2286  3186   	fcall	_i2c_write
  2224  0620                     l1797:
  2225                           
  2226                           ;DS3231.c: 41: i2c_write(decimal_2_bcd(date->sec));
  2227  0620  087C               	movf	write_date@date,w
  2228  0621  3E05               	addlw	5
  2229  0622  0086               	movwf	6
  2230  0623  0187               	clrf	7
  2231  0624  0801               	movf	1,w
  2232  0625  3183  2366  3186   	fcall	_decimal_2_bcd
  2233  0628  3182  2286  3186   	fcall	_i2c_write
  2234  062B                     l1799:
  2235                           
  2236                           ;DS3231.c: 42: i2c_write(decimal_2_bcd(date->min));
  2237  062B  087C               	movf	write_date@date,w
  2238  062C  3E04               	addlw	4
  2239  062D  0086               	movwf	6
  2240  062E  0187               	clrf	7
  2241  062F  0801               	movf	1,w
  2242  0630  3183  2366  3186   	fcall	_decimal_2_bcd
  2243  0633  3182  2286  3186   	fcall	_i2c_write
  2244  0636                     l1801:
  2245                           
  2246                           ;DS3231.c: 43: i2c_write(decimal_2_bcd(date->hour));
  2247  0636  087C               	movf	write_date@date,w
  2248  0637  3E03               	addlw	3
  2249  0638  0086               	movwf	6
  2250  0639  0187               	clrf	7
  2251  063A  0801               	movf	1,w
  2252  063B  3183  2366  3186   	fcall	_decimal_2_bcd
  2253  063E  3182  2286  3186   	fcall	_i2c_write
  2254  0641                     l1803:
  2255                           
  2256                           ;DS3231.c: 44: i2c_write(1);
  2257  0641  3001               	movlw	1
  2258  0642  3182  2286  3186   	fcall	_i2c_write
  2259                           
  2260                           ;DS3231.c: 45: i2c_write(decimal_2_bcd(date->day));
  2261  0645  087C               	movf	write_date@date,w
  2262  0646  3E02               	addlw	2
  2263  0647  0086               	movwf	6
  2264  0648  0187               	clrf	7
  2265  0649  0801               	movf	1,w
  2266  064A  3183  2366  3186   	fcall	_decimal_2_bcd
  2267  064D  3182  2286  3186   	fcall	_i2c_write
  2268                           
  2269                           ;DS3231.c: 46: i2c_write(decimal_2_bcd(date->month));
  2270  0650  0A7C               	incf	write_date@date,w
  2271  0651  0086               	movwf	6
  2272  0652  0187               	clrf	7
  2273  0653  0801               	movf	1,w
  2274  0654  3183  2366  3186   	fcall	_decimal_2_bcd
  2275  0657  3182  2286  3186   	fcall	_i2c_write
  2276                           
  2277                           ;DS3231.c: 47: i2c_write(decimal_2_bcd(date->year));
  2278  065A  087C               	movf	write_date@date,w
  2279  065B  0086               	movwf	6
  2280  065C  0187               	clrf	7
  2281  065D  0801               	movf	1,w
  2282  065E  3183  2366  3186   	fcall	_decimal_2_bcd
  2283  0661  3182  2286  3186   	fcall	_i2c_write
  2284  0664                     l1805:
  2285                           
  2286                           ;DS3231.c: 48: i2c_stop();
  2287  0664  3182  2229  3186   	fcall	_i2c_stop
  2288  0667                     l1807:
  2289                           
  2290                           ;DS3231.c: 50: _delay((unsigned long)((200)*(8000000/4000.0)));
  2291  0667  3003               	movlw	3
  2292  0668  00FB               	movwf	??_write_date+1
  2293  0669  3008               	movlw	8
  2294  066A  00FA               	movwf	??_write_date
  2295  066B  3077               	movlw	119
  2296  066C                     u1427:
  2297  066C  0B89               	decfsz	9,f
  2298  066D  2E6C               	goto	u1427
  2299  066E  0BFA               	decfsz	??_write_date,f
  2300  066F  2E6C               	goto	u1427
  2301  0670  0BFB               	decfsz	??_write_date+1,f
  2302  0671  2E6C               	goto	u1427
  2303  0672  0000               	nop
  2304  0673                     l192:
  2305  0673  0008               	return
  2306  0674                     __end_of_write_date:
  2307                           
  2308                           	psect	text2
  2309  0366                     __ptext2:	
  2310 ;; *************** function _decimal_2_bcd *****************
  2311 ;; Defined at:
  2312 ;;		line 28 in file "DS3231.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  number          1    wreg     unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  number          1    9[COMMON] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      unsigned char 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2326 ;;      Params:         0       0       0       0       0       0
  2327 ;;      Locals:         1       0       0       0       0       0
  2328 ;;      Temps:          0       7       0       0       0       0
  2329 ;;      Totals:         1       7       0       0       0       0
  2330 ;;Total ram usage:        8 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    1
  2333 ;; This function calls:
  2334 ;;		___awdiv
  2335 ;;		___awmod
  2336 ;; This function is called by:
  2337 ;;		_write_date
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _decimal_2_bcd
  2343  0366                     _decimal_2_bcd:
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  2347                           ;decimal_2_bcd@number stored from wreg
  2348  0366  00F9               	movwf	decimal_2_bcd@number
  2349  0367                     l1721:
  2350                           
  2351                           ;DS3231.c: 29: return (((number / 10) << 4) + (number % 10));
  2352  0367  300A               	movlw	10
  2353  0368  00F0               	movwf	___awmod@divisor
  2354  0369  3000               	movlw	0
  2355  036A  00F1               	movwf	___awmod@divisor+1
  2356  036B  0879               	movf	decimal_2_bcd@number,w
  2357  036C  0020               	movlb	0	; select bank0
  2358  036D  00B2               	movwf	??_decimal_2_bcd
  2359  036E  01B3               	clrf	??_decimal_2_bcd+1
  2360  036F  0832               	movf	??_decimal_2_bcd,w
  2361  0370  00F2               	movwf	___awmod@dividend
  2362  0371  0833               	movf	??_decimal_2_bcd+1,w
  2363  0372  00F3               	movwf	___awmod@dividend+1
  2364  0373  3185  2562  3183   	fcall	___awmod
  2365  0376  0870               	movf	?___awmod,w
  2366  0377  0020               	movlb	0	; select bank0
  2367  0378  00B4               	movwf	??_decimal_2_bcd+2
  2368  0379  0871               	movf	?___awmod+1,w
  2369  037A  00B5               	movwf	??_decimal_2_bcd+3
  2370  037B  300A               	movlw	10
  2371  037C  00F0               	movwf	___awdiv@divisor
  2372  037D  3000               	movlw	0
  2373  037E  00F1               	movwf	___awdiv@divisor+1
  2374  037F  0879               	movf	decimal_2_bcd@number,w
  2375  0380  00B6               	movwf	??_decimal_2_bcd+4
  2376  0381  01B7               	clrf	??_decimal_2_bcd+5
  2377  0382  0836               	movf	??_decimal_2_bcd+4,w
  2378  0383  00F2               	movwf	___awdiv@dividend
  2379  0384  0837               	movf	??_decimal_2_bcd+5,w
  2380  0385  00F3               	movwf	___awdiv@dividend+1
  2381  0386  3185  25B5  3183   	fcall	___awdiv
  2382  0389  0870               	movf	?___awdiv,w
  2383  038A  0020               	movlb	0	; select bank0
  2384  038B  00B8               	movwf	??_decimal_2_bcd+6
  2385  038C  3003               	movlw	3
  2386  038D                     u995:
  2387  038D  35B8               	lslf	??_decimal_2_bcd+6,f
  2388  038E  3EFF               	addlw	-1
  2389  038F  1D03               	skipz
  2390  0390  2B8D               	goto	u995
  2391  0391  3538               	lslf	??_decimal_2_bcd+6,w
  2392  0392  0734               	addwf	??_decimal_2_bcd+2,w
  2393  0393                     l189:
  2394  0393  0008               	return
  2395  0394                     __end_of_decimal_2_bcd:
  2396                           
  2397                           	psect	text3
  2398  02BB                     __ptext3:	
  2399 ;; *************** function _set_brigthness *****************
  2400 ;; Defined at:
  2401 ;;		line 74 in file "TM1637.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  brightness      1    wreg     unsigned char 
  2404 ;;  on              1    0[COMMON] unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  brightness      1    2[COMMON] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2416 ;;      Params:         1       0       0       0       0       0
  2417 ;;      Locals:         1       0       0       0       0       0
  2418 ;;      Temps:          1       0       0       0       0       0
  2419 ;;      Totals:         3       0       0       0       0       0
  2420 ;;Total ram usage:        3 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _set_brigthness
  2431  02BB                     _set_brigthness:
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  2435                           ;set_brigthness@brightness stored from wreg
  2436  02BB  00F2               	movwf	set_brigthness@brightness
  2437  02BC                     l1809:
  2438                           
  2439                           ;TM1637.c: 75: if(on == 1){
  2440  02BC  0370               	decf	set_brigthness@on,w
  2441  02BD  1D03               	btfss	3,2
  2442  02BE  2AC0               	goto	u1171
  2443  02BF  2AC1               	goto	u1170
  2444  02C0                     u1171:
  2445  02C0  2AC8               	goto	l1813
  2446  02C1                     u1170:
  2447  02C1                     l1811:
  2448                           
  2449                           ;TM1637.c: 76: m_brightness = (brightness & 0x7 | 0x08);
  2450  02C1  0872               	movf	set_brigthness@brightness,w
  2451  02C2  3907               	andlw	7
  2452  02C3  3808               	iorlw	8
  2453  02C4  00F1               	movwf	??_set_brigthness
  2454  02C5  0871               	movf	??_set_brigthness,w
  2455  02C6  00FD               	movwf	_m_brightness
  2456                           
  2457                           ;TM1637.c: 77: }else{
  2458  02C7  2ACD               	goto	l275
  2459  02C8                     l1813:
  2460                           
  2461                           ;TM1637.c: 78: m_brightness = (brightness & 0x7 | 0x00);
  2462  02C8  0872               	movf	set_brigthness@brightness,w
  2463  02C9  3907               	andlw	7
  2464  02CA  00F1               	movwf	??_set_brigthness
  2465  02CB  0871               	movf	??_set_brigthness,w
  2466  02CC  00FD               	movwf	_m_brightness
  2467  02CD                     l275:
  2468  02CD  0008               	return
  2469  02CE                     __end_of_set_brigthness:
  2470                           
  2471                           	psect	text4
  2472  0674                     __ptext4:	
  2473 ;; *************** function _rtc_display *****************
  2474 ;; Defined at:
  2475 ;;		line 74 in file "main.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  date            1    wreg     PTR struct Date
  2478 ;;		 -> main@date(6), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  date            1    0[BANK0 ] PTR struct Date
  2481 ;;		 -> main@date(6), 
  2482 ;;  min             1    2[BANK0 ] unsigned char 
  2483 ;;  hour            1    1[BANK0 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2493 ;;      Params:         0       0       0       0       0       0
  2494 ;;      Locals:         0       3       0       0       0       0
  2495 ;;      Temps:          3       0       0       0       0       0
  2496 ;;      Totals:         3       3       0       0       0       0
  2497 ;;Total ram usage:        6 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    2
  2500 ;; This function calls:
  2501 ;;		___awdiv
  2502 ;;		___awmod
  2503 ;;		_encode_digit
  2504 ;;		_set_segments
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _rtc_display
  2512  0674                     _rtc_display:
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2516                           ;rtc_display@date stored from wreg
  2517  0674  0020               	movlb	0	; select bank0
  2518  0675  00B2               	movwf	rtc_display@date
  2519  0676                     l2055:
  2520                           
  2521                           ;main.c: 79: uint8_t hour = date->hour;
  2522  0676  0832               	movf	rtc_display@date,w
  2523  0677  0086               	movwf	6
  2524  0678  0187               	clrf	7
  2525  0679  3F43               	moviw [3]fsr1
  2526  067A  00B3               	movwf	rtc_display@hour
  2527                           
  2528                           ;main.c: 80: uint8_t min = date->min;
  2529  067B  0832               	movf	rtc_display@date,w
  2530  067C  0086               	movwf	6
  2531  067D  0187               	clrf	7
  2532  067E  3F44               	moviw [4]fsr1
  2533  067F  00B4               	movwf	rtc_display@min
  2534  0680                     l2057:
  2535                           
  2536                           ;main.c: 84: t_segments[0] = encode_digit(hour / 10);
  2537  0680  300A               	movlw	10
  2538  0681  00F0               	movwf	___awdiv@divisor
  2539  0682  3000               	movlw	0
  2540  0683  00F1               	movwf	___awdiv@divisor+1
  2541  0684  0833               	movf	rtc_display@hour,w
  2542  0685  00FA               	movwf	??_rtc_display
  2543  0686  01FB               	clrf	??_rtc_display+1
  2544  0687  087A               	movf	??_rtc_display,w
  2545  0688  00F2               	movwf	___awdiv@dividend
  2546  0689  087B               	movf	??_rtc_display+1,w
  2547  068A  00F3               	movwf	___awdiv@dividend+1
  2548  068B  3185  25B5  3186   	fcall	___awdiv
  2549  068E  0870               	movf	?___awdiv,w
  2550  068F  3182  2230  3186   	fcall	_encode_digit
  2551  0692  00FC               	movwf	??_rtc_display+2
  2552  0693  087C               	movf	??_rtc_display+2,w
  2553  0694  0020               	movlb	0	; select bank0
  2554  0695  00AE               	movwf	_t_segments
  2555  0696                     l2059:
  2556                           
  2557                           ;main.c: 85: t_segments[1] = encode_digit(hour % 10);
  2558  0696  300A               	movlw	10
  2559  0697  00F0               	movwf	___awmod@divisor
  2560  0698  3000               	movlw	0
  2561  0699  00F1               	movwf	___awmod@divisor+1
  2562  069A  0833               	movf	rtc_display@hour,w
  2563  069B  00FA               	movwf	??_rtc_display
  2564  069C  01FB               	clrf	??_rtc_display+1
  2565  069D  087A               	movf	??_rtc_display,w
  2566  069E  00F2               	movwf	___awmod@dividend
  2567  069F  087B               	movf	??_rtc_display+1,w
  2568  06A0  00F3               	movwf	___awmod@dividend+1
  2569  06A1  3185  2562  3186   	fcall	___awmod
  2570  06A4  0870               	movf	?___awmod,w
  2571  06A5  3182  2230  3186   	fcall	_encode_digit
  2572  06A8  00FC               	movwf	??_rtc_display+2
  2573  06A9  087C               	movf	??_rtc_display+2,w
  2574  06AA  0020               	movlb	0	; select bank0
  2575  06AB  00AF               	movwf	_t_segments+1
  2576  06AC                     l2061:
  2577                           
  2578                           ;main.c: 86: t_segments[2] = encode_digit(min / 10);
  2579  06AC  300A               	movlw	10
  2580  06AD  00F0               	movwf	___awdiv@divisor
  2581  06AE  3000               	movlw	0
  2582  06AF  00F1               	movwf	___awdiv@divisor+1
  2583  06B0  0834               	movf	rtc_display@min,w
  2584  06B1  00FA               	movwf	??_rtc_display
  2585  06B2  01FB               	clrf	??_rtc_display+1
  2586  06B3  087A               	movf	??_rtc_display,w
  2587  06B4  00F2               	movwf	___awdiv@dividend
  2588  06B5  087B               	movf	??_rtc_display+1,w
  2589  06B6  00F3               	movwf	___awdiv@dividend+1
  2590  06B7  3185  25B5  3186   	fcall	___awdiv
  2591  06BA  0870               	movf	?___awdiv,w
  2592  06BB  3182  2230  3186   	fcall	_encode_digit
  2593  06BE  00FC               	movwf	??_rtc_display+2
  2594  06BF  087C               	movf	??_rtc_display+2,w
  2595  06C0  0020               	movlb	0	; select bank0
  2596  06C1  00B0               	movwf	_t_segments+2
  2597  06C2                     l2063:
  2598                           
  2599                           ;main.c: 87: t_segments[3] = encode_digit(min % 10);
  2600  06C2  300A               	movlw	10
  2601  06C3  00F0               	movwf	___awmod@divisor
  2602  06C4  3000               	movlw	0
  2603  06C5  00F1               	movwf	___awmod@divisor+1
  2604  06C6  0834               	movf	rtc_display@min,w
  2605  06C7  00FA               	movwf	??_rtc_display
  2606  06C8  01FB               	clrf	??_rtc_display+1
  2607  06C9  087A               	movf	??_rtc_display,w
  2608  06CA  00F2               	movwf	___awmod@dividend
  2609  06CB  087B               	movf	??_rtc_display+1,w
  2610  06CC  00F3               	movwf	___awmod@dividend+1
  2611  06CD  3185  2562  3186   	fcall	___awmod
  2612  06D0  0870               	movf	?___awmod,w
  2613  06D1  3182  2230  3186   	fcall	_encode_digit
  2614  06D4  00FC               	movwf	??_rtc_display+2
  2615  06D5  087C               	movf	??_rtc_display+2,w
  2616  06D6  0020               	movlb	0	; select bank0
  2617  06D7  00B1               	movwf	_t_segments+3
  2618  06D8                     l2065:
  2619                           
  2620                           ;main.c: 89: set_segments(t_segments, 4, 0);
  2621  06D8  3004               	movlw	4
  2622  06D9  00FA               	movwf	??_rtc_display
  2623  06DA  087A               	movf	??_rtc_display,w
  2624  06DB  00F5               	movwf	set_segments@length
  2625  06DC  01F6               	clrf	set_segments@pos
  2626  06DD  302E               	movlw	(low (_t_segments| 0))& (0+255)
  2627  06DE  3184  24A6  3186   	fcall	_set_segments
  2628  06E1                     l117:
  2629  06E1  0008               	return
  2630  06E2                     __end_of_rtc_display:
  2631                           
  2632                           	psect	text5
  2633  04A6                     __ptext5:	
  2634 ;; *************** function _set_segments *****************
  2635 ;; Defined at:
  2636 ;;		line 82 in file "TM1637.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  segments        1    wreg     PTR const unsigned char 
  2639 ;;		 -> t_segments(4), 
  2640 ;;  length          1    5[COMMON] unsigned char 
  2641 ;;  pos             1    6[COMMON] unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  segments        1    8[COMMON] PTR const unsigned char 
  2644 ;;		 -> t_segments(4), 
  2645 ;;  k               1    9[COMMON] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2655 ;;      Params:         2       0       0       0       0       0
  2656 ;;      Locals:         2       0       0       0       0       0
  2657 ;;      Temps:          1       0       0       0       0       0
  2658 ;;      Totals:         5       0       0       0       0       0
  2659 ;;Total ram usage:        5 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		_start
  2664 ;;		_stop
  2665 ;;		_write_data
  2666 ;; This function is called by:
  2667 ;;		_rtc_display
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _set_segments
  2673  04A6                     _set_segments:
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2677                           ;set_segments@segments stored from wreg
  2678  04A6  00F8               	movwf	set_segments@segments
  2679  04A7                     l1941:
  2680                           
  2681                           ;TM1637.c: 85: start();
  2682  04A7  3182  224A  3184   	fcall	_start
  2683  04AA                     l1943:
  2684                           
  2685                           ;TM1637.c: 86: write_data(0x40);
  2686  04AA  3040               	movlw	64
  2687  04AB  3183  23FE  3184   	fcall	_write_data
  2688  04AE                     l1945:
  2689                           
  2690                           ;TM1637.c: 87: stop();
  2691  04AE  3182  2253  3184   	fcall	_stop
  2692  04B1                     l1947:
  2693                           
  2694                           ;TM1637.c: 90: start();
  2695  04B1  3182  224A  3184   	fcall	_start
  2696  04B4                     l1949:
  2697                           
  2698                           ;TM1637.c: 91: write_data(0xC0 + (pos & 0x03));
  2699  04B4  0876               	movf	set_segments@pos,w
  2700  04B5  3903               	andlw	3
  2701  04B6  3EC0               	addlw	192
  2702  04B7  3183  23FE  3184   	fcall	_write_data
  2703  04BA                     l1951:
  2704                           
  2705                           ;TM1637.c: 94: for(uint8_t k = 0; k < length; k++){
  2706  04BA  01F9               	clrf	set_segments@k
  2707  04BB  2CCA               	goto	l1957
  2708  04BC                     l1953:
  2709                           
  2710                           ;TM1637.c: 95: write_data(segments[k]);
  2711  04BC  0879               	movf	set_segments@k,w
  2712  04BD  0778               	addwf	set_segments@segments,w
  2713  04BE  00F7               	movwf	??_set_segments
  2714  04BF  0877               	movf	??_set_segments,w
  2715  04C0  0086               	movwf	6
  2716  04C1  0187               	clrf	7
  2717  04C2  0801               	movf	1,w
  2718  04C3  3183  23FE  3184   	fcall	_write_data
  2719  04C6                     l1955:
  2720  04C6  3001               	movlw	1
  2721  04C7  00F7               	movwf	??_set_segments
  2722  04C8  0877               	movf	??_set_segments,w
  2723  04C9  07F9               	addwf	set_segments@k,f
  2724  04CA                     l1957:
  2725  04CA  0875               	movf	set_segments@length,w
  2726  04CB  0279               	subwf	set_segments@k,w
  2727  04CC  1C03               	skipc
  2728  04CD  2CCF               	goto	u1241
  2729  04CE  2CD0               	goto	u1240
  2730  04CF                     u1241:
  2731  04CF  2CBC               	goto	l1953
  2732  04D0                     u1240:
  2733  04D0                     l1959:
  2734                           
  2735                           ;TM1637.c: 96: };TM1637.c: 98: stop();
  2736  04D0  3182  2253  3184   	fcall	_stop
  2737                           
  2738                           ;TM1637.c: 101: start();
  2739  04D3  3182  224A  3184   	fcall	_start
  2740  04D6                     l1961:
  2741                           
  2742                           ;TM1637.c: 102: write_data(0x80 + (m_brightness & 0x0f));
  2743  04D6  087D               	movf	_m_brightness,w
  2744  04D7  390F               	andlw	15
  2745  04D8  3E80               	addlw	128
  2746  04D9  3183  23FE  3184   	fcall	_write_data
  2747  04DC                     l1963:
  2748                           
  2749                           ;TM1637.c: 103: stop();
  2750  04DC  3182  2253  3184   	fcall	_stop
  2751  04DF                     l281:
  2752  04DF  0008               	return
  2753  04E0                     __end_of_set_segments:
  2754                           
  2755                           	psect	text6
  2756  03FE                     __ptext6:	
  2757 ;; *************** function _write_data *****************
  2758 ;; Defined at:
  2759 ;;		line 36 in file "TM1637.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  b               1    wreg     unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  b               1    1[COMMON] unsigned char 
  2764 ;;  i               1    4[COMMON] unsigned char 
  2765 ;;  data            1    3[COMMON] unsigned char 
  2766 ;;  ack             1    2[COMMON] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2776 ;;      Params:         0       0       0       0       0       0
  2777 ;;      Locals:         4       0       0       0       0       0
  2778 ;;      Temps:          1       0       0       0       0       0
  2779 ;;      Totals:         5       0       0       0       0       0
  2780 ;;Total ram usage:        5 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_set_segments
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _write_data
  2791  03FE                     _write_data:
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _write_data: [wreg+status,2+status,0]
  2795                           ;write_data@b stored from wreg
  2796  03FE  00F1               	movwf	write_data@b
  2797  03FF                     l1523:
  2798                           
  2799                           ;TM1637.c: 37: uint8_t data = b;
  2800  03FF  0871               	movf	write_data@b,w
  2801  0400  00F0               	movwf	??_write_data
  2802  0401  0870               	movf	??_write_data,w
  2803  0402  00F3               	movwf	write_data@data
  2804  0403                     l1525:
  2805  0403  0021               	movlb	1	; select bank1
  2806  0404  100C               	bcf	12,0	;volatile
  2807  0405                     l1527:
  2808                           
  2809                           ;TM1637.c: 40: for(uint8_t i = 0; i < 8; i++){
  2810  0405  01F4               	clrf	write_data@i
  2811  0406                     l245:	
  2812                           ;TM1637.c: 41: do { LATAbits.LATA0 = 0; } while(0);
  2813                           
  2814  0406  0022               	movlb	2	; select bank2
  2815  0407  100C               	bcf	12,0	;volatile
  2816  0408                     l246:
  2817                           
  2818                           ;TM1637.c: 43: if(data & 0x01){
  2819  0408  1C73               	btfss	write_data@data,0
  2820  0409  2C0B               	goto	u721
  2821  040A  2C0C               	goto	u720
  2822  040B                     u721:
  2823  040B  2C0E               	goto	l251
  2824  040C                     u720:
  2825  040C                     l248:	
  2826                           ;TM1637.c: 44: do { LATAbits.LATA3 = 1; } while(0);
  2827                           
  2828  040C  158C               	bsf	12,3	;volatile
  2829  040D  2C0F               	goto	l253
  2830  040E                     l251:	
  2831                           ;TM1637.c: 46: do { LATAbits.LATA3 = 0; } while(0);
  2832                           
  2833  040E  118C               	bcf	12,3	;volatile
  2834  040F                     l253:	
  2835                           ;TM1637.c: 47: };TM1637.c: 49: do { LATAbits.LATA0 = 1; } while(0);
  2836                           
  2837  040F  140C               	bsf	12,0	;volatile
  2838  0410                     l1533:
  2839                           
  2840                           ;TM1637.c: 51: data = data >> 1;
  2841  0410  3673               	lsrf	write_data@data,w
  2842  0411  00F0               	movwf	??_write_data
  2843  0412  0870               	movf	??_write_data,w
  2844  0413  00F3               	movwf	write_data@data
  2845  0414  3001               	movlw	1
  2846  0415  00F0               	movwf	??_write_data
  2847  0416  0870               	movf	??_write_data,w
  2848  0417  07F4               	addwf	write_data@i,f
  2849  0418                     l1535:
  2850  0418  3008               	movlw	8
  2851  0419  0274               	subwf	write_data@i,w
  2852  041A  1C03               	skipc
  2853  041B  2C1D               	goto	u731
  2854  041C  2C1E               	goto	u730
  2855  041D                     u731:
  2856  041D  2C06               	goto	l245
  2857  041E                     u730:
  2858  041E                     l255:	
  2859                           ;TM1637.c: 52: };TM1637.c: 55: do { LATAbits.LATA0 = 0; } while(0);
  2860                           
  2861  041E  100C               	bcf	12,0	;volatile
  2862  041F                     l257:	
  2863                           ;TM1637.c: 56: do { LATAbits.LATA3 = 1; } while(0);
  2864                           
  2865  041F  158C               	bsf	12,3	;volatile
  2866  0420                     l259:	
  2867                           ;TM1637.c: 59: do { LATAbits.LATA0 = 1; } while(0);
  2868                           
  2869  0420  140C               	bsf	12,0	;volatile
  2870  0421                     l261:	
  2871                           ;TM1637.c: 61: do { TRISAbits.TRISA3 = 1; } while(0);
  2872                           
  2873  0421  0021               	movlb	1	; select bank1
  2874  0422  158C               	bsf	12,3	;volatile
  2875  0423                     l1537:
  2876                           
  2877                           ;TM1637.c: 63: uint8_t ack = PORTAbits.RA3;
  2878  0423  3000               	movlw	0
  2879  0424  0020               	movlb	0	; select bank0
  2880  0425  198C               	btfsc	12,3	;volatile
  2881  0426  3001               	movlw	1
  2882  0427  00F2               	movwf	write_data@ack
  2883  0428                     l1539:
  2884                           
  2885                           ;TM1637.c: 64: if(ack == 0){
  2886  0428  0872               	movf	write_data@ack,w
  2887  0429  1D03               	btfss	3,2
  2888  042A  2C2C               	goto	u741
  2889  042B  2C2D               	goto	u740
  2890  042C                     u741:
  2891  042C  2C31               	goto	l268
  2892  042D                     u740:
  2893  042D                     l264:	
  2894                           ;TM1637.c: 65: do { TRISAbits.TRISA3 = 0; } while(0);
  2895                           
  2896  042D  0021               	movlb	1	; select bank1
  2897  042E  118C               	bcf	12,3	;volatile
  2898  042F                     l266:	
  2899                           ;TM1637.c: 66: do { LATAbits.LATA3 = 0; } while(0);
  2900                           
  2901  042F  0022               	movlb	2	; select bank2
  2902  0430  118C               	bcf	12,3	;volatile
  2903  0431                     l268:	
  2904                           ;TM1637.c: 67: };TM1637.c: 69: do { TRISAbits.TRISA3 = 0; } while(0);
  2905                           
  2906  0431  0021               	movlb	1	; select bank1
  2907  0432  118C               	bcf	12,3	;volatile
  2908  0433                     l270:
  2909  0433  0008               	return
  2910  0434                     __end_of_write_data:
  2911                           
  2912                           	psect	text7
  2913  0253                     __ptext7:	
  2914 ;; *************** function _stop *****************
  2915 ;; Defined at:
  2916 ;;		line 25 in file "TM1637.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		None
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2930 ;;      Params:         0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_set_segments
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _stop
  2945  0253                     _stop:
  2946  0253                     l226:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _stop: []
  2949                           ;TM1637.c: 26: do { TRISAbits.TRISA3 = 0; } while(0);
  2950                           
  2951  0253  0021               	movlb	1	; select bank1
  2952  0254  118C               	bcf	12,3	;volatile
  2953  0255                     l228:	
  2954                           ;TM1637.c: 27: do { TRISAbits.TRISA0 = 0; } while(0);
  2955                           
  2956  0255  100C               	bcf	12,0	;volatile
  2957  0256                     l230:	
  2958                           ;TM1637.c: 29: do { LATAbits.LATA0 = 0; } while(0);
  2959                           
  2960  0256  0022               	movlb	2	; select bank2
  2961  0257  100C               	bcf	12,0	;volatile
  2962  0258                     l232:	
  2963                           ;TM1637.c: 30: do { LATAbits.LATA3 = 0; } while(0);
  2964                           
  2965  0258  118C               	bcf	12,3	;volatile
  2966  0259                     l234:	
  2967                           ;TM1637.c: 32: do { LATAbits.LATA0 = 1; } while(0);
  2968                           
  2969  0259  140C               	bsf	12,0	;volatile
  2970  025A                     l236:	
  2971                           ;TM1637.c: 33: do { LATAbits.LATA3 = 1; } while(0);
  2972                           
  2973  025A  158C               	bsf	12,3	;volatile
  2974  025B                     l238:
  2975  025B  0008               	return
  2976  025C                     __end_of_stop:
  2977                           
  2978                           	psect	text8
  2979  024A                     __ptext8:	
  2980 ;; *************** function _start *****************
  2981 ;; Defined at:
  2982 ;;		line 14 in file "TM1637.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2996 ;;      Params:         0       0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_set_segments
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _start
  3011  024A                     _start:
  3012  024A                     l211:	
  3013                           ;incstack = 0
  3014                           ; Regs used in _start: []
  3015                           ;TM1637.c: 15: do { TRISAbits.TRISA3 = 0; } while(0);
  3016                           
  3017  024A  0021               	movlb	1	; select bank1
  3018  024B  118C               	bcf	12,3	;volatile
  3019  024C                     l213:	
  3020                           ;TM1637.c: 16: do { TRISAbits.TRISA0 = 0; } while(0);
  3021                           
  3022  024C  100C               	bcf	12,0	;volatile
  3023  024D                     l215:	
  3024                           ;TM1637.c: 18: do { LATAbits.LATA3 = 1; } while(0);
  3025                           
  3026  024D  0022               	movlb	2	; select bank2
  3027  024E  158C               	bsf	12,3	;volatile
  3028  024F                     l217:	
  3029                           ;TM1637.c: 19: do { LATAbits.LATA0 = 1; } while(0);
  3030                           
  3031  024F  140C               	bsf	12,0	;volatile
  3032  0250                     l219:	
  3033                           ;TM1637.c: 21: do { LATAbits.LATA3 = 0; } while(0);
  3034                           
  3035  0250  118C               	bcf	12,3	;volatile
  3036  0251                     l221:	
  3037                           ;TM1637.c: 22: do { LATAbits.LATA0 = 0; } while(0);
  3038                           
  3039  0251  100C               	bcf	12,0	;volatile
  3040  0252                     l223:
  3041  0252  0008               	return
  3042  0253                     __end_of_start:
  3043                           
  3044                           	psect	text9
  3045  0562                     __ptext9:	
  3046 ;; *************** function ___awmod *****************
  3047 ;; Defined at:
  3048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  divisor         2    0[COMMON] int 
  3051 ;;  dividend        2    2[COMMON] int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  sign            1    6[COMMON] unsigned char 
  3054 ;;  counter         1    5[COMMON] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    0[COMMON] int 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3064 ;;      Params:         4       0       0       0       0       0
  3065 ;;      Locals:         2       0       0       0       0       0
  3066 ;;      Temps:          1       0       0       0       0       0
  3067 ;;      Totals:         7       0       0       0       0       0
  3068 ;;Total ram usage:        7 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_rtc_display
  3074 ;;		_decimal_2_bcd
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function ___awmod
  3080  0562                     ___awmod:
  3081  0562                     l1603:	
  3082                           ;incstack = 0
  3083                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3084                           
  3085  0562  01F6               	clrf	___awmod@sign
  3086  0563                     l1605:
  3087  0563  1FF3               	btfss	___awmod@dividend+1,7
  3088  0564  2D66               	goto	u881
  3089  0565  2D67               	goto	u880
  3090  0566                     u881:
  3091  0566  2D6E               	goto	l1611
  3092  0567                     u880:
  3093  0567                     l1607:
  3094  0567  09F2               	comf	___awmod@dividend,f
  3095  0568  09F3               	comf	___awmod@dividend+1,f
  3096  0569  0AF2               	incf	___awmod@dividend,f
  3097  056A  1903               	skipnz
  3098  056B  0AF3               	incf	___awmod@dividend+1,f
  3099  056C                     l1609:
  3100  056C  01F6               	clrf	___awmod@sign
  3101  056D  0AF6               	incf	___awmod@sign,f
  3102  056E                     l1611:
  3103  056E  1FF1               	btfss	___awmod@divisor+1,7
  3104  056F  2D71               	goto	u891
  3105  0570  2D72               	goto	u890
  3106  0571                     u891:
  3107  0571  2D77               	goto	l1615
  3108  0572                     u890:
  3109  0572                     l1613:
  3110  0572  09F0               	comf	___awmod@divisor,f
  3111  0573  09F1               	comf	___awmod@divisor+1,f
  3112  0574  0AF0               	incf	___awmod@divisor,f
  3113  0575  1903               	skipnz
  3114  0576  0AF1               	incf	___awmod@divisor+1,f
  3115  0577                     l1615:
  3116  0577  0870               	movf	___awmod@divisor,w
  3117  0578  0471               	iorwf	___awmod@divisor+1,w
  3118  0579  1903               	btfsc	3,2
  3119  057A  2D7C               	goto	u901
  3120  057B  2D7D               	goto	u900
  3121  057C                     u901:
  3122  057C  2DA6               	goto	l1633
  3123  057D                     u900:
  3124  057D                     l1617:
  3125  057D  01F5               	clrf	___awmod@counter
  3126  057E  0AF5               	incf	___awmod@counter,f
  3127  057F  2D89               	goto	l1623
  3128  0580                     l1619:
  3129  0580  3001               	movlw	1
  3130  0581                     u915:
  3131  0581  35F0               	lslf	___awmod@divisor,f
  3132  0582  0DF1               	rlf	___awmod@divisor+1,f
  3133  0583  0B89               	decfsz	9,f
  3134  0584  2D81               	goto	u915
  3135  0585                     l1621:
  3136  0585  3001               	movlw	1
  3137  0586  00F4               	movwf	??___awmod
  3138  0587  0874               	movf	??___awmod,w
  3139  0588  07F5               	addwf	___awmod@counter,f
  3140  0589                     l1623:
  3141  0589  1FF1               	btfss	___awmod@divisor+1,7
  3142  058A  2D8C               	goto	u921
  3143  058B  2D8D               	goto	u920
  3144  058C                     u921:
  3145  058C  2D80               	goto	l1619
  3146  058D                     u920:
  3147  058D                     l1625:
  3148  058D  0871               	movf	___awmod@divisor+1,w
  3149  058E  0273               	subwf	___awmod@dividend+1,w
  3150  058F  1D03               	skipz
  3151  0590  2D93               	goto	u935
  3152  0591  0870               	movf	___awmod@divisor,w
  3153  0592  0272               	subwf	___awmod@dividend,w
  3154  0593                     u935:
  3155  0593  1C03               	skipc
  3156  0594  2D96               	goto	u931
  3157  0595  2D97               	goto	u930
  3158  0596                     u931:
  3159  0596  2D9B               	goto	l1629
  3160  0597                     u930:
  3161  0597                     l1627:
  3162  0597  0870               	movf	___awmod@divisor,w
  3163  0598  02F2               	subwf	___awmod@dividend,f
  3164  0599  0871               	movf	___awmod@divisor+1,w
  3165  059A  3BF3               	subwfb	___awmod@dividend+1,f
  3166  059B                     l1629:
  3167  059B  3001               	movlw	1
  3168  059C                     u945:
  3169  059C  36F1               	lsrf	___awmod@divisor+1,f
  3170  059D  0CF0               	rrf	___awmod@divisor,f
  3171  059E  0B89               	decfsz	9,f
  3172  059F  2D9C               	goto	u945
  3173  05A0                     l1631:
  3174  05A0  3001               	movlw	1
  3175  05A1  02F5               	subwf	___awmod@counter,f
  3176  05A2  1D03               	btfss	3,2
  3177  05A3  2DA5               	goto	u951
  3178  05A4  2DA6               	goto	u950
  3179  05A5                     u951:
  3180  05A5  2D8D               	goto	l1625
  3181  05A6                     u950:
  3182  05A6                     l1633:
  3183  05A6  0876               	movf	___awmod@sign,w
  3184  05A7  1903               	btfsc	3,2
  3185  05A8  2DAA               	goto	u961
  3186  05A9  2DAB               	goto	u960
  3187  05AA                     u961:
  3188  05AA  2DB0               	goto	l1637
  3189  05AB                     u960:
  3190  05AB                     l1635:
  3191  05AB  09F2               	comf	___awmod@dividend,f
  3192  05AC  09F3               	comf	___awmod@dividend+1,f
  3193  05AD  0AF2               	incf	___awmod@dividend,f
  3194  05AE  1903               	skipnz
  3195  05AF  0AF3               	incf	___awmod@dividend+1,f
  3196  05B0                     l1637:
  3197  05B0  0873               	movf	___awmod@dividend+1,w
  3198  05B1  00F1               	movwf	?___awmod+1
  3199  05B2  0872               	movf	___awmod@dividend,w
  3200  05B3  00F0               	movwf	?___awmod
  3201  05B4                     l683:
  3202  05B4  0008               	return
  3203  05B5                     __end_of___awmod:
  3204                           
  3205                           	psect	text10
  3206  05B5                     __ptext10:	
  3207 ;; *************** function ___awdiv *****************
  3208 ;; Defined at:
  3209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  divisor         2    0[COMMON] int 
  3212 ;;  dividend        2    2[COMMON] int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  quotient        2    7[COMMON] int 
  3215 ;;  sign            1    6[COMMON] unsigned char 
  3216 ;;  counter         1    5[COMMON] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[COMMON] int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3226 ;;      Params:         4       0       0       0       0       0
  3227 ;;      Locals:         4       0       0       0       0       0
  3228 ;;      Temps:          1       0       0       0       0       0
  3229 ;;      Totals:         9       0       0       0       0       0
  3230 ;;Total ram usage:        9 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_rtc_display
  3236 ;;		_decimal_2_bcd
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function ___awdiv
  3242  05B5                     ___awdiv:
  3243  05B5                     l1559:	
  3244                           ;incstack = 0
  3245                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3246                           
  3247  05B5  01F6               	clrf	___awdiv@sign
  3248  05B6                     l1561:
  3249  05B6  1FF1               	btfss	___awdiv@divisor+1,7
  3250  05B7  2DB9               	goto	u781
  3251  05B8  2DBA               	goto	u780
  3252  05B9                     u781:
  3253  05B9  2DC1               	goto	l1567
  3254  05BA                     u780:
  3255  05BA                     l1563:
  3256  05BA  09F0               	comf	___awdiv@divisor,f
  3257  05BB  09F1               	comf	___awdiv@divisor+1,f
  3258  05BC  0AF0               	incf	___awdiv@divisor,f
  3259  05BD  1903               	skipnz
  3260  05BE  0AF1               	incf	___awdiv@divisor+1,f
  3261  05BF                     l1565:
  3262  05BF  01F6               	clrf	___awdiv@sign
  3263  05C0  0AF6               	incf	___awdiv@sign,f
  3264  05C1                     l1567:
  3265  05C1  1FF3               	btfss	___awdiv@dividend+1,7
  3266  05C2  2DC4               	goto	u791
  3267  05C3  2DC5               	goto	u790
  3268  05C4                     u791:
  3269  05C4  2DCE               	goto	l1573
  3270  05C5                     u790:
  3271  05C5                     l1569:
  3272  05C5  09F2               	comf	___awdiv@dividend,f
  3273  05C6  09F3               	comf	___awdiv@dividend+1,f
  3274  05C7  0AF2               	incf	___awdiv@dividend,f
  3275  05C8  1903               	skipnz
  3276  05C9  0AF3               	incf	___awdiv@dividend+1,f
  3277  05CA                     l1571:
  3278  05CA  3001               	movlw	1
  3279  05CB  00F4               	movwf	??___awdiv
  3280  05CC  0874               	movf	??___awdiv,w
  3281  05CD  06F6               	xorwf	___awdiv@sign,f
  3282  05CE                     l1573:
  3283  05CE  01F7               	clrf	___awdiv@quotient
  3284  05CF  01F8               	clrf	___awdiv@quotient+1
  3285  05D0                     l1575:
  3286  05D0  0870               	movf	___awdiv@divisor,w
  3287  05D1  0471               	iorwf	___awdiv@divisor+1,w
  3288  05D2  1903               	btfsc	3,2
  3289  05D3  2DD5               	goto	u801
  3290  05D4  2DD6               	goto	u800
  3291  05D5                     u801:
  3292  05D5  2E05               	goto	l1595
  3293  05D6                     u800:
  3294  05D6                     l1577:
  3295  05D6  01F5               	clrf	___awdiv@counter
  3296  05D7  0AF5               	incf	___awdiv@counter,f
  3297  05D8  2DE2               	goto	l1583
  3298  05D9                     l1579:
  3299  05D9  3001               	movlw	1
  3300  05DA                     u815:
  3301  05DA  35F0               	lslf	___awdiv@divisor,f
  3302  05DB  0DF1               	rlf	___awdiv@divisor+1,f
  3303  05DC  0B89               	decfsz	9,f
  3304  05DD  2DDA               	goto	u815
  3305  05DE                     l1581:
  3306  05DE  3001               	movlw	1
  3307  05DF  00F4               	movwf	??___awdiv
  3308  05E0  0874               	movf	??___awdiv,w
  3309  05E1  07F5               	addwf	___awdiv@counter,f
  3310  05E2                     l1583:
  3311  05E2  1FF1               	btfss	___awdiv@divisor+1,7
  3312  05E3  2DE5               	goto	u821
  3313  05E4  2DE6               	goto	u820
  3314  05E5                     u821:
  3315  05E5  2DD9               	goto	l1579
  3316  05E6                     u820:
  3317  05E6                     l1585:
  3318  05E6  3001               	movlw	1
  3319  05E7                     u835:
  3320  05E7  35F7               	lslf	___awdiv@quotient,f
  3321  05E8  0DF8               	rlf	___awdiv@quotient+1,f
  3322  05E9  0B89               	decfsz	9,f
  3323  05EA  2DE7               	goto	u835
  3324  05EB  0871               	movf	___awdiv@divisor+1,w
  3325  05EC  0273               	subwf	___awdiv@dividend+1,w
  3326  05ED  1D03               	skipz
  3327  05EE  2DF1               	goto	u845
  3328  05EF  0870               	movf	___awdiv@divisor,w
  3329  05F0  0272               	subwf	___awdiv@dividend,w
  3330  05F1                     u845:
  3331  05F1  1C03               	skipc
  3332  05F2  2DF4               	goto	u841
  3333  05F3  2DF5               	goto	u840
  3334  05F4                     u841:
  3335  05F4  2DFA               	goto	l1591
  3336  05F5                     u840:
  3337  05F5                     l1587:
  3338  05F5  0870               	movf	___awdiv@divisor,w
  3339  05F6  02F2               	subwf	___awdiv@dividend,f
  3340  05F7  0871               	movf	___awdiv@divisor+1,w
  3341  05F8  3BF3               	subwfb	___awdiv@dividend+1,f
  3342  05F9                     l1589:
  3343  05F9  1477               	bsf	___awdiv@quotient,0
  3344  05FA                     l1591:
  3345  05FA  3001               	movlw	1
  3346  05FB                     u855:
  3347  05FB  36F1               	lsrf	___awdiv@divisor+1,f
  3348  05FC  0CF0               	rrf	___awdiv@divisor,f
  3349  05FD  0B89               	decfsz	9,f
  3350  05FE  2DFB               	goto	u855
  3351  05FF                     l1593:
  3352  05FF  3001               	movlw	1
  3353  0600  02F5               	subwf	___awdiv@counter,f
  3354  0601  1D03               	btfss	3,2
  3355  0602  2E04               	goto	u861
  3356  0603  2E05               	goto	u860
  3357  0604                     u861:
  3358  0604  2DE6               	goto	l1585
  3359  0605                     u860:
  3360  0605                     l1595:
  3361  0605  0876               	movf	___awdiv@sign,w
  3362  0606  1903               	btfsc	3,2
  3363  0607  2E09               	goto	u871
  3364  0608  2E0A               	goto	u870
  3365  0609                     u871:
  3366  0609  2E0F               	goto	l1599
  3367  060A                     u870:
  3368  060A                     l1597:
  3369  060A  09F7               	comf	___awdiv@quotient,f
  3370  060B  09F8               	comf	___awdiv@quotient+1,f
  3371  060C  0AF7               	incf	___awdiv@quotient,f
  3372  060D  1903               	skipnz
  3373  060E  0AF8               	incf	___awdiv@quotient+1,f
  3374  060F                     l1599:
  3375  060F  0878               	movf	___awdiv@quotient+1,w
  3376  0610  00F1               	movwf	?___awdiv+1
  3377  0611  0877               	movf	___awdiv@quotient,w
  3378  0612  00F0               	movwf	?___awdiv
  3379  0613                     l670:
  3380  0613  0008               	return
  3381  0614                     __end_of___awdiv:
  3382                           
  3383                           	psect	text11
  3384  051C                     __ptext11:	
  3385 ;; *************** function _read_date *****************
  3386 ;; Defined at:
  3387 ;;		line 78 in file "DS3231.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  date            1    wreg     PTR struct Date
  3390 ;;		 -> main@date(6), 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  date            1   12[COMMON] PTR struct Date
  3393 ;;		 -> main@date(6), 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3403 ;;      Params:         0       0       0       0       0       0
  3404 ;;      Locals:         1       0       0       0       0       0
  3405 ;;      Temps:          1       0       0       0       0       0
  3406 ;;      Totals:         2       0       0       0       0       0
  3407 ;;Total ram usage:        2 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    3
  3410 ;; This function calls:
  3411 ;;		__read
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _read_date
  3419  051C                     _read_date:
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3423                           ;read_date@date stored from wreg
  3424  051C  00FC               	movwf	read_date@date
  3425  051D                     l1821:
  3426                           
  3427                           ;DS3231.c: 79: date->year = _read(6);
  3428  051D  3006               	movlw	6
  3429  051E  3183  2344  3185   	fcall	__read
  3430  0521  00FB               	movwf	??_read_date
  3431  0522  087C               	movf	read_date@date,w
  3432  0523  0086               	movwf	6
  3433  0524  0187               	clrf	7
  3434  0525  087B               	movf	??_read_date,w
  3435  0526  0081               	movwf	1
  3436                           
  3437                           ;DS3231.c: 80: date->month = _read(5);
  3438  0527  3005               	movlw	5
  3439  0528  3183  2344  3185   	fcall	__read
  3440  052B  00FB               	movwf	??_read_date
  3441  052C  0A7C               	incf	read_date@date,w
  3442  052D  0086               	movwf	6
  3443  052E  0187               	clrf	7
  3444  052F  087B               	movf	??_read_date,w
  3445  0530  0081               	movwf	1
  3446                           
  3447                           ;DS3231.c: 81: date->day = _read(4);
  3448  0531  3004               	movlw	4
  3449  0532  3183  2344  3185   	fcall	__read
  3450  0535  00FB               	movwf	??_read_date
  3451  0536  087C               	movf	read_date@date,w
  3452  0537  3E02               	addlw	2
  3453  0538  0086               	movwf	6
  3454  0539  0187               	clrf	7
  3455  053A  087B               	movf	??_read_date,w
  3456  053B  0081               	movwf	1
  3457  053C                     l1823:
  3458                           
  3459                           ;DS3231.c: 82: _read(3);
  3460  053C  3003               	movlw	3
  3461  053D  3183  2344  3185   	fcall	__read
  3462  0540                     l1825:
  3463                           
  3464                           ;DS3231.c: 83: date->hour = _read(2);
  3465  0540  3002               	movlw	2
  3466  0541  3183  2344  3185   	fcall	__read
  3467  0544  00FB               	movwf	??_read_date
  3468  0545  087C               	movf	read_date@date,w
  3469  0546  3E03               	addlw	3
  3470  0547  0086               	movwf	6
  3471  0548  0187               	clrf	7
  3472  0549  087B               	movf	??_read_date,w
  3473  054A  0081               	movwf	1
  3474  054B                     l1827:
  3475                           
  3476                           ;DS3231.c: 84: date->min = _read(1);
  3477  054B  3001               	movlw	1
  3478  054C  3183  2344  3185   	fcall	__read
  3479  054F  00FB               	movwf	??_read_date
  3480  0550  087C               	movf	read_date@date,w
  3481  0551  3E04               	addlw	4
  3482  0552  0086               	movwf	6
  3483  0553  0187               	clrf	7
  3484  0554  087B               	movf	??_read_date,w
  3485  0555  0081               	movwf	1
  3486  0556                     l1829:
  3487                           
  3488                           ;DS3231.c: 85: date->sec = _read(0);
  3489  0556  3000               	movlw	0
  3490  0557  3183  2344  3185   	fcall	__read
  3491  055A  00FB               	movwf	??_read_date
  3492  055B  087C               	movf	read_date@date,w
  3493  055C  3E05               	addlw	5
  3494  055D  0086               	movwf	6
  3495  055E  0187               	clrf	7
  3496  055F  087B               	movf	??_read_date,w
  3497  0560  0081               	movwf	1
  3498  0561                     l198:
  3499  0561  0008               	return
  3500  0562                     __end_of_read_date:
  3501                           
  3502                           	psect	text12
  3503  0344                     __ptext12:	
  3504 ;; *************** function __read *****************
  3505 ;; Defined at:
  3506 ;;		line 59 in file "DS3231.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  address         1    wreg     unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  address         1    9[COMMON] unsigned char 
  3511 ;;  data            1   10[COMMON] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      unsigned char 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3521 ;;      Params:         0       0       0       0       0       0
  3522 ;;      Locals:         2       0       0       0       0       0
  3523 ;;      Temps:          1       0       0       0       0       0
  3524 ;;      Totals:         3       0       0       0       0       0
  3525 ;;Total ram usage:        3 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		_bcd_2_decimal
  3530 ;;		_i2c_read
  3531 ;;		_i2c_repeated_start
  3532 ;;		_i2c_start
  3533 ;;		_i2c_stop
  3534 ;;		_i2c_write
  3535 ;; This function is called by:
  3536 ;;		_read_date
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function __read
  3542  0344                     __read:
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3546                           ;__read@address stored from wreg
  3547  0344  00F9               	movwf	__read@address
  3548  0345                     l1725:
  3549                           
  3550                           ;DS3231.c: 60: uint8_t data;;DS3231.c: 61: i2c_start();
  3551  0345  3182  2270  3183   	fcall	_i2c_start
  3552                           
  3553                           ;DS3231.c: 62: i2c_write(0xD0);
  3554  0348  30D0               	movlw	208
  3555  0349  3182  2286  3183   	fcall	_i2c_write
  3556                           
  3557                           ;DS3231.c: 63: i2c_write(address);
  3558  034C  0879               	movf	__read@address,w
  3559  034D  3182  2286  3183   	fcall	_i2c_write
  3560                           
  3561                           ;DS3231.c: 65: i2c_repeated_start();
  3562  0350  3182  2266  3183   	fcall	_i2c_repeated_start
  3563                           
  3564                           ;DS3231.c: 67: i2c_write(0xD0 | 0x01);
  3565  0353  30D1               	movlw	209
  3566  0354  3182  2286  3183   	fcall	_i2c_write
  3567                           
  3568                           ;DS3231.c: 68: data = bcd_2_decimal(i2c_read(1));
  3569  0357  3001               	movlw	1
  3570  0358  3183  230E  3183   	fcall	_i2c_read
  3571  035B  3182  22CE  3183   	fcall	_bcd_2_decimal
  3572  035E  00F8               	movwf	??__read
  3573  035F  0878               	movf	??__read,w
  3574  0360  00FA               	movwf	__read@data
  3575  0361                     l1727:
  3576                           
  3577                           ;DS3231.c: 69: i2c_stop();
  3578  0361  3182  2229  3183   	fcall	_i2c_stop
  3579                           
  3580                           ;DS3231.c: 71: return data;
  3581  0364  087A               	movf	__read@data,w
  3582  0365                     l195:
  3583  0365  0008               	return
  3584  0366                     __end_of__read:
  3585                           
  3586                           	psect	text13
  3587  0286                     __ptext13:	
  3588 ;; *************** function _i2c_write *****************
  3589 ;; Defined at:
  3590 ;;		line 26 in file "i2c.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  data            1    wreg     unsigned char 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  data            1    0[COMMON] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3604 ;;      Params:         0       0       0       0       0       0
  3605 ;;      Locals:         1       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0
  3607 ;;      Totals:         1       0       0       0       0       0
  3608 ;;Total ram usage:        1 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    1
  3611 ;; This function calls:
  3612 ;;		_i2c_wait
  3613 ;; This function is called by:
  3614 ;;		_write_date
  3615 ;;		__read
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _i2c_write
  3621  0286                     _i2c_write:
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3625                           ;i2c_write@data stored from wreg
  3626  0286  00F0               	movwf	i2c_write@data
  3627  0287                     l1501:
  3628                           
  3629                           ;i2c.c: 27: SSP2BUF = data;
  3630  0287  0870               	movf	i2c_write@data,w
  3631  0288  0024               	movlb	4	; select bank4
  3632  0289  0099               	movwf	25	;volatile
  3633  028A                     l159:	
  3634                           ;i2c.c: 28: while(SSP2STATbits.BF);
  3635                           
  3636  028A  181C               	btfsc	28,0	;volatile
  3637  028B  2A8D               	goto	u681
  3638  028C  2A8E               	goto	u680
  3639  028D                     u681:
  3640  028D  2A8A               	goto	l159
  3641  028E                     u680:
  3642  028E                     l162:
  3643  028E  1B1E               	btfsc	30,6	;volatile
  3644  028F  2A91               	goto	u691
  3645  0290  2A92               	goto	u690
  3646  0291                     u691:
  3647  0291  2A8E               	goto	l162
  3648  0292                     u690:
  3649  0292                     l1503:
  3650                           
  3651                           ;i2c.c: 30: i2c_wait();
  3652  0292  3182  227A  3182   	fcall	_i2c_wait
  3653  0295                     l165:
  3654  0295  0008               	return
  3655  0296                     __end_of_i2c_write:
  3656                           
  3657                           	psect	text14
  3658  0229                     __ptext14:	
  3659 ;; *************** function _i2c_stop *****************
  3660 ;; Defined at:
  3661 ;;		line 15 in file "i2c.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		None
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3675 ;;      Params:         0       0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_write_date
  3685 ;;		__read
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _i2c_stop
  3691  0229                     _i2c_stop:
  3692  0229                     l1495:	
  3693                           ;incstack = 0
  3694                           ; Regs used in _i2c_stop: []
  3695                           
  3696                           
  3697                           ;i2c.c: 16: SSP2CON2bits.PEN = 1;
  3698  0229  0024               	movlb	4	; select bank4
  3699  022A  151E               	bsf	30,2	;volatile
  3700  022B                     l147:	
  3701                           ;i2c.c: 17: while(SSP2CON2bits.PEN);
  3702                           
  3703  022B  191E               	btfsc	30,2	;volatile
  3704  022C  2A2E               	goto	u661
  3705  022D  2A2F               	goto	u660
  3706  022E                     u661:
  3707  022E  2A2B               	goto	l147
  3708  022F                     u660:
  3709  022F                     l150:
  3710  022F  0008               	return
  3711  0230                     __end_of_i2c_stop:
  3712                           
  3713                           	psect	text15
  3714  0270                     __ptext15:	
  3715 ;; *************** function _i2c_start *****************
  3716 ;; Defined at:
  3717 ;;		line 9 in file "i2c.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3731 ;;      Params:         0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    1
  3738 ;; This function calls:
  3739 ;;		_i2c_wait
  3740 ;; This function is called by:
  3741 ;;		_write_date
  3742 ;;		__read
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _i2c_start
  3748  0270                     _i2c_start:
  3749  0270                     l1491:	
  3750                           ;incstack = 0
  3751                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3752                           
  3753                           
  3754                           ;i2c.c: 10: i2c_wait();
  3755  0270  3182  227A  3182   	fcall	_i2c_wait
  3756  0273                     l1493:
  3757                           
  3758                           ;i2c.c: 11: SSP2CON2bits.SEN = 1;
  3759  0273  0024               	movlb	4	; select bank4
  3760  0274  141E               	bsf	30,0	;volatile
  3761  0275                     l141:	
  3762                           ;i2c.c: 12: while(SSP2CON2bits.SEN);
  3763                           
  3764  0275  181E               	btfsc	30,0	;volatile
  3765  0276  2A78               	goto	u651
  3766  0277  2A79               	goto	u650
  3767  0278                     u651:
  3768  0278  2A75               	goto	l141
  3769  0279                     u650:
  3770  0279                     l144:
  3771  0279  0008               	return
  3772  027A                     __end_of_i2c_start:
  3773                           
  3774                           	psect	text16
  3775  0266                     __ptext16:	
  3776 ;; *************** function _i2c_repeated_start *****************
  3777 ;; Defined at:
  3778 ;;		line 20 in file "i2c.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3792 ;;      Params:         0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    1
  3799 ;; This function calls:
  3800 ;;		_i2c_wait
  3801 ;; This function is called by:
  3802 ;;		__read
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _i2c_repeated_start
  3808  0266                     _i2c_repeated_start:
  3809  0266                     l1497:	
  3810                           ;incstack = 0
  3811                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3812                           
  3813                           
  3814                           ;i2c.c: 21: i2c_wait();
  3815  0266  3182  227A  3182   	fcall	_i2c_wait
  3816  0269                     l1499:
  3817                           
  3818                           ;i2c.c: 22: SSP2CON2bits.RSEN = 1;
  3819  0269  0024               	movlb	4	; select bank4
  3820  026A  149E               	bsf	30,1	;volatile
  3821  026B                     l153:	
  3822                           ;i2c.c: 23: while(SSP2CON2bits.RSEN);
  3823                           
  3824  026B  189E               	btfsc	30,1	;volatile
  3825  026C  2A6E               	goto	u671
  3826  026D  2A6F               	goto	u670
  3827  026E                     u671:
  3828  026E  2A6B               	goto	l153
  3829  026F                     u670:
  3830  026F                     l156:
  3831  026F  0008               	return
  3832  0270                     __end_of_i2c_repeated_start:
  3833                           
  3834                           	psect	text17
  3835  030E                     __ptext17:	
  3836 ;; *************** function _i2c_read *****************
  3837 ;; Defined at:
  3838 ;;		line 33 in file "i2c.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  ack             1    wreg     unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  ack             1    1[COMMON] unsigned char 
  3843 ;;  data            1    2[COMMON] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      unsigned char 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3853 ;;      Params:         0       0       0       0       0       0
  3854 ;;      Locals:         2       0       0       0       0       0
  3855 ;;      Temps:          1       0       0       0       0       0
  3856 ;;      Totals:         3       0       0       0       0       0
  3857 ;;Total ram usage:        3 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    1
  3860 ;; This function calls:
  3861 ;;		_i2c_wait
  3862 ;; This function is called by:
  3863 ;;		__read
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _i2c_read
  3869  030E                     _i2c_read:
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3873                           ;i2c_read@ack stored from wreg
  3874  030E  00F1               	movwf	i2c_read@ack
  3875  030F                     l1505:
  3876                           
  3877                           ;i2c.c: 34: uint8_t data;;i2c.c: 36: SSP2CON2bits.ACKDT = ack;
  3878  030F  0C71               	rrf	i2c_read@ack,w
  3879  0310  0024               	movlb	4	; select bank4
  3880  0311  1C03               	skipc
  3881  0312  129E               	bcf	30,5	;volatile
  3882  0313  1803               	skipnc
  3883  0314  169E               	bsf	30,5	;volatile
  3884  0315                     l1507:
  3885                           
  3886                           ;i2c.c: 37: SSP2CON2bits.RCEN = 1;
  3887  0315  159E               	bsf	30,3	;volatile
  3888  0316                     l168:	
  3889                           ;i2c.c: 38: while(!SSP2STATbits.BF);
  3890                           
  3891  0316  1C1C               	btfss	28,0	;volatile
  3892  0317  2B19               	goto	u701
  3893  0318  2B1A               	goto	u700
  3894  0319                     u701:
  3895  0319  2B16               	goto	l168
  3896  031A                     u700:
  3897  031A                     l170:
  3898                           
  3899                           ;i2c.c: 39: SSP2CON2bits.ACKEN = 1;
  3900  031A  161E               	bsf	30,4	;volatile
  3901  031B                     l1509:
  3902                           
  3903                           ;i2c.c: 40: data = SSP2BUF;
  3904  031B  0819               	movf	25,w	;volatile
  3905  031C  00F0               	movwf	??_i2c_read
  3906  031D  0870               	movf	??_i2c_read,w
  3907  031E  00F2               	movwf	i2c_read@data
  3908  031F                     l1511:
  3909                           
  3910                           ;i2c.c: 41: SSP2CON1bits.SSPOV = 0;
  3911  031F  131D               	bcf	29,6	;volatile
  3912  0320                     l1513:
  3913                           
  3914                           ;i2c.c: 42: i2c_wait();
  3915  0320  3182  227A  3183   	fcall	_i2c_wait
  3916  0323                     l1515:
  3917                           
  3918                           ;i2c.c: 44: return data;
  3919  0323  0872               	movf	i2c_read@data,w
  3920  0324                     l171:
  3921  0324  0008               	return
  3922  0325                     __end_of_i2c_read:
  3923                           
  3924                           	psect	text18
  3925  027A                     __ptext18:	
  3926 ;; *************** function _i2c_wait *****************
  3927 ;; Defined at:
  3928 ;;		line 5 in file "i2c.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3942 ;;      Params:         0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_i2c_start
  3952 ;;		_i2c_repeated_start
  3953 ;;		_i2c_write
  3954 ;;		_i2c_read
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _i2c_wait
  3960  027A                     _i2c_wait:
  3961  027A                     l1471:	
  3962                           ;incstack = 0
  3963                           ; Regs used in _i2c_wait: [wreg+status,2]
  3964                           
  3965  027A                     l1473:	
  3966                           ;i2c.c: 6: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  3967                           
  3968  027A  0024               	movlb	4	; select bank4
  3969  027B  081E               	movf	30,w	;volatile
  3970  027C  391F               	andlw	31
  3971  027D  1D03               	btfss	3,2
  3972  027E  2A80               	goto	u611
  3973  027F  2A81               	goto	u610
  3974  0280                     u611:
  3975  0280  2A7A               	goto	l1473
  3976  0281                     u610:
  3977  0281                     l1475:
  3978  0281  191C               	btfsc	28,2	;volatile
  3979  0282  2A84               	goto	u621
  3980  0283  2A85               	goto	u620
  3981  0284                     u621:
  3982  0284  2A7A               	goto	l1473
  3983  0285                     u620:
  3984  0285                     l138:
  3985  0285  0008               	return
  3986  0286                     __end_of_i2c_wait:
  3987                           
  3988                           	psect	text19
  3989  02CE                     __ptext19:	
  3990 ;; *************** function _bcd_2_decimal *****************
  3991 ;; Defined at:
  3992 ;;		line 19 in file "DS3231.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  number          1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  number          1    7[COMMON] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      unsigned char 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4006 ;;      Params:         0       0       0       0       0       0
  4007 ;;      Locals:         1       0       0       0       0       0
  4008 ;;      Temps:          3       0       0       0       0       0
  4009 ;;      Totals:         4       0       0       0       0       0
  4010 ;;Total ram usage:        4 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    1
  4013 ;; This function calls:
  4014 ;;		___bmul
  4015 ;; This function is called by:
  4016 ;;		__read
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _bcd_2_decimal
  4022  02CE                     _bcd_2_decimal:
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  4026                           ;bcd_2_decimal@number stored from wreg
  4027  02CE  00F7               	movwf	bcd_2_decimal@number
  4028  02CF                     l1519:
  4029                           
  4030                           ;DS3231.c: 20: return ((number >> 4) * 10 + (number & 0x0F));
  4031  02CF  300F               	movlw	15
  4032  02D0  0577               	andwf	bcd_2_decimal@number,w
  4033  02D1  00F4               	movwf	??_bcd_2_decimal
  4034  02D2  300A               	movlw	10
  4035  02D3  00F5               	movwf	??_bcd_2_decimal+1
  4036  02D4  0875               	movf	??_bcd_2_decimal+1,w
  4037  02D5  00F0               	movwf	___bmul@multiplicand
  4038  02D6  0877               	movf	bcd_2_decimal@number,w
  4039  02D7  00F6               	movwf	??_bcd_2_decimal+2
  4040  02D8  3004               	movlw	4
  4041  02D9                     u715:
  4042  02D9  36F6               	lsrf	??_bcd_2_decimal+2,f
  4043  02DA  0B89               	decfsz	9,f
  4044  02DB  2AD9               	goto	u715
  4045  02DC  0876               	movf	??_bcd_2_decimal+2,w
  4046  02DD  3182  22E2  3182   	fcall	___bmul
  4047  02E0  0774               	addwf	??_bcd_2_decimal,w
  4048  02E1                     l186:
  4049  02E1  0008               	return
  4050  02E2                     __end_of_bcd_2_decimal:
  4051                           
  4052                           	psect	text20
  4053  02E2                     __ptext20:	
  4054 ;; *************** function ___bmul *****************
  4055 ;; Defined at:
  4056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  multiplier      1    wreg     unsigned char 
  4059 ;;  multiplicand    1    0[COMMON] unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  multiplier      1    3[COMMON] unsigned char 
  4062 ;;  product         1    2[COMMON] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      unsigned char 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4072 ;;      Params:         1       0       0       0       0       0
  4073 ;;      Locals:         2       0       0       0       0       0
  4074 ;;      Temps:          1       0       0       0       0       0
  4075 ;;      Totals:         4       0       0       0       0       0
  4076 ;;Total ram usage:        4 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_bcd_2_decimal
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function ___bmul
  4087  02E2                     ___bmul:
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4091                           ;___bmul@multiplier stored from wreg
  4092  02E2  00F3               	movwf	___bmul@multiplier
  4093  02E3                     l1477:
  4094  02E3  01F2               	clrf	___bmul@product
  4095  02E4                     l1479:
  4096  02E4  1C73               	btfss	___bmul@multiplier,0
  4097  02E5  2AE7               	goto	u631
  4098  02E6  2AE8               	goto	u630
  4099  02E7                     u631:
  4100  02E7  2AEC               	goto	l1483
  4101  02E8                     u630:
  4102  02E8                     l1481:
  4103  02E8  0870               	movf	___bmul@multiplicand,w
  4104  02E9  00F1               	movwf	??___bmul
  4105  02EA  0871               	movf	??___bmul,w
  4106  02EB  07F2               	addwf	___bmul@product,f
  4107  02EC                     l1483:
  4108  02EC  1003               	clrc
  4109  02ED  0DF0               	rlf	___bmul@multiplicand,f
  4110  02EE                     l1485:
  4111  02EE  1003               	clrc
  4112  02EF  0CF3               	rrf	___bmul@multiplier,f
  4113  02F0  0873               	movf	___bmul@multiplier,w
  4114  02F1  1D03               	btfss	3,2
  4115  02F2  2AF4               	goto	u641
  4116  02F3  2AF5               	goto	u640
  4117  02F4                     u641:
  4118  02F4  2AE4               	goto	l1479
  4119  02F5                     u640:
  4120  02F5                     l1487:
  4121  02F5  0872               	movf	___bmul@product,w
  4122  02F6                     l543:
  4123  02F6  0008               	return
  4124  02F7                     __end_of___bmul:
  4125                           
  4126                           	psect	text21
  4127  06E2                     __ptext21:	
  4128 ;; *************** function _money_display *****************
  4129 ;; Defined at:
  4130 ;;		line 92 in file "main.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  value           2   11[COMMON] unsigned int 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4144 ;;      Params:         0       0       0       0       0       0
  4145 ;;      Locals:         2       0       0       0       0       0
  4146 ;;      Temps:          1       0       0       0       0       0
  4147 ;;      Totals:         3       0       0       0       0       0
  4148 ;;Total ram usage:        3 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    2
  4151 ;; This function calls:
  4152 ;;		___lwdiv
  4153 ;;		___lwmod
  4154 ;;		_encode_digit
  4155 ;;		_m_set_segments
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _money_display
  4163  06E2                     _money_display:
  4164  06E2                     l2037:	
  4165                           ;incstack = 0
  4166                           ; Regs used in _money_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4167                           
  4168                           
  4169                           ;main.c: 93: uint16_t value = money;
  4170  06E2  0020               	movlb	0	; select bank0
  4171  06E3  0843               	movf	_money+1,w
  4172  06E4  00FC               	movwf	money_display@value+1
  4173  06E5  0842               	movf	_money,w
  4174  06E6  00FB               	movwf	money_display@value
  4175  06E7                     l2039:
  4176                           
  4177                           ;main.c: 95: m_segments[0] = encode_digit(value / 1000);
  4178  06E7  30E8               	movlw	232
  4179  06E8  00F0               	movwf	___lwdiv@divisor
  4180  06E9  3003               	movlw	3
  4181  06EA  00F1               	movwf	___lwdiv@divisor+1
  4182  06EB  087C               	movf	money_display@value+1,w
  4183  06EC  00F3               	movwf	___lwdiv@dividend+1
  4184  06ED  087B               	movf	money_display@value,w
  4185  06EE  00F2               	movwf	___lwdiv@dividend
  4186  06EF  3184  24E0  3186   	fcall	___lwdiv
  4187  06F2  0870               	movf	?___lwdiv,w
  4188  06F3  3182  2230  3186   	fcall	_encode_digit
  4189  06F6  00FA               	movwf	??_money_display
  4190  06F7  087A               	movf	??_money_display,w
  4191  06F8  0020               	movlb	0	; select bank0
  4192  06F9  00AA               	movwf	_m_segments
  4193  06FA                     l2041:
  4194                           
  4195                           ;main.c: 96: value %= 1000;
  4196  06FA  30E8               	movlw	232
  4197  06FB  00F0               	movwf	___lwmod@divisor
  4198  06FC  3003               	movlw	3
  4199  06FD  00F1               	movwf	___lwmod@divisor+1
  4200  06FE  087C               	movf	money_display@value+1,w
  4201  06FF  00F3               	movwf	___lwmod@dividend+1
  4202  0700  087B               	movf	money_display@value,w
  4203  0701  00F2               	movwf	___lwmod@dividend
  4204  0702  3183  2394  3186   	fcall	___lwmod
  4205  0705  0871               	movf	?___lwmod+1,w
  4206  0706  00FC               	movwf	money_display@value+1
  4207  0707  0870               	movf	?___lwmod,w
  4208  0708  00FB               	movwf	money_display@value
  4209  0709                     l2043:
  4210                           
  4211                           ;main.c: 97: m_segments[1] = encode_digit(value / 100);
  4212  0709  3064               	movlw	100
  4213  070A  00F0               	movwf	___lwdiv@divisor
  4214  070B  3000               	movlw	0
  4215  070C  00F1               	movwf	___lwdiv@divisor+1
  4216  070D  087C               	movf	money_display@value+1,w
  4217  070E  00F3               	movwf	___lwdiv@dividend+1
  4218  070F  087B               	movf	money_display@value,w
  4219  0710  00F2               	movwf	___lwdiv@dividend
  4220  0711  3184  24E0  3186   	fcall	___lwdiv
  4221  0714  0870               	movf	?___lwdiv,w
  4222  0715  3182  2230  3186   	fcall	_encode_digit
  4223  0718  00FA               	movwf	??_money_display
  4224  0719  087A               	movf	??_money_display,w
  4225  071A  0020               	movlb	0	; select bank0
  4226  071B  00AB               	movwf	_m_segments+1
  4227  071C                     l2045:
  4228                           
  4229                           ;main.c: 98: value %= 100;
  4230  071C  3064               	movlw	100
  4231  071D  00F0               	movwf	___lwmod@divisor
  4232  071E  3000               	movlw	0
  4233  071F  00F1               	movwf	___lwmod@divisor+1
  4234  0720  087C               	movf	money_display@value+1,w
  4235  0721  00F3               	movwf	___lwmod@dividend+1
  4236  0722  087B               	movf	money_display@value,w
  4237  0723  00F2               	movwf	___lwmod@dividend
  4238  0724  3183  2394  3186   	fcall	___lwmod
  4239  0727  0871               	movf	?___lwmod+1,w
  4240  0728  00FC               	movwf	money_display@value+1
  4241  0729  0870               	movf	?___lwmod,w
  4242  072A  00FB               	movwf	money_display@value
  4243  072B                     l2047:
  4244                           
  4245                           ;main.c: 99: m_segments[2] = encode_digit(value / 10);
  4246  072B  300A               	movlw	10
  4247  072C  00F0               	movwf	___lwdiv@divisor
  4248  072D  3000               	movlw	0
  4249  072E  00F1               	movwf	___lwdiv@divisor+1
  4250  072F  087C               	movf	money_display@value+1,w
  4251  0730  00F3               	movwf	___lwdiv@dividend+1
  4252  0731  087B               	movf	money_display@value,w
  4253  0732  00F2               	movwf	___lwdiv@dividend
  4254  0733  3184  24E0  3186   	fcall	___lwdiv
  4255  0736  0870               	movf	?___lwdiv,w
  4256  0737  3182  2230  3186   	fcall	_encode_digit
  4257  073A  00FA               	movwf	??_money_display
  4258  073B  087A               	movf	??_money_display,w
  4259  073C  0020               	movlb	0	; select bank0
  4260  073D  00AC               	movwf	_m_segments+2
  4261  073E                     l2049:
  4262                           
  4263                           ;main.c: 100: value %= 10;
  4264  073E  300A               	movlw	10
  4265  073F  00F0               	movwf	___lwmod@divisor
  4266  0740  3000               	movlw	0
  4267  0741  00F1               	movwf	___lwmod@divisor+1
  4268  0742  087C               	movf	money_display@value+1,w
  4269  0743  00F3               	movwf	___lwmod@dividend+1
  4270  0744  087B               	movf	money_display@value,w
  4271  0745  00F2               	movwf	___lwmod@dividend
  4272  0746  3183  2394  3186   	fcall	___lwmod
  4273  0749  0871               	movf	?___lwmod+1,w
  4274  074A  00FC               	movwf	money_display@value+1
  4275  074B  0870               	movf	?___lwmod,w
  4276  074C  00FB               	movwf	money_display@value
  4277  074D                     l2051:
  4278                           
  4279                           ;main.c: 101: m_segments[3] = encode_digit(value);
  4280  074D  087B               	movf	money_display@value,w
  4281  074E  3182  2230  3186   	fcall	_encode_digit
  4282  0751  00FA               	movwf	??_money_display
  4283  0752  087A               	movf	??_money_display,w
  4284  0753  0020               	movlb	0	; select bank0
  4285  0754  00AD               	movwf	_m_segments+3
  4286  0755                     l2053:
  4287                           
  4288                           ;main.c: 104: m_set_segments(m_segments, 4, 0);
  4289  0755  3004               	movlw	4
  4290  0756  00FA               	movwf	??_money_display
  4291  0757  087A               	movf	??_money_display,w
  4292  0758  00F5               	movwf	m_set_segments@length
  4293  0759  01F6               	clrf	m_set_segments@pos
  4294  075A  302A               	movlw	(low (_m_segments| 0))& (0+255)
  4295  075B  3184  246C  3186   	fcall	_m_set_segments
  4296  075E                     l120:
  4297  075E  0008               	return
  4298  075F                     __end_of_money_display:
  4299                           
  4300                           	psect	text22
  4301  046C                     __ptext22:	
  4302 ;; *************** function _m_set_segments *****************
  4303 ;; Defined at:
  4304 ;;		line 84 in file "TM1637_m.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  segments        1    wreg     PTR const unsigned char 
  4307 ;;		 -> m_segments(4), 
  4308 ;;  length          1    5[COMMON] unsigned char 
  4309 ;;  pos             1    6[COMMON] unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  segments        1    8[COMMON] PTR const unsigned char 
  4312 ;;		 -> m_segments(4), 
  4313 ;;  k               1    9[COMMON] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4323 ;;      Params:         2       0       0       0       0       0
  4324 ;;      Locals:         2       0       0       0       0       0
  4325 ;;      Temps:          1       0       0       0       0       0
  4326 ;;      Totals:         5       0       0       0       0       0
  4327 ;;Total ram usage:        5 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    1
  4330 ;; This function calls:
  4331 ;;		_m_start
  4332 ;;		_m_stop
  4333 ;;		_m_write_data
  4334 ;; This function is called by:
  4335 ;;		_money_display
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _m_set_segments
  4341  046C                     _m_set_segments:
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _m_set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4345                           ;m_set_segments@segments stored from wreg
  4346  046C  00F8               	movwf	m_set_segments@segments
  4347  046D                     l1965:
  4348                           
  4349                           ;TM1637_m.c: 87: m_start();
  4350  046D  3182  2238  3184   	fcall	_m_start
  4351  0470                     l1967:
  4352                           
  4353                           ;TM1637_m.c: 88: m_write_data(0x40);
  4354  0470  3040               	movlw	64
  4355  0471  3183  23C8  3184   	fcall	_m_write_data
  4356  0474                     l1969:
  4357                           
  4358                           ;TM1637_m.c: 89: m_stop();
  4359  0474  3182  2241  3184   	fcall	_m_stop
  4360  0477                     l1971:
  4361                           
  4362                           ;TM1637_m.c: 92: m_start();
  4363  0477  3182  2238  3184   	fcall	_m_start
  4364  047A                     l1973:
  4365                           
  4366                           ;TM1637_m.c: 93: m_write_data(0xC0 + (pos & 0x03));
  4367  047A  0876               	movf	m_set_segments@pos,w
  4368  047B  3903               	andlw	3
  4369  047C  3EC0               	addlw	192
  4370  047D  3183  23C8  3184   	fcall	_m_write_data
  4371  0480                     l1975:
  4372                           
  4373                           ;TM1637_m.c: 96: for(uint8_t k = 0; k < length; k++){
  4374  0480  01F9               	clrf	m_set_segments@k
  4375  0481  2C90               	goto	l1981
  4376  0482                     l1977:
  4377                           
  4378                           ;TM1637_m.c: 97: m_write_data(segments[k]);
  4379  0482  0879               	movf	m_set_segments@k,w
  4380  0483  0778               	addwf	m_set_segments@segments,w
  4381  0484  00F7               	movwf	??_m_set_segments
  4382  0485  0877               	movf	??_m_set_segments,w
  4383  0486  0086               	movwf	6
  4384  0487  0187               	clrf	7
  4385  0488  0801               	movf	1,w
  4386  0489  3183  23C8  3184   	fcall	_m_write_data
  4387  048C                     l1979:
  4388  048C  3001               	movlw	1
  4389  048D  00F7               	movwf	??_m_set_segments
  4390  048E  0877               	movf	??_m_set_segments,w
  4391  048F  07F9               	addwf	m_set_segments@k,f
  4392  0490                     l1981:
  4393  0490  0875               	movf	m_set_segments@length,w
  4394  0491  0279               	subwf	m_set_segments@k,w
  4395  0492  1C03               	skipc
  4396  0493  2C95               	goto	u1251
  4397  0494  2C96               	goto	u1250
  4398  0495                     u1251:
  4399  0495  2C82               	goto	l1977
  4400  0496                     u1250:
  4401  0496                     l1983:
  4402                           
  4403                           ;TM1637_m.c: 98: };TM1637_m.c: 100: m_stop();
  4404  0496  3182  2241  3184   	fcall	_m_stop
  4405                           
  4406                           ;TM1637_m.c: 103: m_start();
  4407  0499  3182  2238  3184   	fcall	_m_start
  4408  049C                     l1985:
  4409                           
  4410                           ;TM1637_m.c: 104: m_write_data(0x80 + (m_brightness & 0x0f));
  4411  049C  087D               	movf	_m_brightness,w
  4412  049D  390F               	andlw	15
  4413  049E  3E80               	addlw	128
  4414  049F  3183  23C8  3184   	fcall	_m_write_data
  4415  04A2                     l1987:
  4416                           
  4417                           ;TM1637_m.c: 105: m_stop();
  4418  04A2  3182  2241  3184   	fcall	_m_stop
  4419  04A5                     l367:
  4420  04A5  0008               	return
  4421  04A6                     __end_of_m_set_segments:
  4422                           
  4423                           	psect	text23
  4424  03C8                     __ptext23:	
  4425 ;; *************** function _m_write_data *****************
  4426 ;; Defined at:
  4427 ;;		line 38 in file "TM1637_m.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  b               1    wreg     unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  b               1    1[COMMON] unsigned char 
  4432 ;;  i               1    4[COMMON] unsigned char 
  4433 ;;  data            1    3[COMMON] unsigned char 
  4434 ;;  ack             1    2[COMMON] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      unsigned char 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4444 ;;      Params:         0       0       0       0       0       0
  4445 ;;      Locals:         4       0       0       0       0       0
  4446 ;;      Temps:          1       0       0       0       0       0
  4447 ;;      Totals:         5       0       0       0       0       0
  4448 ;;Total ram usage:        5 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_m_set_segments
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _m_write_data
  4459  03C8                     _m_write_data:
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _m_write_data: [wreg+status,2+status,0]
  4463                           ;m_write_data@b stored from wreg
  4464  03C8  00F1               	movwf	m_write_data@b
  4465  03C9                     l1919:
  4466                           
  4467                           ;TM1637_m.c: 39: uint8_t data = b;
  4468  03C9  0871               	movf	m_write_data@b,w
  4469  03CA  00F0               	movwf	??_m_write_data
  4470  03CB  0870               	movf	??_m_write_data,w
  4471  03CC  00F3               	movwf	m_write_data@data
  4472  03CD                     l1921:
  4473  03CD  0021               	movlb	1	; select bank1
  4474  03CE  108C               	bcf	12,1	;volatile
  4475  03CF                     l1923:
  4476                           
  4477                           ;TM1637_m.c: 42: for(uint8_t i = 0; i < 8; i++){
  4478  03CF  01F4               	clrf	m_write_data@i
  4479  03D0                     l331:	
  4480                           ;TM1637_m.c: 43: do { LATAbits.LATA1 = 0; } while(0);
  4481                           
  4482  03D0  0022               	movlb	2	; select bank2
  4483  03D1  108C               	bcf	12,1	;volatile
  4484  03D2                     l332:
  4485                           
  4486                           ;TM1637_m.c: 45: if(data & 0x01){
  4487  03D2  1C73               	btfss	m_write_data@data,0
  4488  03D3  2BD5               	goto	u1211
  4489  03D4  2BD6               	goto	u1210
  4490  03D5                     u1211:
  4491  03D5  2BD8               	goto	l337
  4492  03D6                     u1210:
  4493  03D6                     l334:	
  4494                           ;TM1637_m.c: 46: do { LATAbits.LATA2 = 1; } while(0);
  4495                           
  4496  03D6  150C               	bsf	12,2	;volatile
  4497  03D7  2BD9               	goto	l339
  4498  03D8                     l337:	
  4499                           ;TM1637_m.c: 48: do { LATAbits.LATA2 = 0; } while(0);
  4500                           
  4501  03D8  110C               	bcf	12,2	;volatile
  4502  03D9                     l339:	
  4503                           ;TM1637_m.c: 49: };TM1637_m.c: 51: do { LATAbits.LATA1 = 1; } while(0);
  4504                           
  4505  03D9  148C               	bsf	12,1	;volatile
  4506  03DA                     l1929:
  4507                           
  4508                           ;TM1637_m.c: 53: data = data >> 1;
  4509  03DA  3673               	lsrf	m_write_data@data,w
  4510  03DB  00F0               	movwf	??_m_write_data
  4511  03DC  0870               	movf	??_m_write_data,w
  4512  03DD  00F3               	movwf	m_write_data@data
  4513  03DE  3001               	movlw	1
  4514  03DF  00F0               	movwf	??_m_write_data
  4515  03E0  0870               	movf	??_m_write_data,w
  4516  03E1  07F4               	addwf	m_write_data@i,f
  4517  03E2                     l1931:
  4518  03E2  3008               	movlw	8
  4519  03E3  0274               	subwf	m_write_data@i,w
  4520  03E4  1C03               	skipc
  4521  03E5  2BE7               	goto	u1221
  4522  03E6  2BE8               	goto	u1220
  4523  03E7                     u1221:
  4524  03E7  2BD0               	goto	l331
  4525  03E8                     u1220:
  4526  03E8                     l341:	
  4527                           ;TM1637_m.c: 54: };TM1637_m.c: 57: do { LATAbits.LATA1 = 0; } while(0);
  4528                           
  4529  03E8  108C               	bcf	12,1	;volatile
  4530  03E9                     l343:	
  4531                           ;TM1637_m.c: 58: do { LATAbits.LATA2 = 1; } while(0);
  4532                           
  4533  03E9  150C               	bsf	12,2	;volatile
  4534  03EA                     l345:	
  4535                           ;TM1637_m.c: 61: do { LATAbits.LATA1 = 1; } while(0);
  4536                           
  4537  03EA  148C               	bsf	12,1	;volatile
  4538  03EB                     l347:	
  4539                           ;TM1637_m.c: 63: do { TRISAbits.TRISA2 = 1; } while(0);
  4540                           
  4541  03EB  0021               	movlb	1	; select bank1
  4542  03EC  150C               	bsf	12,2	;volatile
  4543  03ED                     l1933:
  4544                           
  4545                           ;TM1637_m.c: 65: uint8_t ack = PORTAbits.RA2;
  4546  03ED  3000               	movlw	0
  4547  03EE  0020               	movlb	0	; select bank0
  4548  03EF  190C               	btfsc	12,2	;volatile
  4549  03F0  3001               	movlw	1
  4550  03F1  00F2               	movwf	m_write_data@ack
  4551  03F2                     l1935:
  4552                           
  4553                           ;TM1637_m.c: 66: if(ack == 0){
  4554  03F2  0872               	movf	m_write_data@ack,w
  4555  03F3  1D03               	btfss	3,2
  4556  03F4  2BF6               	goto	u1231
  4557  03F5  2BF7               	goto	u1230
  4558  03F6                     u1231:
  4559  03F6  2BFB               	goto	l354
  4560  03F7                     u1230:
  4561  03F7                     l350:	
  4562                           ;TM1637_m.c: 67: do { TRISAbits.TRISA2 = 0; } while(0);
  4563                           
  4564  03F7  0021               	movlb	1	; select bank1
  4565  03F8  110C               	bcf	12,2	;volatile
  4566  03F9                     l352:	
  4567                           ;TM1637_m.c: 68: do { LATAbits.LATA2 = 0; } while(0);
  4568                           
  4569  03F9  0022               	movlb	2	; select bank2
  4570  03FA  110C               	bcf	12,2	;volatile
  4571  03FB                     l354:	
  4572                           ;TM1637_m.c: 69: };TM1637_m.c: 71: do { TRISAbits.TRISA2 = 0; } while(0);
  4573                           
  4574  03FB  0021               	movlb	1	; select bank1
  4575  03FC  110C               	bcf	12,2	;volatile
  4576  03FD                     l356:
  4577  03FD  0008               	return
  4578  03FE                     __end_of_m_write_data:
  4579                           
  4580                           	psect	text24
  4581  0241                     __ptext24:	
  4582 ;; *************** function _m_stop *****************
  4583 ;; Defined at:
  4584 ;;		line 27 in file "TM1637_m.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		None
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4598 ;;      Params:         0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_m_set_segments
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _m_stop
  4613  0241                     _m_stop:
  4614  0241                     l312:	
  4615                           ;incstack = 0
  4616                           ; Regs used in _m_stop: []
  4617                           ;TM1637_m.c: 28: do { TRISAbits.TRISA2 = 0; } while(0);
  4618                           
  4619  0241  0021               	movlb	1	; select bank1
  4620  0242  110C               	bcf	12,2	;volatile
  4621  0243                     l314:	
  4622                           ;TM1637_m.c: 29: do { TRISAbits.TRISA1 = 0; } while(0);
  4623                           
  4624  0243  108C               	bcf	12,1	;volatile
  4625  0244                     l316:	
  4626                           ;TM1637_m.c: 31: do { LATAbits.LATA1 = 0; } while(0);
  4627                           
  4628  0244  0022               	movlb	2	; select bank2
  4629  0245  108C               	bcf	12,1	;volatile
  4630  0246                     l318:	
  4631                           ;TM1637_m.c: 32: do { LATAbits.LATA2 = 0; } while(0);
  4632                           
  4633  0246  110C               	bcf	12,2	;volatile
  4634  0247                     l320:	
  4635                           ;TM1637_m.c: 34: do { LATAbits.LATA1 = 1; } while(0);
  4636                           
  4637  0247  148C               	bsf	12,1	;volatile
  4638  0248                     l322:	
  4639                           ;TM1637_m.c: 35: do { LATAbits.LATA2 = 1; } while(0);
  4640                           
  4641  0248  150C               	bsf	12,2	;volatile
  4642  0249                     l324:
  4643  0249  0008               	return
  4644  024A                     __end_of_m_stop:
  4645                           
  4646                           	psect	text25
  4647  0238                     __ptext25:	
  4648 ;; *************** function _m_start *****************
  4649 ;; Defined at:
  4650 ;;		line 16 in file "TM1637_m.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		None
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4664 ;;      Params:         0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_m_set_segments
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _m_start
  4679  0238                     _m_start:
  4680  0238                     l297:	
  4681                           ;incstack = 0
  4682                           ; Regs used in _m_start: []
  4683                           ;TM1637_m.c: 17: do { TRISAbits.TRISA2 = 0; } while(0);
  4684                           
  4685  0238  0021               	movlb	1	; select bank1
  4686  0239  110C               	bcf	12,2	;volatile
  4687  023A                     l299:	
  4688                           ;TM1637_m.c: 18: do { TRISAbits.TRISA1 = 0; } while(0);
  4689                           
  4690  023A  108C               	bcf	12,1	;volatile
  4691  023B                     l301:	
  4692                           ;TM1637_m.c: 20: do { LATAbits.LATA2 = 1; } while(0);
  4693                           
  4694  023B  0022               	movlb	2	; select bank2
  4695  023C  150C               	bsf	12,2	;volatile
  4696  023D                     l303:	
  4697                           ;TM1637_m.c: 21: do { LATAbits.LATA1 = 1; } while(0);
  4698                           
  4699  023D  148C               	bsf	12,1	;volatile
  4700  023E                     l305:	
  4701                           ;TM1637_m.c: 23: do { LATAbits.LATA2 = 0; } while(0);
  4702                           
  4703  023E  110C               	bcf	12,2	;volatile
  4704  023F                     l307:	
  4705                           ;TM1637_m.c: 24: do { LATAbits.LATA1 = 0; } while(0);
  4706                           
  4707  023F  108C               	bcf	12,1	;volatile
  4708  0240                     l309:
  4709  0240  0008               	return
  4710  0241                     __end_of_m_start:
  4711                           
  4712                           	psect	text26
  4713  0230                     __ptext26:	
  4714 ;; *************** function _encode_digit *****************
  4715 ;; Defined at:
  4716 ;;		line 107 in file "TM1637.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  digit           1    wreg     unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  digit           1    0[COMMON] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4730 ;;      Params:         0       0       0       0       0       0
  4731 ;;      Locals:         1       0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0
  4733 ;;      Totals:         1       0       0       0       0       0
  4734 ;;Total ram usage:        1 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_rtc_display
  4740 ;;		_money_display
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _encode_digit
  4746  0230                     _encode_digit:
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4750                           ;encode_digit@digit stored from wreg
  4751  0230  00F0               	movwf	encode_digit@digit
  4752  0231                     l1937:
  4753                           
  4754                           ;TM1637.c: 108: return segdata[digit & 0x0f];
  4755  0231  0870               	movf	encode_digit@digit,w
  4756  0232  390F               	andlw	15
  4757  0233  3E20               	addlw	(low (_segdata| 0))& (0+255)
  4758  0234  0086               	movwf	6
  4759  0235  0187               	clrf	7
  4760  0236  0801               	movf	1,w
  4761  0237                     l284:
  4762  0237  0008               	return
  4763  0238                     __end_of_encode_digit:
  4764                           
  4765                           	psect	text27
  4766  0394                     __ptext27:	
  4767 ;; *************** function ___lwmod *****************
  4768 ;; Defined at:
  4769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  divisor         2    0[COMMON] unsigned int 
  4772 ;;  dividend        2    2[COMMON] unsigned int 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  counter         1    5[COMMON] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2    0[COMMON] unsigned int 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4784 ;;      Params:         4       0       0       0       0       0
  4785 ;;      Locals:         1       0       0       0       0       0
  4786 ;;      Temps:          1       0       0       0       0       0
  4787 ;;      Totals:         6       0       0       0       0       0
  4788 ;;Total ram usage:        6 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_money_display
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function ___lwmod
  4799  0394                     ___lwmod:
  4800  0394                     l2015:	
  4801                           ;incstack = 0
  4802                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4803                           
  4804  0394  0870               	movf	___lwmod@divisor,w
  4805  0395  0471               	iorwf	___lwmod@divisor+1,w
  4806  0396  1903               	btfsc	3,2
  4807  0397  2B99               	goto	u1331
  4808  0398  2B9A               	goto	u1330
  4809  0399                     u1331:
  4810  0399  2BC3               	goto	l2033
  4811  039A                     u1330:
  4812  039A                     l2017:
  4813  039A  01F5               	clrf	___lwmod@counter
  4814  039B  0AF5               	incf	___lwmod@counter,f
  4815  039C  2BA6               	goto	l2023
  4816  039D                     l2019:
  4817  039D  3001               	movlw	1
  4818  039E                     u1345:
  4819  039E  35F0               	lslf	___lwmod@divisor,f
  4820  039F  0DF1               	rlf	___lwmod@divisor+1,f
  4821  03A0  0B89               	decfsz	9,f
  4822  03A1  2B9E               	goto	u1345
  4823  03A2                     l2021:
  4824  03A2  3001               	movlw	1
  4825  03A3  00F4               	movwf	??___lwmod
  4826  03A4  0874               	movf	??___lwmod,w
  4827  03A5  07F5               	addwf	___lwmod@counter,f
  4828  03A6                     l2023:
  4829  03A6  1FF1               	btfss	___lwmod@divisor+1,7
  4830  03A7  2BA9               	goto	u1351
  4831  03A8  2BAA               	goto	u1350
  4832  03A9                     u1351:
  4833  03A9  2B9D               	goto	l2019
  4834  03AA                     u1350:
  4835  03AA                     l2025:
  4836  03AA  0871               	movf	___lwmod@divisor+1,w
  4837  03AB  0273               	subwf	___lwmod@dividend+1,w
  4838  03AC  1D03               	skipz
  4839  03AD  2BB0               	goto	u1365
  4840  03AE  0870               	movf	___lwmod@divisor,w
  4841  03AF  0272               	subwf	___lwmod@dividend,w
  4842  03B0                     u1365:
  4843  03B0  1C03               	skipc
  4844  03B1  2BB3               	goto	u1361
  4845  03B2  2BB4               	goto	u1360
  4846  03B3                     u1361:
  4847  03B3  2BB8               	goto	l2029
  4848  03B4                     u1360:
  4849  03B4                     l2027:
  4850  03B4  0870               	movf	___lwmod@divisor,w
  4851  03B5  02F2               	subwf	___lwmod@dividend,f
  4852  03B6  0871               	movf	___lwmod@divisor+1,w
  4853  03B7  3BF3               	subwfb	___lwmod@dividend+1,f
  4854  03B8                     l2029:
  4855  03B8  3001               	movlw	1
  4856  03B9                     u1375:
  4857  03B9  36F1               	lsrf	___lwmod@divisor+1,f
  4858  03BA  0CF0               	rrf	___lwmod@divisor,f
  4859  03BB  0B89               	decfsz	9,f
  4860  03BC  2BB9               	goto	u1375
  4861  03BD                     l2031:
  4862  03BD  3001               	movlw	1
  4863  03BE  02F5               	subwf	___lwmod@counter,f
  4864  03BF  1D03               	btfss	3,2
  4865  03C0  2BC2               	goto	u1381
  4866  03C1  2BC3               	goto	u1380
  4867  03C2                     u1381:
  4868  03C2  2BAA               	goto	l2025
  4869  03C3                     u1380:
  4870  03C3                     l2033:
  4871  03C3  0873               	movf	___lwmod@dividend+1,w
  4872  03C4  00F1               	movwf	?___lwmod+1
  4873  03C5  0872               	movf	___lwmod@dividend,w
  4874  03C6  00F0               	movwf	?___lwmod
  4875  03C7                     l799:
  4876  03C7  0008               	return
  4877  03C8                     __end_of___lwmod:
  4878                           
  4879                           	psect	text28
  4880  04E0                     __ptext28:	
  4881 ;; *************** function ___lwdiv *****************
  4882 ;; Defined at:
  4883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  divisor         2    0[COMMON] unsigned int 
  4886 ;;  dividend        2    2[COMMON] unsigned int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  quotient        2    6[COMMON] unsigned int 
  4889 ;;  counter         1    5[COMMON] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  2    0[COMMON] unsigned int 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4899 ;;      Params:         4       0       0       0       0       0
  4900 ;;      Locals:         3       0       0       0       0       0
  4901 ;;      Temps:          1       0       0       0       0       0
  4902 ;;      Totals:         8       0       0       0       0       0
  4903 ;;Total ram usage:        8 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_money_display
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function ___lwdiv
  4914  04E0                     ___lwdiv:
  4915  04E0                     l1989:	
  4916                           ;incstack = 0
  4917                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4918                           
  4919  04E0  01F6               	clrf	___lwdiv@quotient
  4920  04E1  01F7               	clrf	___lwdiv@quotient+1
  4921  04E2                     l1991:
  4922  04E2  0870               	movf	___lwdiv@divisor,w
  4923  04E3  0471               	iorwf	___lwdiv@divisor+1,w
  4924  04E4  1903               	btfsc	3,2
  4925  04E5  2CE7               	goto	u1261
  4926  04E6  2CE8               	goto	u1260
  4927  04E7                     u1261:
  4928  04E7  2D17               	goto	l2011
  4929  04E8                     u1260:
  4930  04E8                     l1993:
  4931  04E8  01F5               	clrf	___lwdiv@counter
  4932  04E9  0AF5               	incf	___lwdiv@counter,f
  4933  04EA  2CF4               	goto	l1999
  4934  04EB                     l1995:
  4935  04EB  3001               	movlw	1
  4936  04EC                     u1275:
  4937  04EC  35F0               	lslf	___lwdiv@divisor,f
  4938  04ED  0DF1               	rlf	___lwdiv@divisor+1,f
  4939  04EE  0B89               	decfsz	9,f
  4940  04EF  2CEC               	goto	u1275
  4941  04F0                     l1997:
  4942  04F0  3001               	movlw	1
  4943  04F1  00F4               	movwf	??___lwdiv
  4944  04F2  0874               	movf	??___lwdiv,w
  4945  04F3  07F5               	addwf	___lwdiv@counter,f
  4946  04F4                     l1999:
  4947  04F4  1FF1               	btfss	___lwdiv@divisor+1,7
  4948  04F5  2CF7               	goto	u1281
  4949  04F6  2CF8               	goto	u1280
  4950  04F7                     u1281:
  4951  04F7  2CEB               	goto	l1995
  4952  04F8                     u1280:
  4953  04F8                     l2001:
  4954  04F8  3001               	movlw	1
  4955  04F9                     u1295:
  4956  04F9  35F6               	lslf	___lwdiv@quotient,f
  4957  04FA  0DF7               	rlf	___lwdiv@quotient+1,f
  4958  04FB  0B89               	decfsz	9,f
  4959  04FC  2CF9               	goto	u1295
  4960  04FD  0871               	movf	___lwdiv@divisor+1,w
  4961  04FE  0273               	subwf	___lwdiv@dividend+1,w
  4962  04FF  1D03               	skipz
  4963  0500  2D03               	goto	u1305
  4964  0501  0870               	movf	___lwdiv@divisor,w
  4965  0502  0272               	subwf	___lwdiv@dividend,w
  4966  0503                     u1305:
  4967  0503  1C03               	skipc
  4968  0504  2D06               	goto	u1301
  4969  0505  2D07               	goto	u1300
  4970  0506                     u1301:
  4971  0506  2D0C               	goto	l2007
  4972  0507                     u1300:
  4973  0507                     l2003:
  4974  0507  0870               	movf	___lwdiv@divisor,w
  4975  0508  02F2               	subwf	___lwdiv@dividend,f
  4976  0509  0871               	movf	___lwdiv@divisor+1,w
  4977  050A  3BF3               	subwfb	___lwdiv@dividend+1,f
  4978  050B                     l2005:
  4979  050B  1476               	bsf	___lwdiv@quotient,0
  4980  050C                     l2007:
  4981  050C  3001               	movlw	1
  4982  050D                     u1315:
  4983  050D  36F1               	lsrf	___lwdiv@divisor+1,f
  4984  050E  0CF0               	rrf	___lwdiv@divisor,f
  4985  050F  0B89               	decfsz	9,f
  4986  0510  2D0D               	goto	u1315
  4987  0511                     l2009:
  4988  0511  3001               	movlw	1
  4989  0512  02F5               	subwf	___lwdiv@counter,f
  4990  0513  1D03               	btfss	3,2
  4991  0514  2D16               	goto	u1321
  4992  0515  2D17               	goto	u1320
  4993  0516                     u1321:
  4994  0516  2CF8               	goto	l2001
  4995  0517                     u1320:
  4996  0517                     l2011:
  4997  0517  0877               	movf	___lwdiv@quotient+1,w
  4998  0518  00F1               	movwf	?___lwdiv+1
  4999  0519  0876               	movf	___lwdiv@quotient,w
  5000  051A  00F0               	movwf	?___lwdiv
  5001  051B                     l789:
  5002  051B  0008               	return
  5003  051C                     __end_of___lwdiv:
  5004                           
  5005                           	psect	text29
  5006  02A8                     __ptext29:	
  5007 ;; *************** function _m_set_brigthness *****************
  5008 ;; Defined at:
  5009 ;;		line 76 in file "TM1637_m.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  brightness      1    wreg     unsigned char 
  5012 ;;  on              1    0[COMMON] unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  brightness      1    2[COMMON] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5024 ;;      Params:         1       0       0       0       0       0
  5025 ;;      Locals:         1       0       0       0       0       0
  5026 ;;      Temps:          1       0       0       0       0       0
  5027 ;;      Totals:         3       0       0       0       0       0
  5028 ;;Total ram usage:        3 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _m_set_brigthness
  5039  02A8                     _m_set_brigthness:
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _m_set_brigthness: [wreg+status,2+status,0]
  5043                           ;m_set_brigthness@brightness stored from wreg
  5044  02A8  00F2               	movwf	m_set_brigthness@brightness
  5045  02A9                     l1815:
  5046                           
  5047                           ;TM1637_m.c: 77: if(on == 1){
  5048  02A9  0370               	decf	m_set_brigthness@on,w
  5049  02AA  1D03               	btfss	3,2
  5050  02AB  2AAD               	goto	u1181
  5051  02AC  2AAE               	goto	u1180
  5052  02AD                     u1181:
  5053  02AD  2AB5               	goto	l1819
  5054  02AE                     u1180:
  5055  02AE                     l1817:
  5056                           
  5057                           ;TM1637_m.c: 78: m_brightness = (brightness & 0x7 | 0x08);
  5058  02AE  0872               	movf	m_set_brigthness@brightness,w
  5059  02AF  3907               	andlw	7
  5060  02B0  3808               	iorlw	8
  5061  02B1  00F1               	movwf	??_m_set_brigthness
  5062  02B2  0871               	movf	??_m_set_brigthness,w
  5063  02B3  00FD               	movwf	_m_brightness
  5064                           
  5065                           ;TM1637_m.c: 79: }else{
  5066  02B4  2ABA               	goto	l361
  5067  02B5                     l1819:
  5068                           
  5069                           ;TM1637_m.c: 80: m_brightness = (brightness & 0x7 | 0x00);
  5070  02B5  0872               	movf	m_set_brigthness@brightness,w
  5071  02B6  3907               	andlw	7
  5072  02B7  00F1               	movwf	??_m_set_brigthness
  5073  02B8  0871               	movf	??_m_set_brigthness,w
  5074  02B9  00FD               	movwf	_m_brightness
  5075  02BA                     l361:
  5076  02BA  0008               	return
  5077  02BB                     __end_of_m_set_brigthness:
  5078                           
  5079                           	psect	text30
  5080  0434                     __ptext30:	
  5081 ;; *************** function _calc_money *****************
  5082 ;; Defined at:
  5083 ;;		line 68 in file "main.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  date            6    6[COMMON] struct Date
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  min             2    6[BANK0 ] unsigned int 
  5088 ;;  hour            2    4[BANK0 ] unsigned int 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5098 ;;      Params:         6       0       0       0       0       0
  5099 ;;      Locals:         0       4       0       0       0       0
  5100 ;;      Temps:          0       4       0       0       0       0
  5101 ;;      Totals:         6       8       0       0       0       0
  5102 ;;Total ram usage:       14 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    1
  5105 ;; This function calls:
  5106 ;;		___wmul
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _calc_money
  5114  0434                     _calc_money:
  5115  0434                     l1831:	
  5116                           ;incstack = 0
  5117                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  5118                           
  5119                           
  5120                           ;main.c: 69: uint16_t hour = (uint16_t)date.hour;
  5121  0434  0879               	movf	calc_money@date+3,w
  5122  0435  0020               	movlb	0	; select bank0
  5123  0436  00B2               	movwf	??_calc_money
  5124  0437  01B3               	clrf	??_calc_money+1
  5125  0438  0832               	movf	??_calc_money,w
  5126  0439  00B6               	movwf	calc_money@hour
  5127  043A  0833               	movf	??_calc_money+1,w
  5128  043B  00B7               	movwf	calc_money@hour+1
  5129                           
  5130                           ;main.c: 70: uint16_t min = (uint16_t)date.min;
  5131  043C  087A               	movf	calc_money@date+4,w
  5132  043D  00B2               	movwf	??_calc_money
  5133  043E  01B3               	clrf	??_calc_money+1
  5134  043F  0832               	movf	??_calc_money,w
  5135  0440  00B8               	movwf	calc_money@min
  5136  0441  0833               	movf	??_calc_money+1,w
  5137  0442  00B9               	movwf	calc_money@min+1
  5138  0443                     l1833:
  5139                           
  5140                           ;main.c: 71: money = ((hour - REGULAR_HOUR) * HOUR_4_MONEY) + (MIN_4_MONEY * min) - (MIN
      +                          _4_MONEY * 20);
  5141  0443  0837               	movf	calc_money@hour+1,w
  5142  0444  00F1               	movwf	___wmul@multiplier+1
  5143  0445  0836               	movf	calc_money@hour,w
  5144  0446  00F0               	movwf	___wmul@multiplier
  5145  0447  3054               	movlw	84
  5146  0448  00F2               	movwf	___wmul@multiplicand
  5147  0449  3006               	movlw	6
  5148  044A  00F3               	movwf	___wmul@multiplicand+1
  5149  044B  3183  2325  3184   	fcall	___wmul
  5150  044E  0870               	movf	?___wmul,w
  5151  044F  0020               	movlb	0	; select bank0
  5152  0450  00B2               	movwf	??_calc_money
  5153  0451  0871               	movf	?___wmul+1,w
  5154  0452  00B3               	movwf	??_calc_money+1
  5155  0453  0839               	movf	calc_money@min+1,w
  5156  0454  00F1               	movwf	___wmul@multiplier+1
  5157  0455  0838               	movf	calc_money@min,w
  5158  0456  00F0               	movwf	___wmul@multiplier
  5159  0457  301B               	movlw	27
  5160  0458  00F2               	movwf	___wmul@multiplicand
  5161  0459  3000               	movlw	0
  5162  045A  00F3               	movwf	___wmul@multiplicand+1
  5163  045B  3183  2325  3184   	fcall	___wmul
  5164  045E  0870               	movf	?___wmul,w
  5165  045F  0020               	movlb	0	; select bank0
  5166  0460  0732               	addwf	??_calc_money,w
  5167  0461  00B4               	movwf	??_calc_money+2
  5168  0462  0871               	movf	?___wmul+1,w
  5169  0463  3D33               	addwfc	??_calc_money+1,w
  5170  0464  00B5               	movwf	??_calc_money+3
  5171  0465  0834               	movf	??_calc_money+2,w
  5172  0466  3E50               	addlw	80
  5173  0467  00C2               	movwf	_money
  5174  0468  3092               	movlw	146
  5175  0469  3D35               	addwfc	??_calc_money+3,w
  5176  046A  00C3               	movwf	_money+1
  5177  046B                     l114:
  5178  046B  0008               	return
  5179  046C                     __end_of_calc_money:
  5180                           
  5181                           	psect	text31
  5182  0325                     __ptext31:	
  5183 ;; *************** function ___wmul *****************
  5184 ;; Defined at:
  5185 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  multiplier      2    0[COMMON] unsigned int 
  5188 ;;  multiplicand    2    2[COMMON] unsigned int 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  product         2    4[COMMON] unsigned int 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  2    0[COMMON] unsigned int 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5200 ;;      Params:         4       0       0       0       0       0
  5201 ;;      Locals:         2       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0
  5203 ;;      Totals:         6       0       0       0       0       0
  5204 ;;Total ram usage:        6 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_calc_money
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function ___wmul
  5215  0325                     ___wmul:
  5216  0325                     l1731:	
  5217                           ;incstack = 0
  5218                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5219                           
  5220  0325  01F4               	clrf	___wmul@product
  5221  0326  01F5               	clrf	___wmul@product+1
  5222  0327                     l1733:
  5223  0327  1C70               	btfss	___wmul@multiplier,0
  5224  0328  2B2A               	goto	u1001
  5225  0329  2B2B               	goto	u1000
  5226  032A                     u1001:
  5227  032A  2B2F               	goto	l517
  5228  032B                     u1000:
  5229  032B                     l1735:
  5230  032B  0872               	movf	___wmul@multiplicand,w
  5231  032C  07F4               	addwf	___wmul@product,f
  5232  032D  0873               	movf	___wmul@multiplicand+1,w
  5233  032E  3DF5               	addwfc	___wmul@product+1,f
  5234  032F                     l517:
  5235  032F  3001               	movlw	1
  5236  0330                     u1015:
  5237  0330  35F2               	lslf	___wmul@multiplicand,f
  5238  0331  0DF3               	rlf	___wmul@multiplicand+1,f
  5239  0332  0B89               	decfsz	9,f
  5240  0333  2B30               	goto	u1015
  5241  0334                     l1737:
  5242  0334  3001               	movlw	1
  5243  0335                     u1025:
  5244  0335  36F1               	lsrf	___wmul@multiplier+1,f
  5245  0336  0CF0               	rrf	___wmul@multiplier,f
  5246  0337  0B89               	decfsz	9,f
  5247  0338  2B35               	goto	u1025
  5248  0339                     l1739:
  5249  0339  0870               	movf	___wmul@multiplier,w
  5250  033A  0471               	iorwf	___wmul@multiplier+1,w
  5251  033B  1D03               	btfss	3,2
  5252  033C  2B3E               	goto	u1031
  5253  033D  2B3F               	goto	u1030
  5254  033E                     u1031:
  5255  033E  2B27               	goto	l1733
  5256  033F                     u1030:
  5257  033F                     l1741:
  5258  033F  0875               	movf	___wmul@product+1,w
  5259  0340  00F1               	movwf	?___wmul+1
  5260  0341  0874               	movf	___wmul@product,w
  5261  0342  00F0               	movwf	?___wmul
  5262  0343                     l519:
  5263  0343  0008               	return
  5264  0344                     __end_of___wmul:
  5265                           
  5266                           	psect	text32
  5267  025C                     __ptext32:	
  5268 ;; *************** function _SYSTEM_Initialize *****************
  5269 ;; Defined at:
  5270 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5284 ;;      Params:         0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		_OSCILLATOR_Initialize
  5293 ;;		_PIN_MANAGER_Initialize
  5294 ;;		_WDT_Initialize
  5295 ;; This function is called by:
  5296 ;;		_main
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function _SYSTEM_Initialize
  5302  025C                     _SYSTEM_Initialize:
  5303  025C                     l1793:	
  5304                           ;incstack = 0
  5305                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5306                           
  5307                           
  5308                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5309  025C  3182  22F7  3182   	fcall	_PIN_MANAGER_Initialize
  5310                           
  5311                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5312  025F  3182  2222  3182   	fcall	_OSCILLATOR_Initialize
  5313                           
  5314                           ;mcc.c: 55: WDT_Initialize();
  5315  0262  3182  2218  3182   	fcall	_WDT_Initialize
  5316  0265                     l45:
  5317  0265  0008               	return
  5318  0266                     __end_of_SYSTEM_Initialize:
  5319                           
  5320                           	psect	text33
  5321  0218                     __ptext33:	
  5322 ;; *************** function _WDT_Initialize *****************
  5323 ;; Defined at:
  5324 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5338 ;;      Params:         0       0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0
  5341 ;;      Totals:         0       0       0       0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_SYSTEM_Initialize
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           
  5352                           ;psect for function _WDT_Initialize
  5353  0218                     _WDT_Initialize:
  5354  0218                     l1667:	
  5355                           ;incstack = 0
  5356                           ; Regs used in _WDT_Initialize: [wreg]
  5357                           
  5358                           
  5359                           ;mcc.c: 71: WDTCON = 0x16;
  5360  0218  3016               	movlw	22
  5361  0219  0021               	movlb	1	; select bank1
  5362  021A  0097               	movwf	23	;volatile
  5363  021B                     l51:
  5364  021B  0008               	return
  5365  021C                     __end_of_WDT_Initialize:
  5366                           
  5367                           	psect	text34
  5368  02F7                     __ptext34:	
  5369 ;; *************** function _PIN_MANAGER_Initialize *****************
  5370 ;; Defined at:
  5371 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5385 ;;      Params:         0       0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0
  5387 ;;      Temps:          0       0       0       0       0       0
  5388 ;;      Totals:         0       0       0       0       0       0
  5389 ;;Total ram usage:        0 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_SYSTEM_Initialize
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _PIN_MANAGER_Initialize
  5400  02F7                     _PIN_MANAGER_Initialize:
  5401  02F7                     l1641:	
  5402                           ;incstack = 0
  5403                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5404                           
  5405                           
  5406                           ;pin_manager.c: 60: LATA = 0x00;
  5407  02F7  0022               	movlb	2	; select bank2
  5408  02F8  018C               	clrf	12	;volatile
  5409                           
  5410                           ;pin_manager.c: 61: LATB = 0x00;
  5411  02F9  018D               	clrf	13	;volatile
  5412  02FA                     l1643:
  5413                           
  5414                           ;pin_manager.c: 66: TRISA = 0xFF;
  5415  02FA  30FF               	movlw	255
  5416  02FB  0021               	movlb	1	; select bank1
  5417  02FC  008C               	movwf	12	;volatile
  5418  02FD                     l1645:
  5419                           
  5420                           ;pin_manager.c: 67: TRISB = 0xFF;
  5421  02FD  30FF               	movlw	255
  5422  02FE  008D               	movwf	13	;volatile
  5423  02FF                     l1647:
  5424                           
  5425                           ;pin_manager.c: 72: ANSELB = 0xDA;
  5426  02FF  30DA               	movlw	218
  5427  0300  0023               	movlb	3	; select bank3
  5428  0301  008D               	movwf	13	;volatile
  5429  0302                     l1649:
  5430                           
  5431                           ;pin_manager.c: 73: ANSELA = 0x10;
  5432  0302  3010               	movlw	16
  5433  0303  008C               	movwf	12	;volatile
  5434  0304                     l1651:
  5435                           
  5436                           ;pin_manager.c: 78: WPUB = 0x24;
  5437  0304  3024               	movlw	36
  5438  0305  0024               	movlb	4	; select bank4
  5439  0306  008D               	movwf	13	;volatile
  5440  0307                     l1653:
  5441                           
  5442                           ;pin_manager.c: 79: WPUA = 0x00;
  5443  0307  018C               	clrf	12	;volatile
  5444  0308                     l1655:
  5445                           
  5446                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5447  0308  0021               	movlb	1	; select bank1
  5448  0309  1795               	bsf	21,7	;volatile
  5449  030A                     l1657:
  5450                           
  5451                           ;pin_manager.c: 86: APFCON0 = 0x00;
  5452  030A  0022               	movlb	2	; select bank2
  5453  030B  019D               	clrf	29	;volatile
  5454  030C                     l1659:
  5455                           
  5456                           ;pin_manager.c: 87: APFCON1 = 0x00;
  5457  030C  019E               	clrf	30	;volatile
  5458  030D                     l25:
  5459  030D  0008               	return
  5460  030E                     __end_of_PIN_MANAGER_Initialize:
  5461                           
  5462                           	psect	text35
  5463  0222                     __ptext35:	
  5464 ;; *************** function _OSCILLATOR_Initialize *****************
  5465 ;; Defined at:
  5466 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;		None
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5480 ;;      Params:         0       0       0       0       0       0
  5481 ;;      Locals:         0       0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0
  5483 ;;      Totals:         0       0       0       0       0       0
  5484 ;;Total ram usage:        0 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_SYSTEM_Initialize
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _OSCILLATOR_Initialize
  5495  0222                     _OSCILLATOR_Initialize:
  5496  0222                     l1661:	
  5497                           ;incstack = 0
  5498                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5499                           
  5500                           
  5501                           ;mcc.c: 61: OSCCON = 0x70;
  5502  0222  3070               	movlw	112
  5503  0223  0021               	movlb	1	; select bank1
  5504  0224  0099               	movwf	25	;volatile
  5505  0225                     l1663:
  5506                           
  5507                           ;mcc.c: 63: OSCTUNE = 0x00;
  5508  0225  0198               	clrf	24	;volatile
  5509  0226                     l1665:
  5510                           
  5511                           ;mcc.c: 65: BORCON = 0x00;
  5512  0226  0022               	movlb	2	; select bank2
  5513  0227  0196               	clrf	22	;volatile
  5514  0228                     l48:
  5515  0228  0008               	return
  5516  0229                     __end_of_OSCILLATOR_Initialize:
  5517  007E                     btemp	set	126	;btemp
  5518  007E                     wtemp0	set	126
  5519                           
  5520                           	psect	config
  5521                           
  5522                           ;Config register CONFIG1 @ 0x8007
  5523                           ;	Oscillator Selection
  5524                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5525                           ;	Watchdog Timer Enable
  5526                           ;	WDTE = OFF, WDT disabled
  5527                           ;	Power-up Timer Enable
  5528                           ;	PWRTE = OFF, PWRT disabled
  5529                           ;	MCLR Pin Function Select
  5530                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5531                           ;	Flash Program Memory Code Protection
  5532                           ;	CP = OFF, Program memory code protection is disabled
  5533                           ;	Data Memory Code Protection
  5534                           ;	CPD = OFF, Data memory code protection is disabled
  5535                           ;	Brown-out Reset Enable
  5536                           ;	BOREN = ON, Brown-out Reset enabled
  5537                           ;	Clock Out Enable
  5538                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5539                           ;	Internal/External Switchover
  5540                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5541                           ;	Fail-Safe Clock Monitor Enable
  5542                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5543  8007                     	org	32775
  5544  8007  3FE4               	dw	16356
  5545                           
  5546                           ;Config register CONFIG2 @ 0x8008
  5547                           ;	Flash Memory Self-Write Protection
  5548                           ;	WRT = OFF, Write protection off
  5549                           ;	PLL Enable
  5550                           ;	PLLEN = OFF, 4x PLL disabled
  5551                           ;	Stack Overflow/Underflow Reset Enable
  5552                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5553                           ;	Brown-out Reset Voltage Selection
  5554                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5555                           ;	Low-Voltage Programming Enable
  5556                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5557  8008                     	org	32776
  5558  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    6
    Data        18
    BSS         3
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    m_set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> m_segments(BANK0[4]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> t_segments(BANK0[4]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_money_display
    _main->_read_date
    _main->_rtc_display
    _main->_write_date
    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _rtc_display->_set_segments
    _set_segments->_write_data
    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _money_display->_m_set_segments
    _m_set_segments->_m_write_data
    _calc_money->___wmul

Critical Paths under _main in BANK0

    _main->_calc_money
    _write_date->_decimal_2_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    8472
                                              8 BANK0      8     8      0
                  _SYSTEM_Initialize
                         _calc_money
                   _m_set_brigthness
                      _money_display
                          _read_date
                        _rtc_display
                     _set_brigthness
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1739
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0    1552
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                          6     6      0    2337
                                             10 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     570
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _write_data                                           5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     522
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _money_display                                        3     3      0    2448
                                             10 COMMON     3     3      0
                            ___lwdiv
                            ___lwmod
                       _encode_digit
                     _m_set_segments
 ---------------------------------------------------------------------------------
 (2) _m_set_segments                                       5     3      2     635
                                              5 COMMON     5     3      2
                            _m_start
                             _m_stop
                       _m_write_data
 ---------------------------------------------------------------------------------
 (3) _m_write_data                                         5     5      0     208
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _m_stop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _m_start                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_digit                                         1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _m_set_brigthness                                     3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6     640
                                              6 COMMON     6     0      6
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
   _m_set_brigthness
   _money_display
     ___lwdiv
     ___lwmod
     _encode_digit
     _m_set_segments
       _m_start
       _m_stop
       _m_write_data
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _rtc_display
     ___awdiv
     ___awmod
     _encode_digit
     _set_segments
       _start
       _stop
       _write_data
   _set_brigthness
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      32       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      32      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 09 22:18:54 2020

                 ___bmul@product 0072                               l25 030D                               l51 021B  
                             l45 0265                               l48 0228                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072            __end_of_decimal_2_bcd 0394                              l120 075E  
                            l114 046B                              l211 024A                              l301 023B  
                            l141 0275                              l221 0251                              l213 024C  
                            l117 06E1                              l150 022F                              l230 0256  
                            l303 023D                              l223 0252                              l215 024D  
                            l320 0247                              l312 0241                              l144 0279  
                            l232 0258                              l305 023E                              l153 026B  
                            l217 024F                              l322 0248                              l314 0243  
                            l138 0285                              l170 031A                              l162 028E  
                            l234 0259                              l226 0253                              l307 023F  
                            l331 03D0                              l171 0324                              l147 022B  
                            l219 0250                              l251 040E                              l324 0249  
                            l316 0244                              l332 03D2                              l156 026F  
                            l236 025A                              l228 0255                              l309 0240  
                            l341 03E8                              l165 0295                              l261 0421  
                            l253 040F                              l245 0406                              l318 0246  
                            l350 03F7                              l334 03D6                              l238 025B  
                            l270 0433                              l246 0408                              l343 03E9  
                            l159 028A                              l255 041E                              l352 03F9  
                            l168 0316                              l264 042D                              l248 040C  
                            l192 0673                              l361 02BA                              l345 03EA  
                            l337 03D8                              l257 041F                              l281 04DF  
                            l354 03FB                              l186 02E1                              l266 042F  
                            l347 03EB                              l339 03D9                              l195 0365  
                            l259 0420                              l275 02CD                              l284 0237  
                            l356 03FD                              l268 0431                              l517 032F  
                            l189 0393                              l198 0561                              l519 0343  
                            l367 04A5                              l543 02F6                              l297 0238  
                            l299 023A                              l670 0613                              l683 05B4  
                            l789 051B                              l799 03C7                              u610 0281  
                            u611 0280                              u620 0285                              u700 031A  
                            u621 0284                              u701 0319                              u630 02E8  
                            u631 02E7                              u640 02F5                              u800 05D6  
                            u720 040C                              u641 02F4                              u801 05D5  
                            u721 040B                              u650 0279                              u730 041E  
                            u715 02D9                              u651 0278                              u731 041D  
                            u660 022F                              u820 05E6                              u900 057D  
                            u740 042D                              u661 022E                              u821 05E5  
                            u901 057C                              u741 042C                              u670 026F  
                            u671 026E                              u815 05DA                              u680 028E  
                            u840 05F5                              u920 058D                              u681 028D  
                            u841 05F4                              u921 058C                              u690 0292  
                            u930 0597                              u691 0291                              u835 05E7  
                            u931 0596                              u915 0581                              u860 0605  
                            u780 05BA                              u861 0604                              u845 05F1  
                            u781 05B9                              u870 060A                              u790 05C5  
                            u950 05A6                              u871 0609                              u855 05FB  
                            u791 05C4                              u951 05A5                              u935 0593  
                            u960 05AB                              u880 0567                              u961 05AA  
                            u945 059C                              u881 0566                              u890 0572  
                            u891 0571                              u995 038D                     ___awmod@sign 0076  
                 rtc_display@min 0034                              wreg 0009                    calc_money@min 0038  
                  write_data@ack 0072              bcd_2_decimal@number 0077                   ?_bcd_2_decimal 0070  
                 ??_encode_digit 0070                             l2001 04F8                             l2003 0507  
                           l2011 0517                             l2005 050B                             l2021 03A2  
                           l2101 0792                             l2007 050C                             l2031 03BD  
                           l2023 03A6                             l2015 0394                             l2111 07B8  
                           l2103 0796                             l2009 0511                             l2025 03AA  
                           l2017 039A                             l2033 03C3                             l2041 06FA  
                           l2113 07BE                             l2105 07AD                             l2027 03B4  
                           l2019 039D                             l2051 074D                             l2043 0709  
                           l2115 07C4                             l2107 07B0                             l2029 03B8  
                           l2053 0755                             l2045 071C                             l2037 06E2  
                           l1501 0287                             l2061 06AC                             l2117 07DB  
                           l2109 07B4                             l2047 072B                             l2039 06E7  
                           l1511 031F                             l1503 0292                             l2063 06C2  
                           l2055 0676                             l2119 07DE                             l2071 0764  
                           l2049 073E                             l1513 0320                             l1505 030F  
                           l2065 06D8                             l2057 0680                             l2081 076D  
                           l2073 0765                             l1515 0323                             l1507 0315  
                           l1611 056E                             l1603 0562                             l1523 03FF  
                           l2059 0696                             l2091 077D                             l2083 076E  
                           l2075 0768                             l2067 075F                             l1509 031B  
                           l1621 0585                             l1613 0572                             l1605 0563  
                           l1533 0410                             l1525 0403                             l2093 0781  
                           l2085 0773                             l2077 076A                             l2069 0762  
                           l1519 02CF                             l1471 027A                             l1631 05A0  
                           l1623 0589                             l1615 0577                             l1607 0567  
                           l1535 0418                             l1527 0405                             l2095 0782  
                           l2087 0777                             l2079 076C                             l1641 02F7  
                           l1481 02E8                             l1473 027A                             l1561 05B6  
                           l1625 058D                             l1617 057D                             l1633 05A6  
                           l1609 056C                             l1537 0423                             l1721 0367  
                           l1801 0636                             l2097 0786                             l2089 0779  
                           l1651 0304                             l1643 02FA                             l1731 0325  
                           l1483 02EC                             l1475 0281                             l1491 0270  
                           l1571 05CA                             l1563 05BA                             l1635 05AB  
                           l1627 0597                             l1619 0580                             l1539 0428  
                           l1811 02C1                             l1803 0641                             l2099 078C  
                           l1661 0222                             l1653 0307                             l1645 02FD  
                           l1741 033F                             l1733 0327                             l1485 02EE  
                           l1477 02E3                             l1493 0273                             l1725 0345  
                           l1821 051D                             l1581 05DE                             l1573 05CE  
                           l1565 05BF                             l1637 05B0                             l1629 059B  
                           l1813 02C8                             l1805 0664                             l1663 0225  
                           l1655 0308                             l1647 02FF                             l1735 032B  
                           l1831 0434                             l1815 02A9                             l1487 02F5  
                           l1479 02E4                             l1495 0229                             l1727 0361  
                           l1823 053C                             l1591 05FA                             l1583 05E2  
                           l1575 05D0                             l1567 05C1                             l1559 05B5  
                           l1807 0667                             l1665 0226                             l1657 030A  
                           l1649 0302                             l1737 0334                             l1833 0443  
                           l1817 02AE                             l1921 03CD                             l1497 0266  
                           l1825 0540                             l1593 05FF                             l1585 05E6  
                           l1577 05D6                             l1569 05C5                             l1809 02BC  
                           l1659 030C                             l1667 0218                             l1739 0339  
                           l1819 02B5                             l1931 03E2                             l1923 03CF  
                           l1499 0269                             l1827 054B                             l1587 05F5  
                           l1579 05D9                             l1595 0605                             l1933 03ED  
                           l1829 0556                             l1597 060A                             l1589 05F9  
                           l1941 04A7                             l1935 03F2                             l1919 03C9  
                           l1599 060F                             l1951 04BA                             l1943 04AA  
                           l1793 025C                             l1937 0231                             l1929 03DA  
                           l1961 04D6                             l1953 04BC                             l1945 04AE  
                           l1971 0477                             l1963 04DC                             l1955 04C6  
                           l1947 04B1                             l1795 0615                             l1981 0490  
                           l1973 047A                             l1965 046D                             l1957 04CA  
                           l1949 04B4                             l1797 0620                             l1991 04E2  
                           l1983 0496                             l1975 0480                             l1967 0470  
                           l1959 04D0                             l1799 062B                             l1993 04E8  
                           l1985 049C                             l1977 0482                             l1969 0474  
                           l1995 04EB                             l1987 04A2                             l1979 048C  
                           l1997 04F0                             l1989 04E0                             l1999 04F4  
                           u1000 032B                             u1001 032A                             u1030 033F  
                           u1031 033E                             u1015 0330                             u1025 0335  
                           u1210 03D6                             u1211 03D5                             u1300 0507  
                           u1220 03E8                             u1301 0506                             u1221 03E7  
                           u1230 03F7                             u1231 03F6                             u1320 0517  
                           u1240 04D0                             u1400 07C4                             u1321 0516  
                           u1305 0503                             u1241 04CF                             u1401 07C3  
                           u1330 039A                             u1250 0496                             u1170 02C1  
                           u1315 050D                             u1331 0399                             u1251 0495  
                           u1171 02C0                             u1180 02AE                             u1260 04E8  
                           u1181 02AD                             u1261 04E7                             _LATA 010C  
                           u1350 03AA                             _LATB 010D                             u1351 03A9  
                           u1280 04F8                             u1360 03B4                             u1281 04F7  
                           u1361 03B3                             u1345 039E                             u1417 07E4  
                           u1275 04EC                             u1427 066C                             u1380 03C3  
                           u1381 03C2                             u1365 03B0                             u1390 07BE  
                           u1295 04F9                             u1375 03B9                             u1391 07BD  
                           _WPUA 020C                             _WPUB 020D                             _main 075F  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _stop 0253                  rtc_display@date 0032                  rtc_display@hour 0033  
                           start 0002                   calc_money@date 0076                   calc_money@hour 0036  
                 write_data@data 0073                ___bmul@multiplier 0073                   write_date@date 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0229                            ?_main 0070  
                __end_of___awdiv 0614                  __end_of___awmod 05B5                            ?_stop 0070  
                    i2c_read@ack 0071                  ___awdiv@divisor 0070                  __end_of___lwdiv 051C  
                __end_of___lwmod 03C8                  ___awdiv@counter 0075                            _TRISA 008C  
                          _TRISB 008D                            __read 0344                   _WDT_Initialize 0218  
                __end_of_m_start 0241             m_set_segments@length 0075                            _money 0042  
                          _start 024A                            status 0003                            wtemp0 007E  
                __initialization 07EE                     __end_of_main 07EE                     __end_of_stop 025C  
               __end_of_i2c_read 0325                 __end_of_i2c_wait 0286                 __end_of_i2c_stop 0230  
                         ??_main 003A                           ??_stop 0070                  ??_bcd_2_decimal 0074  
         __end_of_WDT_Initialize 021C                           ?__read 0070                  set_segments@pos 0076  
        __size_of_m_set_segments 003A                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         _ANSELB 018D                           ?_start 0070                           _BORCON 0116  
                   i2c_read@data 0072            __end_of_money_display 075F                           _OSCCON 0099  
                         _WDTCON 0097                           _TRISB2 046A                           _TRISB5 046D  
             __size_of_i2c_start 000A               __size_of_i2c_write 0010        __size_of_m_set_brigthness 0013  
                  ?_m_write_data 0070                           ___bmul 02E2                           ___wmul 0325  
                      ??___awdiv 0074                        ??___awmod 0074             __end_of_encode_digit 0238  
                      ??___lwdiv 0074                        ??___lwmod 0074                           _m_stop 0241  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                      ??_m_start 0070               _i2c_repeated_start 0266                  ?_WDT_Initialize 0070  
                   ?_rtc_display 0070          __size_of_set_brigthness 0013              ?_i2c_repeated_start 0070  
              _SYSTEM_Initialize 025C          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
            ___bmul@multiplicand 0070                m_set_segments@pos 0076                   ??_m_write_data 0070  
       set_brigthness@brightness 0072                   __pcstackCOMMON 0070                     __pidataBANK0 0296  
            ??_SYSTEM_Initialize 0070                    __end_of__read 0366             ??_i2c_repeated_start 0070  
                  __end_of_start 0253                __end_of_i2c_start 027A                __end_of_i2c_write 0296  
                 _OPTION_REGbits 0095                       _calc_money 0434                          ??__read 0078  
      __end_of_SYSTEM_Initialize 0266                       __read@data 007A                          ??_start 0070  
                     __pbssBANK0 0042                        ?_i2c_read 0070                        ?_i2c_wait 0070  
                      ?_i2c_stop 0070               __size_of_read_date 0046                       __pmaintext 075F  
                        ?___bmul 0070                          ?___wmul 0070                          ?_m_stop 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0075  
                        _OSCTUNE 0098                          _SSP2ADD 021A                          _SSP2BUF 0219  
                 _m_set_segments 046C                       ??_i2c_read 0070                       ??_i2c_wait 0070  
                     ??_i2c_stop 0070             __end_of_HOUR_4_MONEY 0802           __size_of_decimal_2_bcd 002E  
                     _m_segments 002A            __size_of_encode_digit 0008                 _m_set_brigthness 02A8  
                __size_of___bmul 0015                          ___awdiv 05B5                          ___awmod 0562  
                __size_of___wmul 001F                          ___lwdiv 04E0                          ___lwmod 0394  
                  ?_set_segments 0075                  __size_of_m_stop 0009                          __ptext1 0614  
                        __ptext2 0366                          __ptext3 02BB                          __ptext4 0674  
                        __ptext5 04A6                          __ptext6 03FE                          __ptext7 0253  
                        __ptext8 024A                          __ptext9 0562             __end_of_REGULAR_HOUR 0806  
          _OSCILLATOR_Initialize 0222                          _m_start 0238                __end_of_read_date 0562  
               ___awmod@dividend 0072                          _segdata 0020           __end_of_m_set_segments 04A6  
                    ?_calc_money 0076         ??_PIN_MANAGER_Initialize 0070             __end_of_m_write_data 03FE  
                 _set_brigthness 02BB       __size_of_SYSTEM_Initialize 000A           m_set_segments@segments 0078  
           end_of_initialization 07FD             __size_of_rtc_display 006E                     _encode_digit 0230  
                        init_ram 021C                       _t_segments 002E                          initloop 021D  
                  __read@address 0079             set_segments@segments 0078               money_display@value 007B  
                 ??_set_segments 0077                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                   _m_brightness 007D                    _decimal_2_bcd 0366                    i2c_write@data 0070  
         __end_of_set_brigthness 02CE                  ?_m_set_segments 0075                        _TRISAbits 008C  
          __end_of_bcd_2_decimal 02E2              __size_of_calc_money 0038                   __end_of___bmul 02F7  
                 __end_of___wmul 0344                       _write_data 03FE                       _write_date 0614  
                 ?_decimal_2_bcd 0070           ?_OSCILLATOR_Initialize 0070                   __end_of_m_stop 024A  
         __size_of_money_display 007D              start_initialization 07EE                  ?_set_brigthness 0070  
                m_set_segments@k 0079  __size_of_PIN_MANAGER_Initialize 0017                        _i2c_start 0270  
                      _i2c_write 0286                __size_of_i2c_read 0017                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                         ??___bmul 0071                         ??___wmul 0074  
                    __pdataBANK0 0020                 m_write_data@data 0073      __size_of_i2c_repeated_start 000A  
                       ??_m_stop 0070            __size_of_m_write_data 0036                     _HOUR_4_MONEY 0800  
                    __pbssCOMMON 007D                        ___latbits 0001                    __pcstackBANK0 0032  
       __end_of_m_set_brigthness 02BB                       ?_i2c_start 0070                       ?_i2c_write 0070  
           __end_of_set_segments 04E0                    _money_display 06E2                     _REGULAR_HOUR 0804  
               set_brigthness@on 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 02F7  
                   _m_write_data 03C8                         ?___awdiv 0070                         ?___awmod 0070  
                       ?___lwdiv 0070                         ?___lwmod 0070                  ??_decimal_2_bcd 0032  
                    ?_write_data 0070                      ?_write_date 0070                         ?_m_start 0070  
                   ??_calc_money 0032              __end_of_MIN_4_MONEY 0804                   __size_of__read 0022  
               ___lwdiv@quotient 0076                        _read_date 051C                   __size_of_start 0009  
                 ?_money_display 0070                   ___wmul@product 0074                         _LATAbits 010C  
             __end_of_calc_money 046C                         _SSP2CON1 021D                         _SSP2CON2 021E  
                       _SSP2STAT 021C                encode_digit@digit 0070                 ??_m_set_segments 0077  
              ___wmul@multiplier 0070                      write_data@b 0071                      write_data@i 0074  
                  ??_rtc_display 007A                      ??_i2c_start 0070                      ??_i2c_write 0070  
                     ?_read_date 0070                         _i2c_read 030E       m_set_brigthness@brightness 0072  
                       _i2c_wait 027A                         _i2c_stop 0229              __size_of_write_data 0036  
            __size_of_write_date 0060                    set_segments@k 0079                  m_write_data@ack 0072  
        ??_OSCILLATOR_Initialize 0070                 __size_of___awdiv 005F                 __size_of___awmod 0053  
               __size_of___lwdiv 003C                 __size_of___lwmod 0034                      _MIN_4_MONEY 0802  
               ??_set_brigthness 0071                 __size_of_m_start 0009            __size_of_set_segments 003A  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0075                         __ptext10 05B5  
                       __ptext11 051C                         __ptext20 02E2                         __ptext12 0344  
                       __ptext21 06E2                         __ptext13 0286                         __ptext30 0434  
                       __ptext22 046C                         __ptext14 0229                         __ptext31 0325  
                       __ptext23 03C8                         __ptext15 0270                         __ptext32 025C  
                       __ptext24 0241                         __ptext16 0266                         __ptext33 0218  
                       __ptext25 0238                         __ptext17 030E                         __ptext34 02F7  
                       __ptext26 0230                         __ptext18 027A                         __ptext35 0222  
                       __ptext27 0394                         __ptext19 02CE                         __ptext28 04E0  
                       __ptext29 02A8                  ??_money_display 007A                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E               m_set_brigthness@on 0070              __end_of_rtc_display 06E2  
                  __size_of_main 008F                    __size_of_stop 0009           __size_of_bcd_2_decimal 0014  
                       main@date 003C                     _set_segments 04A6                     _SSP2STATbits 021C  
              ?_m_set_brigthness 0070                    read_date@date 007C                      ??_read_date 007B  
        __size_of_WDT_Initialize 0004               ??_m_set_brigthness 0071                 ___lwmod@dividend 0072  
        ?_PIN_MANAGER_Initialize 0070       __end_of_i2c_repeated_start 0270                     ??_write_data 0070  
                   ??_write_date 007A              decimal_2_bcd@number 0079                    m_write_data@b 0071  
                  __pstringtext1 0800                    __pstringtext2 0802                    m_write_data@i 0074  
                  __pstringtext3 0804                  ___lwmod@divisor 0070                  ___lwmod@counter 0075  
                    _rtc_display 0674                    _bcd_2_decimal 02CE                    ?_encode_digit 0070  
 __end_of_PIN_MANAGER_Initialize 030E               __end_of_write_data 0434               __end_of_write_date 0674  
