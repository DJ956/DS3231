

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 01 15:55:34 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.30
    41                           ; Generated 26/08/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1827 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021C                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  029E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0219                     	;# 
   334  021A                     	;# 
   335  021B                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021E                     	;# 
   339  021F                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  039A                     	;# 
   370  039C                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0219                     	;# 
   492  021A                     	;# 
   493  021B                     	;# 
   494  021C                     	;# 
   495  021D                     	;# 
   496  021E                     	;# 
   497  021F                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0294                     	;# 
   503  0295                     	;# 
   504  0295                     	;# 
   505  0296                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  029B                     	;# 
   511  029C                     	;# 
   512  029C                     	;# 
   513  029D                     	;# 
   514  029E                     	;# 
   515  029E                     	;# 
   516  0311                     	;# 
   517  0311                     	;# 
   518  0312                     	;# 
   519  0313                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  039A                     	;# 
   528  039C                     	;# 
   529  039D                     	;# 
   530  039E                     	;# 
   531  039F                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  041C                     	;# 
   536  041D                     	;# 
   537  041E                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011A                     	;# 
   607  011B                     	;# 
   608  011D                     	;# 
   609  011E                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0216                     	;# 
   646  0216                     	;# 
   647  0217                     	;# 
   648  0217                     	;# 
   649  0219                     	;# 
   650  021A                     	;# 
   651  021B                     	;# 
   652  021C                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029B                     	;# 
   669  029C                     	;# 
   670  029C                     	;# 
   671  029D                     	;# 
   672  029E                     	;# 
   673  029E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0318                     	;# 
   679  0318                     	;# 
   680  0319                     	;# 
   681  031A                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0013                     	;# 
   724  0014                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  029E                     	;# 
   831  029E                     	;# 
   832  0311                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0318                     	;# 
   837  0318                     	;# 
   838  0319                     	;# 
   839  031A                     	;# 
   840  0394                     	;# 
   841  0395                     	;# 
   842  0396                     	;# 
   843  039A                     	;# 
   844  039C                     	;# 
   845  039D                     	;# 
   846  039E                     	;# 
   847  039F                     	;# 
   848  0415                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  0FE4                     	;# 
   855  0FE5                     	;# 
   856  0FE6                     	;# 
   857  0FE7                     	;# 
   858  0FE8                     	;# 
   859  0FE9                     	;# 
   860  0FEA                     	;# 
   861  0FEB                     	;# 
   862  0FED                     	;# 
   863  0FEE                     	;# 
   864  0FEF                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0014                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0016                     	;# 
   886  0017                     	;# 
   887  0018                     	;# 
   888  0019                     	;# 
   889  001A                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001E                     	;# 
   893  001F                     	;# 
   894  008C                     	;# 
   895  008D                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0097                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0194                     	;# 
   935  0195                     	;# 
   936  0196                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019C                     	;# 
   944  019C                     	;# 
   945  019D                     	;# 
   946  019E                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0219                     	;# 
   966  021A                     	;# 
   967  021B                     	;# 
   968  021C                     	;# 
   969  021D                     	;# 
   970  021E                     	;# 
   971  021F                     	;# 
   972  0291                     	;# 
   973  0291                     	;# 
   974  0292                     	;# 
   975  0293                     	;# 
   976  0294                     	;# 
   977  0295                     	;# 
   978  0295                     	;# 
   979  0296                     	;# 
   980  0298                     	;# 
   981  0298                     	;# 
   982  0299                     	;# 
   983  029A                     	;# 
   984  029B                     	;# 
   985  029C                     	;# 
   986  029C                     	;# 
   987  029D                     	;# 
   988  029E                     	;# 
   989  029E                     	;# 
   990  0311                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0318                     	;# 
   995  0318                     	;# 
   996  0319                     	;# 
   997  031A                     	;# 
   998  0394                     	;# 
   999  0395                     	;# 
  1000  0396                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0415                     	;# 
  1007  0416                     	;# 
  1008  0417                     	;# 
  1009  041C                     	;# 
  1010  041D                     	;# 
  1011  041E                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0014                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  001E                     	;# 
  1051  001F                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0098                     	;# 
  1062  0099                     	;# 
  1063  009A                     	;# 
  1064  009B                     	;# 
  1065  009B                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011B                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0194                     	;# 
  1093  0195                     	;# 
  1094  0196                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0219                     	;# 
  1124  021A                     	;# 
  1125  021B                     	;# 
  1126  021C                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0295                     	;# 
  1136  0295                     	;# 
  1137  0296                     	;# 
  1138  0298                     	;# 
  1139  0298                     	;# 
  1140  0299                     	;# 
  1141  029A                     	;# 
  1142  029B                     	;# 
  1143  029C                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  0394                     	;# 
  1157  0395                     	;# 
  1158  0396                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181                           
  1182                           	psect	idataBANK0
  1183  0517                     __pidataBANK0:
  1184                           
  1185                           ;initializer for _segdata
  1186  0517  343F               	retlw	63
  1187  0518  3406               	retlw	6
  1188  0519  345B               	retlw	91
  1189  051A  344F               	retlw	79
  1190  051B  3466               	retlw	102
  1191  051C  346D               	retlw	109
  1192  051D  347D               	retlw	125
  1193  051E  3407               	retlw	7
  1194  051F  347F               	retlw	127
  1195  0520  346F               	retlw	111
  1196                           
  1197                           ;initializer for rtc_display@F2393
  1198  0521  34FF               	retlw	255
  1199  0522  34FF               	retlw	255
  1200  0523  34FF               	retlw	255
  1201  0524  34FF               	retlw	255
  1202  000C                     _PORTAbits	set	12
  1203  008C                     _TRISAbits	set	140
  1204  0097                     _WDTCON	set	151
  1205  0098                     _OSCTUNE	set	152
  1206  0099                     _OSCCON	set	153
  1207  0095                     _OPTION_REGbits	set	149
  1208  008D                     _TRISB	set	141
  1209  008C                     _TRISA	set	140
  1210  046D                     _TRISB5	set	1133
  1211  046A                     _TRISB2	set	1130
  1212  010C                     _LATAbits	set	268
  1213  0116                     _BORCON	set	278
  1214  011E                     _APFCON1	set	286
  1215  011D                     _APFCON0	set	285
  1216  010D                     _LATB	set	269
  1217  010C                     _LATA	set	268
  1218  018C                     _ANSELA	set	396
  1219  018D                     _ANSELB	set	397
  1220  021D                     _SSP2CON1bits	set	541
  1221  021C                     _SSP2STATbits	set	540
  1222  0219                     _SSP2BUF	set	537
  1223  021E                     _SSP2CON2bits	set	542
  1224  021C                     _SSP2STAT	set	540
  1225  021E                     _SSP2CON2	set	542
  1226  021D                     _SSP2CON1	set	541
  1227  021A                     _SSP2ADD	set	538
  1228  020C                     _WPUA	set	524
  1229  020D                     _WPUB	set	525
  1230                           
  1231                           	psect	cinit
  1232  07EC                     start_initialization:	
  1233                           ; #config settings
  1234                           
  1235  07EC                     __initialization:
  1236                           
  1237                           ; Initialize objects allocated to BANK0
  1238  07EC  3017               	movlw	low __pidataBANK0
  1239  07ED  0084               	movwf	4
  1240  07EE  3085               	movlw	(high __pidataBANK0)| (0+128)
  1241  07EF  0085               	movwf	5
  1242  07F0  3033               	movlw	low __pdataBANK0
  1243  07F1  0086               	movwf	6
  1244  07F2  3000               	movlw	high __pdataBANK0
  1245  07F3  0087               	movwf	7
  1246  07F4  300E               	movlw	14
  1247  07F5  3184  24BF  3187   	fcall	init_ram
  1248                           
  1249                           ; Clear objects allocated to COMMON
  1250  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
  1251                           
  1252                           ; Clear objects allocated to BANK0
  1253  07F9  01C1               	clrf	__pbssBANK0& (0+127)
  1254  07FA  01C2               	clrf	(__pbssBANK0+1)& (0+127)
  1255  07FB  01C3               	clrf	(__pbssBANK0+2)& (0+127)
  1256  07FC  01C4               	clrf	(__pbssBANK0+3)& (0+127)
  1257  07FD                     end_of_initialization:	
  1258                           ;End of C runtime variable initialization code
  1259                           
  1260  07FD                     __end_of__initialization:
  1261  07FD  0020               	movlb	0
  1262  07FE  3186  2E3A         	ljmp	_main	;jump to C main() function
  1263                           
  1264                           	psect	bssCOMMON
  1265  007D                     __pbssCOMMON:
  1266  007D                     _m_brightness:
  1267  007D                     	ds	1
  1268                           
  1269                           	psect	bssBANK0
  1270  0041                     __pbssBANK0:
  1271  0041                     clear@F2384:
  1272  0041                     	ds	4
  1273                           
  1274                           	psect	dataBANK0
  1275  0033                     __pdataBANK0:
  1276  0033                     _segdata:
  1277  0033                     	ds	10
  1278  003D                     rtc_display@F2393:
  1279  003D                     	ds	4
  1280                           
  1281                           	psect	inittext
  1282  04BF                     init_ram:
  1283  04BF  00FE               	movwf	btemp
  1284  04C0                     initloop:
  1285  04C0  0012               	moviw fsr0++
  1286  04C1  001E               	movwi fsr1++
  1287  04C2  0BFE               	decfsz	btemp,f
  1288  04C3  2CC0               	goto	initloop
  1289  04C4  3400               	retlw	0
  1290                           
  1291                           	psect	cstackCOMMON
  1292  0070                     __pcstackCOMMON:
  1293  0070                     ?_OSCILLATOR_Initialize:
  1294  0070                     ??_OSCILLATOR_Initialize:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_WDT_Initialize:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ??_WDT_Initialize:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_set_brigthness:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_read_date:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_rtc_display:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_encode_digit:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ??_encode_digit:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_PIN_MANAGER_Initialize:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ??_PIN_MANAGER_Initialize:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_SYSTEM_Initialize:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ??_SYSTEM_Initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_main:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_i2c_wait:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ??_i2c_wait:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_i2c_start:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ??_i2c_start:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_i2c_stop:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ??_i2c_stop:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_i2c_repeated_start:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ??_i2c_repeated_start:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_i2c_write:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ??_i2c_write:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_i2c_read:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ??_i2c_read:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_bit_delay:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ??_bit_delay:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_start:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ??_start:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_stop:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ??_stop:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_write_data:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ??_write_data:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_bcd_2_decimal:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?__read:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?___bmul:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?___awdiv:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?___awmod:	
  1406                           ; 2 bytes @ 0x0
  1407                           
  1408  0070                     i2c_write@data:	
  1409                           ; 2 bytes @ 0x0
  1410                           
  1411  0070                     set_brigthness@on:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     encode_digit@digit:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ___bmul@multiplicand:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ___awdiv@divisor:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ___awmod@divisor:	
  1424                           ; 2 bytes @ 0x0
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x0
  1428  0070                     	ds	1
  1429  0071                     ??_set_brigthness:
  1430  0071                     ??___bmul:	
  1431                           ; 1 bytes @ 0x1
  1432                           
  1433  0071                     i2c_read@ack:	
  1434                           ; 1 bytes @ 0x1
  1435                           
  1436  0071                     write_data@b:	
  1437                           ; 1 bytes @ 0x1
  1438                           
  1439                           
  1440                           ; 1 bytes @ 0x1
  1441  0071                     	ds	1
  1442  0072                     i2c_read@data:
  1443  0072                     write_data@ack:	
  1444                           ; 1 bytes @ 0x2
  1445                           
  1446  0072                     set_brigthness@brightness:	
  1447                           ; 1 bytes @ 0x2
  1448                           
  1449  0072                     ___bmul@product:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0072                     ___awdiv@dividend:	
  1453                           ; 1 bytes @ 0x2
  1454                           
  1455  0072                     ___awmod@dividend:	
  1456                           ; 2 bytes @ 0x2
  1457                           
  1458                           
  1459                           ; 2 bytes @ 0x2
  1460  0072                     	ds	1
  1461  0073                     write_data@data:
  1462  0073                     ___bmul@multiplier:	
  1463                           ; 1 bytes @ 0x3
  1464                           
  1465                           
  1466                           ; 1 bytes @ 0x3
  1467  0073                     	ds	1
  1468  0074                     ??_bcd_2_decimal:
  1469  0074                     ??___awdiv:	
  1470                           ; 1 bytes @ 0x4
  1471                           
  1472  0074                     ??___awmod:	
  1473                           ; 1 bytes @ 0x4
  1474                           
  1475  0074                     write_data@i:	
  1476                           ; 1 bytes @ 0x4
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x4
  1480  0074                     	ds	1
  1481  0075                     ?_set_segments:
  1482  0075                     set_segments@length:	
  1483                           ; 1 bytes @ 0x5
  1484                           
  1485  0075                     ___awdiv@counter:	
  1486                           ; 1 bytes @ 0x5
  1487                           
  1488  0075                     ___awmod@counter:	
  1489                           ; 1 bytes @ 0x5
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x5
  1493  0075                     	ds	1
  1494  0076                     set_segments@pos:
  1495  0076                     ___awdiv@sign:	
  1496                           ; 1 bytes @ 0x6
  1497                           
  1498  0076                     ___awmod@sign:	
  1499                           ; 1 bytes @ 0x6
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x6
  1503  0076                     	ds	1
  1504  0077                     ??_set_segments:
  1505  0077                     bcd_2_decimal@number:	
  1506                           ; 1 bytes @ 0x7
  1507                           
  1508  0077                     ___awdiv@quotient:	
  1509                           ; 1 bytes @ 0x7
  1510                           
  1511                           
  1512                           ; 2 bytes @ 0x7
  1513  0077                     	ds	1
  1514  0078                     ??__read:
  1515  0078                     set_segments@segments:	
  1516                           ; 1 bytes @ 0x8
  1517                           
  1518                           
  1519                           ; 1 bytes @ 0x8
  1520  0078                     	ds	1
  1521  0079                     set_segments@k:
  1522  0079                     __read@address:	
  1523                           ; 1 bytes @ 0x9
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0x9
  1527  0079                     	ds	1
  1528  007A                     ??_rtc_display:
  1529  007A                     __read@data:	
  1530                           ; 1 bytes @ 0xA
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0xA
  1534  007A                     	ds	1
  1535  007B                     ??_read_date:
  1536                           
  1537                           ; 1 bytes @ 0xB
  1538  007B                     	ds	1
  1539  007C                     read_date@date:
  1540                           
  1541                           ; 1 bytes @ 0xC
  1542  007C                     	ds	1
  1543                           
  1544                           	psect	cstackBANK0
  1545  0020                     __pcstackBANK0:
  1546  0020                     	ds	4
  1547  0024                     rtc_display@segments:
  1548                           
  1549                           ; 4 bytes @ 0x4
  1550  0024                     	ds	4
  1551  0028                     rtc_display@min:
  1552                           
  1553                           ; 1 bytes @ 0x8
  1554  0028                     	ds	1
  1555  0029                     rtc_display@sec:
  1556                           
  1557                           ; 1 bytes @ 0x9
  1558  0029                     	ds	1
  1559  002A                     rtc_display@date:
  1560                           
  1561                           ; 1 bytes @ 0xA
  1562  002A                     	ds	1
  1563  002B                     ??_main:
  1564                           
  1565                           ; 1 bytes @ 0xB
  1566  002B                     	ds	2
  1567  002D                     main@date:
  1568                           
  1569                           ; 6 bytes @ 0xD
  1570  002D                     	ds	6
  1571                           
  1572                           	psect	maintext
  1573  063A                     __pmaintext:	
  1574 ;;
  1575 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1576 ;;
  1577 ;; *************** function _main *****************
  1578 ;; Defined at:
  1579 ;;		line 7 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  date            6   13[BANK0 ] struct Date
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : B1F/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1593 ;;      Params:         0       0       0       0       0       0
  1594 ;;      Locals:         0       6       0       0       0       0
  1595 ;;      Temps:          0       2       0       0       0       0
  1596 ;;      Totals:         0       8       0       0       0       0
  1597 ;;Total ram usage:        8 bytes
  1598 ;; Hardware stack levels required when called:    4
  1599 ;; This function calls:
  1600 ;;		_SYSTEM_Initialize
  1601 ;;		_read_date
  1602 ;;		_rtc_display
  1603 ;;		_set_brigthness
  1604 ;; This function is called by:
  1605 ;;		Startup code after reset
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _main
  1611  063A                     _main:
  1612  063A                     l1498:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1615                           
  1616                           
  1617                           ;main.c: 10: SYSTEM_Initialize();
  1618  063A  3184  24ED  3186   	fcall	_SYSTEM_Initialize
  1619  063D                     l1500:
  1620                           
  1621                           ;main.c: 12: TRISB2 = 1;
  1622  063D  0021               	movlb	1	; select bank1
  1623  063E  150D               	bsf	13,2	;volatile
  1624  063F                     l1502:
  1625                           
  1626                           ;main.c: 13: TRISB5 = 1;
  1627  063F  168D               	bsf	13,5	;volatile
  1628  0640                     l1504:
  1629                           
  1630                           ;main.c: 14: WPUB = 0x24;
  1631  0640  3024               	movlw	36
  1632  0641  0024               	movlb	4	; select bank4
  1633  0642  008D               	movwf	13	;volatile
  1634  0643                     l1506:
  1635                           
  1636                           ;main.c: 16: SSP2ADD = 0x13;
  1637  0643  3013               	movlw	19
  1638  0644  009A               	movwf	26	;volatile
  1639  0645                     l1508:
  1640                           
  1641                           ;main.c: 17: SSP2CON1 = 0x28;
  1642  0645  3028               	movlw	40
  1643  0646  009D               	movwf	29	;volatile
  1644  0647                     l1510:
  1645                           
  1646                           ;main.c: 18: SSP2CON2 = 0x0;
  1647  0647  019E               	clrf	30	;volatile
  1648  0648                     l1512:
  1649                           
  1650                           ;main.c: 19: SSP2STAT = 0;
  1651  0648  019C               	clrf	28	;volatile
  1652  0649                     l1514:
  1653                           
  1654                           ;main.c: 21: struct Date date;;main.c: 22: date.year = 20;
  1655  0649  3014               	movlw	20
  1656  064A  0020               	movlb	0	; select bank0
  1657  064B  00AB               	movwf	??_main
  1658  064C  082B               	movf	??_main,w
  1659  064D  00AD               	movwf	main@date
  1660  064E                     l1516:
  1661                           
  1662                           ;main.c: 23: date.month = 11;
  1663  064E  300B               	movlw	11
  1664  064F  00AB               	movwf	??_main
  1665  0650  082B               	movf	??_main,w
  1666  0651  00AE               	movwf	main@date+1
  1667  0652                     l1518:
  1668                           
  1669                           ;main.c: 24: date.day = 1;
  1670  0652  01AF               	clrf	main@date+2
  1671  0653  0AAF               	incf	main@date+2,f
  1672  0654                     l1520:
  1673                           
  1674                           ;main.c: 25: date.hour = 10;
  1675  0654  300A               	movlw	10
  1676  0655  00AB               	movwf	??_main
  1677  0656  082B               	movf	??_main,w
  1678  0657  00B0               	movwf	main@date+3
  1679  0658                     l1522:
  1680                           
  1681                           ;main.c: 26: date.min = 38;
  1682  0658  3026               	movlw	38
  1683  0659  00AB               	movwf	??_main
  1684  065A  082B               	movf	??_main,w
  1685  065B  00B1               	movwf	main@date+4
  1686  065C                     l1524:
  1687                           
  1688                           ;main.c: 27: date.sec = 24;
  1689  065C  3018               	movlw	24
  1690  065D  00AB               	movwf	??_main
  1691  065E  082B               	movf	??_main,w
  1692  065F  00B2               	movwf	main@date+5
  1693                           
  1694                           ;main.c: 31: set_brigthness(0x0f, 1);
  1695  0660  01F0               	clrf	set_brigthness@on
  1696  0661  0AF0               	incf	set_brigthness@on,f
  1697  0662  300F               	movlw	15
  1698  0663  3185  2535  3186   	fcall	_set_brigthness
  1699  0666                     l1526:
  1700                           
  1701                           ;main.c: 35: {;main.c: 36: read_date(&date);
  1702  0666  302D               	movlw	(low (main@date| 0))& (0+255)
  1703  0667  3186  267E  3186   	fcall	_read_date
  1704  066A                     l1528:
  1705                           
  1706                           ;main.c: 37: rtc_display(&date);
  1707  066A  302D               	movlw	(low (main@date| 0))& (0+255)
  1708  066B  3187  2776  3186   	fcall	_rtc_display
  1709  066E                     l1530:
  1710                           
  1711                           ;main.c: 39: _delay((unsigned long)((100)*(8000000/4000.0)));
  1712  066E  3002               	movlw	2
  1713  066F  0020               	movlb	0	; select bank0
  1714  0670  00AC               	movwf	??_main+1
  1715  0671  3004               	movlw	4
  1716  0672  00AB               	movwf	??_main
  1717  0673  30BA               	movlw	186
  1718  0674                     u737:
  1719  0674  0B89               	decfsz	9,f
  1720  0675  2E74               	goto	u737
  1721  0676  0BAB               	decfsz	??_main,f
  1722  0677  2E74               	goto	u737
  1723  0678  0BAC               	decfsz	??_main+1,f
  1724  0679  2E74               	goto	u737
  1725  067A  0000               	nop
  1726  067B  2E66               	goto	l1526
  1727  067C  3180  2802         	ljmp	start
  1728  067E                     __end_of_main:
  1729                           
  1730                           	psect	text1
  1731  0535                     __ptext1:	
  1732 ;; *************** function _set_brigthness *****************
  1733 ;; Defined at:
  1734 ;;		line 98 in file "TM1637.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  brightness      1    wreg     unsigned char 
  1737 ;;  on              1    0[COMMON] unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  brightness      1    2[COMMON] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1749 ;;      Params:         1       0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0
  1751 ;;      Temps:          1       0       0       0       0       0
  1752 ;;      Totals:         3       0       0       0       0       0
  1753 ;;Total ram usage:        3 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _set_brigthness
  1764  0535                     _set_brigthness:
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1768                           ;set_brigthness@brightness stored from wreg
  1769  0535  00F2               	movwf	set_brigthness@brightness
  1770  0536                     l1454:
  1771                           
  1772                           ;TM1637.c: 99: if(on == 1){
  1773  0536  0370               	decf	set_brigthness@on,w
  1774  0537  1D03               	btfss	3,2
  1775  0538  2D3A               	goto	u711
  1776  0539  2D3B               	goto	u710
  1777  053A                     u711:
  1778  053A  2D42               	goto	l1458
  1779  053B                     u710:
  1780  053B                     l1456:
  1781                           
  1782                           ;TM1637.c: 100: m_brightness = (brightness & 0x7 | 0x08);
  1783  053B  0872               	movf	set_brigthness@brightness,w
  1784  053C  3907               	andlw	7
  1785  053D  3808               	iorlw	8
  1786  053E  00F1               	movwf	??_set_brigthness
  1787  053F  0871               	movf	??_set_brigthness,w
  1788  0540  00FD               	movwf	_m_brightness
  1789                           
  1790                           ;TM1637.c: 101: }else{
  1791  0541  2D47               	goto	l223
  1792  0542                     l1458:
  1793                           
  1794                           ;TM1637.c: 102: m_brightness = (brightness & 0x7 | 0x00);
  1795  0542  0872               	movf	set_brigthness@brightness,w
  1796  0543  3907               	andlw	7
  1797  0544  00F1               	movwf	??_set_brigthness
  1798  0545  0871               	movf	??_set_brigthness,w
  1799  0546  00FD               	movwf	_m_brightness
  1800  0547                     l223:
  1801  0547  0008               	return
  1802  0548                     __end_of_set_brigthness:
  1803                           
  1804                           	psect	text2
  1805  0776                     __ptext2:	
  1806 ;; *************** function _rtc_display *****************
  1807 ;; Defined at:
  1808 ;;		line 43 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  date            1    wreg     PTR struct Date
  1811 ;;		 -> main@date(6), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  date            1   10[BANK0 ] PTR struct Date
  1814 ;;		 -> main@date(6), 
  1815 ;;  segments        4    4[BANK0 ] unsigned char [4]
  1816 ;;  sec             1    9[BANK0 ] unsigned char 
  1817 ;;  min             1    8[BANK0 ] unsigned char 
  1818 ;;  hour            1    0        unsigned char 
  1819 ;;  day             1    0        unsigned char 
  1820 ;;  month           1    0        unsigned char 
  1821 ;;  year            1    0        unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1831 ;;      Params:         0       0       0       0       0       0
  1832 ;;      Locals:         0      11       0       0       0       0
  1833 ;;      Temps:          3       0       0       0       0       0
  1834 ;;      Totals:         3      11       0       0       0       0
  1835 ;;Total ram usage:       14 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		___awdiv
  1840 ;;		___awmod
  1841 ;;		_encode_digit
  1842 ;;		_set_segments
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _rtc_display
  1850  0776                     _rtc_display:
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _rtc_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1854                           ;rtc_display@date stored from wreg
  1855  0776  0020               	movlb	0	; select bank0
  1856  0777  00AA               	movwf	rtc_display@date
  1857  0778                     l1470:
  1858                           
  1859                           ;main.c: 44: uint8_t segments[] = {0xff, 0xff, 0xff, 0xff};
  1860  0778  0840               	movf	rtc_display@F2393+3,w
  1861  0779  00A7               	movwf	rtc_display@segments+3
  1862  077A  083F               	movf	rtc_display@F2393+2,w
  1863  077B  00A6               	movwf	rtc_display@segments+2
  1864  077C  083E               	movf	rtc_display@F2393+1,w
  1865  077D  00A5               	movwf	rtc_display@segments+1
  1866  077E  083D               	movf	rtc_display@F2393,w
  1867  077F  00A4               	movwf	rtc_display@segments
  1868  0780                     l1472:
  1869  0780                     l1474:
  1870  0780                     l1476:
  1871  0780                     l1478:
  1872  0780                     l1480:
  1873                           
  1874                           ;main.c: 50: uint8_t min = date->min;
  1875  0780  082A               	movf	rtc_display@date,w
  1876  0781  0086               	movwf	6
  1877  0782  0187               	clrf	7
  1878  0783  3F44               	moviw [4]fsr1
  1879  0784  00A8               	movwf	rtc_display@min
  1880  0785                     l1482:
  1881                           
  1882                           ;main.c: 51: uint8_t sec = date->sec;
  1883  0785  082A               	movf	rtc_display@date,w
  1884  0786  0086               	movwf	6
  1885  0787  0187               	clrf	7
  1886  0788  3F45               	moviw [5]fsr1
  1887  0789  00A9               	movwf	rtc_display@sec
  1888  078A                     l1484:
  1889                           
  1890                           ;main.c: 53: segments[0] = encode_digit(min / 10);
  1891  078A  300A               	movlw	10
  1892  078B  00F0               	movwf	___awdiv@divisor
  1893  078C  3000               	movlw	0
  1894  078D  00F1               	movwf	___awdiv@divisor+1
  1895  078E  0828               	movf	rtc_display@min,w
  1896  078F  00FA               	movwf	??_rtc_display
  1897  0790  01FB               	clrf	??_rtc_display+1
  1898  0791  087A               	movf	??_rtc_display,w
  1899  0792  00F2               	movwf	___awdiv@dividend
  1900  0793  087B               	movf	??_rtc_display+1,w
  1901  0794  00F3               	movwf	___awdiv@dividend+1
  1902  0795  3187  2717  3187   	fcall	___awdiv
  1903  0798  0870               	movf	?___awdiv,w
  1904  0799  3184  24D3  3187   	fcall	_encode_digit
  1905  079C  00FC               	movwf	??_rtc_display+2
  1906  079D  087C               	movf	??_rtc_display+2,w
  1907  079E  0020               	movlb	0	; select bank0
  1908  079F  00A4               	movwf	rtc_display@segments
  1909  07A0                     l1486:
  1910                           
  1911                           ;main.c: 54: segments[1] = encode_digit(min % 10);
  1912  07A0  300A               	movlw	10
  1913  07A1  00F0               	movwf	___awmod@divisor
  1914  07A2  3000               	movlw	0
  1915  07A3  00F1               	movwf	___awmod@divisor+1
  1916  07A4  0828               	movf	rtc_display@min,w
  1917  07A5  00FA               	movwf	??_rtc_display
  1918  07A6  01FB               	clrf	??_rtc_display+1
  1919  07A7  087A               	movf	??_rtc_display,w
  1920  07A8  00F2               	movwf	___awmod@dividend
  1921  07A9  087B               	movf	??_rtc_display+1,w
  1922  07AA  00F3               	movwf	___awmod@dividend+1
  1923  07AB  3186  26C4  3187   	fcall	___awmod
  1924  07AE  0870               	movf	?___awmod,w
  1925  07AF  3184  24D3  3187   	fcall	_encode_digit
  1926  07B2  00FC               	movwf	??_rtc_display+2
  1927  07B3  087C               	movf	??_rtc_display+2,w
  1928  07B4  0020               	movlb	0	; select bank0
  1929  07B5  00A5               	movwf	rtc_display@segments+1
  1930  07B6                     l1488:
  1931                           
  1932                           ;main.c: 55: segments[2] = encode_digit(sec / 10);
  1933  07B6  300A               	movlw	10
  1934  07B7  00F0               	movwf	___awdiv@divisor
  1935  07B8  3000               	movlw	0
  1936  07B9  00F1               	movwf	___awdiv@divisor+1
  1937  07BA  0829               	movf	rtc_display@sec,w
  1938  07BB  00FA               	movwf	??_rtc_display
  1939  07BC  01FB               	clrf	??_rtc_display+1
  1940  07BD  087A               	movf	??_rtc_display,w
  1941  07BE  00F2               	movwf	___awdiv@dividend
  1942  07BF  087B               	movf	??_rtc_display+1,w
  1943  07C0  00F3               	movwf	___awdiv@dividend+1
  1944  07C1  3187  2717  3187   	fcall	___awdiv
  1945  07C4  0870               	movf	?___awdiv,w
  1946  07C5  3184  24D3  3187   	fcall	_encode_digit
  1947  07C8  00FC               	movwf	??_rtc_display+2
  1948  07C9  087C               	movf	??_rtc_display+2,w
  1949  07CA  0020               	movlb	0	; select bank0
  1950  07CB  00A6               	movwf	rtc_display@segments+2
  1951  07CC                     l1490:
  1952                           
  1953                           ;main.c: 56: segments[3] = encode_digit(sec % 10);
  1954  07CC  300A               	movlw	10
  1955  07CD  00F0               	movwf	___awmod@divisor
  1956  07CE  3000               	movlw	0
  1957  07CF  00F1               	movwf	___awmod@divisor+1
  1958  07D0  0829               	movf	rtc_display@sec,w
  1959  07D1  00FA               	movwf	??_rtc_display
  1960  07D2  01FB               	clrf	??_rtc_display+1
  1961  07D3  087A               	movf	??_rtc_display,w
  1962  07D4  00F2               	movwf	___awmod@dividend
  1963  07D5  087B               	movf	??_rtc_display+1,w
  1964  07D6  00F3               	movwf	___awmod@dividend+1
  1965  07D7  3186  26C4  3187   	fcall	___awmod
  1966  07DA  0870               	movf	?___awmod,w
  1967  07DB  3184  24D3  3187   	fcall	_encode_digit
  1968  07DE  00FC               	movwf	??_rtc_display+2
  1969  07DF  087C               	movf	??_rtc_display+2,w
  1970  07E0  0020               	movlb	0	; select bank0
  1971  07E1  00A7               	movwf	rtc_display@segments+3
  1972  07E2                     l1492:
  1973                           
  1974                           ;main.c: 58: set_segments(segments, 4, 0);
  1975  07E2  3004               	movlw	4
  1976  07E3  00FA               	movwf	??_rtc_display
  1977  07E4  087A               	movf	??_rtc_display,w
  1978  07E5  00F5               	movwf	set_segments@length
  1979  07E6  01F6               	clrf	set_segments@pos
  1980  07E7  3024               	movlw	(low (rtc_display@segments| 0))& (0+255)
  1981  07E8  3185  25C1  3187   	fcall	_set_segments
  1982  07EB                     l92:
  1983  07EB  0008               	return
  1984  07EC                     __end_of_rtc_display:
  1985                           
  1986                           	psect	text3
  1987  05C1                     __ptext3:	
  1988 ;; *************** function _set_segments *****************
  1989 ;; Defined at:
  1990 ;;		line 106 in file "TM1637.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  segments        1    wreg     PTR const unsigned char 
  1993 ;;		 -> clear@data(4), rtc_display@segments(4), 
  1994 ;;  length          1    5[COMMON] unsigned char 
  1995 ;;  pos             1    6[COMMON] unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  segments        1    8[COMMON] PTR const unsigned char 
  1998 ;;		 -> clear@data(4), rtc_display@segments(4), 
  1999 ;;  k               1    9[COMMON] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2009 ;;      Params:         2       0       0       0       0       0
  2010 ;;      Locals:         2       0       0       0       0       0
  2011 ;;      Temps:          1       0       0       0       0       0
  2012 ;;      Totals:         5       0       0       0       0       0
  2013 ;;Total ram usage:        5 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    2
  2016 ;; This function calls:
  2017 ;;		_start
  2018 ;;		_stop
  2019 ;;		_write_data
  2020 ;; This function is called by:
  2021 ;;		_rtc_display
  2022 ;;		_clear
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _set_segments
  2028  05C1                     _set_segments:
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2032                           ;set_segments@segments stored from wreg
  2033  05C1  00F8               	movwf	set_segments@segments
  2034  05C2                     l1340:
  2035                           
  2036                           ;TM1637.c: 109: start();
  2037  05C2  3184  24DB  3185   	fcall	_start
  2038  05C5                     l1342:
  2039                           
  2040                           ;TM1637.c: 110: write_data(0x40);
  2041  05C5  3040               	movlw	64
  2042  05C6  3185  25FB  3185   	fcall	_write_data
  2043  05C9                     l1344:
  2044                           
  2045                           ;TM1637.c: 111: stop();
  2046  05C9  3184  24E4  3185   	fcall	_stop
  2047  05CC                     l1346:
  2048                           
  2049                           ;TM1637.c: 114: start();
  2050  05CC  3184  24DB  3185   	fcall	_start
  2051  05CF                     l1348:
  2052                           
  2053                           ;TM1637.c: 115: write_data(0xC0 + (pos & 0x03));
  2054  05CF  0876               	movf	set_segments@pos,w
  2055  05D0  3903               	andlw	3
  2056  05D1  3EC0               	addlw	192
  2057  05D2  3185  25FB  3185   	fcall	_write_data
  2058  05D5                     l1350:
  2059                           
  2060                           ;TM1637.c: 118: for(uint8_t k = 0; k < length; k++){
  2061  05D5  01F9               	clrf	set_segments@k
  2062  05D6  2DE5               	goto	l1356
  2063  05D7                     l1352:
  2064                           
  2065                           ;TM1637.c: 119: write_data(segments[k]);
  2066  05D7  0879               	movf	set_segments@k,w
  2067  05D8  0778               	addwf	set_segments@segments,w
  2068  05D9  00F7               	movwf	??_set_segments
  2069  05DA  0877               	movf	??_set_segments,w
  2070  05DB  0086               	movwf	6
  2071  05DC  0187               	clrf	7
  2072  05DD  0801               	movf	1,w
  2073  05DE  3185  25FB  3185   	fcall	_write_data
  2074  05E1                     l1354:
  2075  05E1  3001               	movlw	1
  2076  05E2  00F7               	movwf	??_set_segments
  2077  05E3  0877               	movf	??_set_segments,w
  2078  05E4  07F9               	addwf	set_segments@k,f
  2079  05E5                     l1356:
  2080  05E5  0875               	movf	set_segments@length,w
  2081  05E6  0279               	subwf	set_segments@k,w
  2082  05E7  1C03               	skipc
  2083  05E8  2DEA               	goto	u511
  2084  05E9  2DEB               	goto	u510
  2085  05EA                     u511:
  2086  05EA  2DD7               	goto	l1352
  2087  05EB                     u510:
  2088  05EB                     l1358:
  2089                           
  2090                           ;TM1637.c: 120: };TM1637.c: 122: stop();
  2091  05EB  3184  24E4  3185   	fcall	_stop
  2092                           
  2093                           ;TM1637.c: 125: start();
  2094  05EE  3184  24DB  3185   	fcall	_start
  2095  05F1                     l1360:
  2096                           
  2097                           ;TM1637.c: 126: write_data(0x80 + (m_brightness & 0x0f));
  2098  05F1  087D               	movf	_m_brightness,w
  2099  05F2  390F               	andlw	15
  2100  05F3  3E80               	addlw	128
  2101  05F4  3185  25FB  3185   	fcall	_write_data
  2102  05F7                     l1362:
  2103                           
  2104                           ;TM1637.c: 127: stop();
  2105  05F7  3184  24E4  3185   	fcall	_stop
  2106  05FA                     l229:
  2107  05FA  0008               	return
  2108  05FB                     __end_of_set_segments:
  2109                           
  2110                           	psect	text4
  2111  05FB                     __ptext4:	
  2112 ;; *************** function _write_data *****************
  2113 ;; Defined at:
  2114 ;;		line 57 in file "TM1637.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  b               1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  b               1    1[COMMON] unsigned char 
  2119 ;;  i               1    4[COMMON] unsigned char 
  2120 ;;  data            1    3[COMMON] unsigned char 
  2121 ;;  ack             1    2[COMMON] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      unsigned char 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2131 ;;      Params:         0       0       0       0       0       0
  2132 ;;      Locals:         4       0       0       0       0       0
  2133 ;;      Temps:          1       0       0       0       0       0
  2134 ;;      Totals:         5       0       0       0       0       0
  2135 ;;Total ram usage:        5 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    1
  2138 ;; This function calls:
  2139 ;;		_bit_delay
  2140 ;; This function is called by:
  2141 ;;		_set_segments
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _write_data
  2147  05FB                     _write_data:
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  2151                           ;write_data@b stored from wreg
  2152  05FB  00F1               	movwf	write_data@b
  2153  05FC                     l1278:
  2154                           
  2155                           ;TM1637.c: 58: uint8_t data = b;
  2156  05FC  0871               	movf	write_data@b,w
  2157  05FD  00F0               	movwf	??_write_data
  2158  05FE  0870               	movf	??_write_data,w
  2159  05FF  00F3               	movwf	write_data@data
  2160  0600                     l1280:
  2161  0600  0021               	movlb	1	; select bank1
  2162  0601  100C               	bcf	12,0	;volatile
  2163  0602                     l1282:
  2164                           
  2165                           ;TM1637.c: 61: for(uint8_t i = 0; i < 8; i++){
  2166  0602  01F4               	clrf	write_data@i
  2167  0603                     l193:	
  2168                           ;TM1637.c: 62: do { LATAbits.LATA0 = 0; } while(0);
  2169                           
  2170  0603  0022               	movlb	2	; select bank2
  2171  0604  100C               	bcf	12,0	;volatile
  2172  0605                     l194:
  2173                           
  2174                           ;TM1637.c: 64: if(data & 0x01){
  2175  0605  1C73               	btfss	write_data@data,0
  2176  0606  2E08               	goto	u471
  2177  0607  2E09               	goto	u470
  2178  0608                     u471:
  2179  0608  2E0B               	goto	l199
  2180  0609                     u470:
  2181  0609                     l196:	
  2182                           ;TM1637.c: 65: do { LATAbits.LATA3 = 1; } while(0);
  2183                           
  2184  0609  158C               	bsf	12,3	;volatile
  2185  060A  2E0C               	goto	l201
  2186  060B                     l199:	
  2187                           ;TM1637.c: 67: do { LATAbits.LATA3 = 0; } while(0);
  2188                           
  2189  060B  118C               	bcf	12,3	;volatile
  2190  060C                     l201:	
  2191                           ;TM1637.c: 68: };TM1637.c: 70: do { LATAbits.LATA0 = 1; } while(0);
  2192                           
  2193  060C  140C               	bsf	12,0	;volatile
  2194  060D                     l1288:
  2195                           
  2196                           ;TM1637.c: 72: data = data >> 1;
  2197  060D  3673               	lsrf	write_data@data,w
  2198  060E  00F0               	movwf	??_write_data
  2199  060F  0870               	movf	??_write_data,w
  2200  0610  00F3               	movwf	write_data@data
  2201  0611  3001               	movlw	1
  2202  0612  00F0               	movwf	??_write_data
  2203  0613  0870               	movf	??_write_data,w
  2204  0614  07F4               	addwf	write_data@i,f
  2205  0615                     l1290:
  2206  0615  3008               	movlw	8
  2207  0616  0274               	subwf	write_data@i,w
  2208  0617  1C03               	skipc
  2209  0618  2E1A               	goto	u481
  2210  0619  2E1B               	goto	u480
  2211  061A                     u481:
  2212  061A  2E03               	goto	l193
  2213  061B                     u480:
  2214  061B                     l203:	
  2215                           ;TM1637.c: 73: };TM1637.c: 76: do { LATAbits.LATA0 = 0; } while(0);
  2216                           
  2217  061B  100C               	bcf	12,0	;volatile
  2218  061C                     l205:	
  2219                           ;TM1637.c: 77: do { LATAbits.LATA3 = 1; } while(0);
  2220                           
  2221  061C  158C               	bsf	12,3	;volatile
  2222  061D                     l207:	
  2223                           ;TM1637.c: 80: do { LATAbits.LATA0 = 1; } while(0);
  2224                           
  2225  061D  140C               	bsf	12,0	;volatile
  2226  061E                     l209:	
  2227                           ;TM1637.c: 82: do { TRISAbits.TRISA3 = 1; } while(0);
  2228                           
  2229  061E  0021               	movlb	1	; select bank1
  2230  061F  158C               	bsf	12,3	;volatile
  2231  0620                     l1292:
  2232                           
  2233                           ;TM1637.c: 83: bit_delay();
  2234  0620  3184  24BA  3185   	fcall	_bit_delay
  2235  0623                     l1294:
  2236                           
  2237                           ;TM1637.c: 85: uint8_t ack = PORTAbits.RA3;
  2238  0623  3000               	movlw	0
  2239  0624  0020               	movlb	0	; select bank0
  2240  0625  198C               	btfsc	12,3	;volatile
  2241  0626  3001               	movlw	1
  2242  0627  00F2               	movwf	write_data@ack
  2243  0628                     l1296:
  2244                           
  2245                           ;TM1637.c: 86: if(ack == 0){
  2246  0628  0872               	movf	write_data@ack,w
  2247  0629  1D03               	btfss	3,2
  2248  062A  2E2C               	goto	u491
  2249  062B  2E2D               	goto	u490
  2250  062C                     u491:
  2251  062C  2E31               	goto	l1298
  2252  062D                     u490:
  2253  062D                     l212:	
  2254                           ;TM1637.c: 87: do { TRISAbits.TRISA3 = 0; } while(0);
  2255                           
  2256  062D  0021               	movlb	1	; select bank1
  2257  062E  118C               	bcf	12,3	;volatile
  2258  062F                     l214:	
  2259                           ;TM1637.c: 88: do { LATAbits.LATA3 = 0; } while(0);
  2260                           
  2261  062F  0022               	movlb	2	; select bank2
  2262  0630  118C               	bcf	12,3	;volatile
  2263  0631                     l1298:
  2264                           
  2265                           ;TM1637.c: 89: };TM1637.c: 91: bit_delay();
  2266  0631  3184  24BA  3185   	fcall	_bit_delay
  2267  0634                     l1300:
  2268  0634  0021               	movlb	1	; select bank1
  2269  0635  118C               	bcf	12,3	;volatile
  2270  0636                     l217:
  2271                           
  2272                           ;TM1637.c: 93: bit_delay();
  2273  0636  3184  24BA  3185   	fcall	_bit_delay
  2274  0639                     l218:
  2275  0639  0008               	return
  2276  063A                     __end_of_write_data:
  2277                           
  2278                           	psect	text5
  2279  04BA                     __ptext5:	
  2280 ;; *************** function _bit_delay *****************
  2281 ;; Defined at:
  2282 ;;		line 31 in file "TM1637.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		None
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2296 ;;      Params:         0       0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_write_data
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _bit_delay
  2311  04BA                     _bit_delay:
  2312  04BA                     l156:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _bit_delay: []
  2315                           
  2316  04BA  0008               	return
  2317  04BB                     __end_of_bit_delay:
  2318                           
  2319                           	psect	text6
  2320  04E4                     __ptext6:	
  2321 ;; *************** function _stop *****************
  2322 ;; Defined at:
  2323 ;;		line 46 in file "TM1637.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		None
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2337 ;;      Params:         0       0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_set_segments
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _stop
  2352  04E4                     _stop:
  2353  04E4                     l174:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _stop: []
  2356                           ;TM1637.c: 47: do { TRISAbits.TRISA3 = 0; } while(0);
  2357                           
  2358  04E4  0021               	movlb	1	; select bank1
  2359  04E5  118C               	bcf	12,3	;volatile
  2360  04E6                     l176:	
  2361                           ;TM1637.c: 48: do { TRISAbits.TRISA0 = 0; } while(0);
  2362                           
  2363  04E6  100C               	bcf	12,0	;volatile
  2364  04E7                     l178:	
  2365                           ;TM1637.c: 50: do { LATAbits.LATA0 = 0; } while(0);
  2366                           
  2367  04E7  0022               	movlb	2	; select bank2
  2368  04E8  100C               	bcf	12,0	;volatile
  2369  04E9                     l180:	
  2370                           ;TM1637.c: 51: do { LATAbits.LATA3 = 0; } while(0);
  2371                           
  2372  04E9  118C               	bcf	12,3	;volatile
  2373  04EA                     l182:	
  2374                           ;TM1637.c: 53: do { LATAbits.LATA0 = 1; } while(0);
  2375                           
  2376  04EA  140C               	bsf	12,0	;volatile
  2377  04EB                     l184:	
  2378                           ;TM1637.c: 54: do { LATAbits.LATA3 = 1; } while(0);
  2379                           
  2380  04EB  158C               	bsf	12,3	;volatile
  2381  04EC                     l186:
  2382  04EC  0008               	return
  2383  04ED                     __end_of_stop:
  2384                           
  2385                           	psect	text7
  2386  04DB                     __ptext7:	
  2387 ;; *************** function _start *****************
  2388 ;; Defined at:
  2389 ;;		line 35 in file "TM1637.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		None
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2403 ;;      Params:         0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_set_segments
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _start
  2418  04DB                     _start:
  2419  04DB                     l159:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _start: []
  2422                           ;TM1637.c: 36: do { TRISAbits.TRISA3 = 0; } while(0);
  2423                           
  2424  04DB  0021               	movlb	1	; select bank1
  2425  04DC  118C               	bcf	12,3	;volatile
  2426  04DD                     l161:	
  2427                           ;TM1637.c: 37: do { TRISAbits.TRISA0 = 0; } while(0);
  2428                           
  2429  04DD  100C               	bcf	12,0	;volatile
  2430  04DE                     l163:	
  2431                           ;TM1637.c: 39: do { LATAbits.LATA3 = 1; } while(0);
  2432                           
  2433  04DE  0022               	movlb	2	; select bank2
  2434  04DF  158C               	bsf	12,3	;volatile
  2435  04E0                     l165:	
  2436                           ;TM1637.c: 40: do { LATAbits.LATA0 = 1; } while(0);
  2437                           
  2438  04E0  140C               	bsf	12,0	;volatile
  2439  04E1                     l167:	
  2440                           ;TM1637.c: 42: do { LATAbits.LATA3 = 0; } while(0);
  2441                           
  2442  04E1  118C               	bcf	12,3	;volatile
  2443  04E2                     l169:	
  2444                           ;TM1637.c: 43: do { LATAbits.LATA0 = 0; } while(0);
  2445                           
  2446  04E2  100C               	bcf	12,0	;volatile
  2447  04E3                     l171:
  2448  04E3  0008               	return
  2449  04E4                     __end_of_start:
  2450                           
  2451                           	psect	text8
  2452  04D3                     __ptext8:	
  2453 ;; *************** function _encode_digit *****************
  2454 ;; Defined at:
  2455 ;;		line 136 in file "TM1637.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  digit           1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  digit           1    0[COMMON] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2469 ;;      Params:         0       0       0       0       0       0
  2470 ;;      Locals:         1       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0
  2472 ;;      Totals:         1       0       0       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_rtc_display
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _encode_digit
  2484  04D3                     _encode_digit:
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2488                           ;encode_digit@digit stored from wreg
  2489  04D3  00F0               	movwf	encode_digit@digit
  2490  04D4                     l1336:
  2491                           
  2492                           ;TM1637.c: 137: return segdata[digit & 0x0f];
  2493  04D4  0870               	movf	encode_digit@digit,w
  2494  04D5  390F               	andlw	15
  2495  04D6  3E33               	addlw	(low (_segdata| 0))& (0+255)
  2496  04D7  0086               	movwf	6
  2497  04D8  0187               	clrf	7
  2498  04D9  0801               	movf	1,w
  2499  04DA                     l237:
  2500  04DA  0008               	return
  2501  04DB                     __end_of_encode_digit:
  2502                           
  2503                           	psect	text9
  2504  06C4                     __ptext9:	
  2505 ;; *************** function ___awmod *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  divisor         2    0[COMMON] int 
  2510 ;;  dividend        2    2[COMMON] int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  sign            1    6[COMMON] unsigned char 
  2513 ;;  counter         1    5[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[COMMON] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2523 ;;      Params:         4       0       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0
  2526 ;;      Totals:         7       0       0       0       0       0
  2527 ;;Total ram usage:        7 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_rtc_display
  2533 ;;		_decimal_2_bcd
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function ___awmod
  2539  06C4                     ___awmod:
  2540  06C4                     l1414:	
  2541                           ;incstack = 0
  2542                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2543                           
  2544  06C4  01F6               	clrf	___awmod@sign
  2545  06C5                     l1416:
  2546  06C5  1FF3               	btfss	___awmod@dividend+1,7
  2547  06C6  2EC8               	goto	u621
  2548  06C7  2EC9               	goto	u620
  2549  06C8                     u621:
  2550  06C8  2ED0               	goto	l1422
  2551  06C9                     u620:
  2552  06C9                     l1418:
  2553  06C9  09F2               	comf	___awmod@dividend,f
  2554  06CA  09F3               	comf	___awmod@dividend+1,f
  2555  06CB  0AF2               	incf	___awmod@dividend,f
  2556  06CC  1903               	skipnz
  2557  06CD  0AF3               	incf	___awmod@dividend+1,f
  2558  06CE                     l1420:
  2559  06CE  01F6               	clrf	___awmod@sign
  2560  06CF  0AF6               	incf	___awmod@sign,f
  2561  06D0                     l1422:
  2562  06D0  1FF1               	btfss	___awmod@divisor+1,7
  2563  06D1  2ED3               	goto	u631
  2564  06D2  2ED4               	goto	u630
  2565  06D3                     u631:
  2566  06D3  2ED9               	goto	l1426
  2567  06D4                     u630:
  2568  06D4                     l1424:
  2569  06D4  09F0               	comf	___awmod@divisor,f
  2570  06D5  09F1               	comf	___awmod@divisor+1,f
  2571  06D6  0AF0               	incf	___awmod@divisor,f
  2572  06D7  1903               	skipnz
  2573  06D8  0AF1               	incf	___awmod@divisor+1,f
  2574  06D9                     l1426:
  2575  06D9  0870               	movf	___awmod@divisor,w
  2576  06DA  0471               	iorwf	___awmod@divisor+1,w
  2577  06DB  1903               	btfsc	3,2
  2578  06DC  2EDE               	goto	u641
  2579  06DD  2EDF               	goto	u640
  2580  06DE                     u641:
  2581  06DE  2F08               	goto	l1444
  2582  06DF                     u640:
  2583  06DF                     l1428:
  2584  06DF  01F5               	clrf	___awmod@counter
  2585  06E0  0AF5               	incf	___awmod@counter,f
  2586  06E1  2EEB               	goto	l1434
  2587  06E2                     l1430:
  2588  06E2  3001               	movlw	1
  2589  06E3                     u655:
  2590  06E3  35F0               	lslf	___awmod@divisor,f
  2591  06E4  0DF1               	rlf	___awmod@divisor+1,f
  2592  06E5  0B89               	decfsz	9,f
  2593  06E6  2EE3               	goto	u655
  2594  06E7                     l1432:
  2595  06E7  3001               	movlw	1
  2596  06E8  00F4               	movwf	??___awmod
  2597  06E9  0874               	movf	??___awmod,w
  2598  06EA  07F5               	addwf	___awmod@counter,f
  2599  06EB                     l1434:
  2600  06EB  1FF1               	btfss	___awmod@divisor+1,7
  2601  06EC  2EEE               	goto	u661
  2602  06ED  2EEF               	goto	u660
  2603  06EE                     u661:
  2604  06EE  2EE2               	goto	l1430
  2605  06EF                     u660:
  2606  06EF                     l1436:
  2607  06EF  0871               	movf	___awmod@divisor+1,w
  2608  06F0  0273               	subwf	___awmod@dividend+1,w
  2609  06F1  1D03               	skipz
  2610  06F2  2EF5               	goto	u675
  2611  06F3  0870               	movf	___awmod@divisor,w
  2612  06F4  0272               	subwf	___awmod@dividend,w
  2613  06F5                     u675:
  2614  06F5  1C03               	skipc
  2615  06F6  2EF8               	goto	u671
  2616  06F7  2EF9               	goto	u670
  2617  06F8                     u671:
  2618  06F8  2EFD               	goto	l1440
  2619  06F9                     u670:
  2620  06F9                     l1438:
  2621  06F9  0870               	movf	___awmod@divisor,w
  2622  06FA  02F2               	subwf	___awmod@dividend,f
  2623  06FB  0871               	movf	___awmod@divisor+1,w
  2624  06FC  3BF3               	subwfb	___awmod@dividend+1,f
  2625  06FD                     l1440:
  2626  06FD  3001               	movlw	1
  2627  06FE                     u685:
  2628  06FE  36F1               	lsrf	___awmod@divisor+1,f
  2629  06FF  0CF0               	rrf	___awmod@divisor,f
  2630  0700  0B89               	decfsz	9,f
  2631  0701  2EFE               	goto	u685
  2632  0702                     l1442:
  2633  0702  3001               	movlw	1
  2634  0703  02F5               	subwf	___awmod@counter,f
  2635  0704  1D03               	btfss	3,2
  2636  0705  2F07               	goto	u691
  2637  0706  2F08               	goto	u690
  2638  0707                     u691:
  2639  0707  2EEF               	goto	l1436
  2640  0708                     u690:
  2641  0708                     l1444:
  2642  0708  0876               	movf	___awmod@sign,w
  2643  0709  1903               	btfsc	3,2
  2644  070A  2F0C               	goto	u701
  2645  070B  2F0D               	goto	u700
  2646  070C                     u701:
  2647  070C  2F12               	goto	l1448
  2648  070D                     u700:
  2649  070D                     l1446:
  2650  070D  09F2               	comf	___awmod@dividend,f
  2651  070E  09F3               	comf	___awmod@dividend+1,f
  2652  070F  0AF2               	incf	___awmod@dividend,f
  2653  0710  1903               	skipnz
  2654  0711  0AF3               	incf	___awmod@dividend+1,f
  2655  0712                     l1448:
  2656  0712  0873               	movf	___awmod@dividend+1,w
  2657  0713  00F1               	movwf	?___awmod+1
  2658  0714  0872               	movf	___awmod@dividend,w
  2659  0715  00F0               	movwf	?___awmod
  2660  0716                     l580:
  2661  0716  0008               	return
  2662  0717                     __end_of___awmod:
  2663                           
  2664                           	psect	text10
  2665  0717                     __ptext10:	
  2666 ;; *************** function ___awdiv *****************
  2667 ;; Defined at:
  2668 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  divisor         2    0[COMMON] int 
  2671 ;;  dividend        2    2[COMMON] int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  quotient        2    7[COMMON] int 
  2674 ;;  sign            1    6[COMMON] unsigned char 
  2675 ;;  counter         1    5[COMMON] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2    0[COMMON] int 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2685 ;;      Params:         4       0       0       0       0       0
  2686 ;;      Locals:         4       0       0       0       0       0
  2687 ;;      Temps:          1       0       0       0       0       0
  2688 ;;      Totals:         9       0       0       0       0       0
  2689 ;;Total ram usage:        9 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_rtc_display
  2695 ;;		_decimal_2_bcd
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function ___awdiv
  2701  0717                     ___awdiv:
  2702  0717                     l1370:	
  2703                           ;incstack = 0
  2704                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2705                           
  2706  0717  01F6               	clrf	___awdiv@sign
  2707  0718                     l1372:
  2708  0718  1FF1               	btfss	___awdiv@divisor+1,7
  2709  0719  2F1B               	goto	u521
  2710  071A  2F1C               	goto	u520
  2711  071B                     u521:
  2712  071B  2F23               	goto	l1378
  2713  071C                     u520:
  2714  071C                     l1374:
  2715  071C  09F0               	comf	___awdiv@divisor,f
  2716  071D  09F1               	comf	___awdiv@divisor+1,f
  2717  071E  0AF0               	incf	___awdiv@divisor,f
  2718  071F  1903               	skipnz
  2719  0720  0AF1               	incf	___awdiv@divisor+1,f
  2720  0721                     l1376:
  2721  0721  01F6               	clrf	___awdiv@sign
  2722  0722  0AF6               	incf	___awdiv@sign,f
  2723  0723                     l1378:
  2724  0723  1FF3               	btfss	___awdiv@dividend+1,7
  2725  0724  2F26               	goto	u531
  2726  0725  2F27               	goto	u530
  2727  0726                     u531:
  2728  0726  2F30               	goto	l1384
  2729  0727                     u530:
  2730  0727                     l1380:
  2731  0727  09F2               	comf	___awdiv@dividend,f
  2732  0728  09F3               	comf	___awdiv@dividend+1,f
  2733  0729  0AF2               	incf	___awdiv@dividend,f
  2734  072A  1903               	skipnz
  2735  072B  0AF3               	incf	___awdiv@dividend+1,f
  2736  072C                     l1382:
  2737  072C  3001               	movlw	1
  2738  072D  00F4               	movwf	??___awdiv
  2739  072E  0874               	movf	??___awdiv,w
  2740  072F  06F6               	xorwf	___awdiv@sign,f
  2741  0730                     l1384:
  2742  0730  01F7               	clrf	___awdiv@quotient
  2743  0731  01F8               	clrf	___awdiv@quotient+1
  2744  0732                     l1386:
  2745  0732  0870               	movf	___awdiv@divisor,w
  2746  0733  0471               	iorwf	___awdiv@divisor+1,w
  2747  0734  1903               	btfsc	3,2
  2748  0735  2F37               	goto	u541
  2749  0736  2F38               	goto	u540
  2750  0737                     u541:
  2751  0737  2F67               	goto	l1406
  2752  0738                     u540:
  2753  0738                     l1388:
  2754  0738  01F5               	clrf	___awdiv@counter
  2755  0739  0AF5               	incf	___awdiv@counter,f
  2756  073A  2F44               	goto	l1394
  2757  073B                     l1390:
  2758  073B  3001               	movlw	1
  2759  073C                     u555:
  2760  073C  35F0               	lslf	___awdiv@divisor,f
  2761  073D  0DF1               	rlf	___awdiv@divisor+1,f
  2762  073E  0B89               	decfsz	9,f
  2763  073F  2F3C               	goto	u555
  2764  0740                     l1392:
  2765  0740  3001               	movlw	1
  2766  0741  00F4               	movwf	??___awdiv
  2767  0742  0874               	movf	??___awdiv,w
  2768  0743  07F5               	addwf	___awdiv@counter,f
  2769  0744                     l1394:
  2770  0744  1FF1               	btfss	___awdiv@divisor+1,7
  2771  0745  2F47               	goto	u561
  2772  0746  2F48               	goto	u560
  2773  0747                     u561:
  2774  0747  2F3B               	goto	l1390
  2775  0748                     u560:
  2776  0748                     l1396:
  2777  0748  3001               	movlw	1
  2778  0749                     u575:
  2779  0749  35F7               	lslf	___awdiv@quotient,f
  2780  074A  0DF8               	rlf	___awdiv@quotient+1,f
  2781  074B  0B89               	decfsz	9,f
  2782  074C  2F49               	goto	u575
  2783  074D  0871               	movf	___awdiv@divisor+1,w
  2784  074E  0273               	subwf	___awdiv@dividend+1,w
  2785  074F  1D03               	skipz
  2786  0750  2F53               	goto	u585
  2787  0751  0870               	movf	___awdiv@divisor,w
  2788  0752  0272               	subwf	___awdiv@dividend,w
  2789  0753                     u585:
  2790  0753  1C03               	skipc
  2791  0754  2F56               	goto	u581
  2792  0755  2F57               	goto	u580
  2793  0756                     u581:
  2794  0756  2F5C               	goto	l1402
  2795  0757                     u580:
  2796  0757                     l1398:
  2797  0757  0870               	movf	___awdiv@divisor,w
  2798  0758  02F2               	subwf	___awdiv@dividend,f
  2799  0759  0871               	movf	___awdiv@divisor+1,w
  2800  075A  3BF3               	subwfb	___awdiv@dividend+1,f
  2801  075B                     l1400:
  2802  075B  1477               	bsf	___awdiv@quotient,0
  2803  075C                     l1402:
  2804  075C  3001               	movlw	1
  2805  075D                     u595:
  2806  075D  36F1               	lsrf	___awdiv@divisor+1,f
  2807  075E  0CF0               	rrf	___awdiv@divisor,f
  2808  075F  0B89               	decfsz	9,f
  2809  0760  2F5D               	goto	u595
  2810  0761                     l1404:
  2811  0761  3001               	movlw	1
  2812  0762  02F5               	subwf	___awdiv@counter,f
  2813  0763  1D03               	btfss	3,2
  2814  0764  2F66               	goto	u601
  2815  0765  2F67               	goto	u600
  2816  0766                     u601:
  2817  0766  2F48               	goto	l1396
  2818  0767                     u600:
  2819  0767                     l1406:
  2820  0767  0876               	movf	___awdiv@sign,w
  2821  0768  1903               	btfsc	3,2
  2822  0769  2F6B               	goto	u611
  2823  076A  2F6C               	goto	u610
  2824  076B                     u611:
  2825  076B  2F71               	goto	l1410
  2826  076C                     u610:
  2827  076C                     l1408:
  2828  076C  09F7               	comf	___awdiv@quotient,f
  2829  076D  09F8               	comf	___awdiv@quotient+1,f
  2830  076E  0AF7               	incf	___awdiv@quotient,f
  2831  076F  1903               	skipnz
  2832  0770  0AF8               	incf	___awdiv@quotient+1,f
  2833  0771                     l1410:
  2834  0771  0878               	movf	___awdiv@quotient+1,w
  2835  0772  00F1               	movwf	?___awdiv+1
  2836  0773  0877               	movf	___awdiv@quotient,w
  2837  0774  00F0               	movwf	?___awdiv
  2838  0775                     l567:
  2839  0775  0008               	return
  2840  0776                     __end_of___awdiv:
  2841                           
  2842                           	psect	text11
  2843  067E                     __ptext11:	
  2844 ;; *************** function _read_date *****************
  2845 ;; Defined at:
  2846 ;;		line 78 in file "DS3231.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  date            1    wreg     PTR struct Date
  2849 ;;		 -> main@date(6), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  date            1   12[COMMON] PTR struct Date
  2852 ;;		 -> main@date(6), 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2862 ;;      Params:         0       0       0       0       0       0
  2863 ;;      Locals:         1       0       0       0       0       0
  2864 ;;      Temps:          1       0       0       0       0       0
  2865 ;;      Totals:         2       0       0       0       0       0
  2866 ;;Total ram usage:        2 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    3
  2869 ;; This function calls:
  2870 ;;		__read
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function _read_date
  2878  067E                     _read_date:
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2882                           ;read_date@date stored from wreg
  2883  067E  00FC               	movwf	read_date@date
  2884  067F                     l1460:
  2885                           
  2886                           ;DS3231.c: 79: date->year = _read(6);
  2887  067F  3006               	movlw	6
  2888  0680  3185  259F  3186   	fcall	__read
  2889  0683  00FB               	movwf	??_read_date
  2890  0684  087C               	movf	read_date@date,w
  2891  0685  0086               	movwf	6
  2892  0686  0187               	clrf	7
  2893  0687  087B               	movf	??_read_date,w
  2894  0688  0081               	movwf	1
  2895                           
  2896                           ;DS3231.c: 80: date->month = _read(5);
  2897  0689  3005               	movlw	5
  2898  068A  3185  259F  3186   	fcall	__read
  2899  068D  00FB               	movwf	??_read_date
  2900  068E  0A7C               	incf	read_date@date,w
  2901  068F  0086               	movwf	6
  2902  0690  0187               	clrf	7
  2903  0691  087B               	movf	??_read_date,w
  2904  0692  0081               	movwf	1
  2905                           
  2906                           ;DS3231.c: 81: date->day = _read(4);
  2907  0693  3004               	movlw	4
  2908  0694  3185  259F  3186   	fcall	__read
  2909  0697  00FB               	movwf	??_read_date
  2910  0698  087C               	movf	read_date@date,w
  2911  0699  3E02               	addlw	2
  2912  069A  0086               	movwf	6
  2913  069B  0187               	clrf	7
  2914  069C  087B               	movf	??_read_date,w
  2915  069D  0081               	movwf	1
  2916  069E                     l1462:
  2917                           
  2918                           ;DS3231.c: 82: _read(3);
  2919  069E  3003               	movlw	3
  2920  069F  3185  259F  3186   	fcall	__read
  2921  06A2                     l1464:
  2922                           
  2923                           ;DS3231.c: 83: date->hour = _read(2);
  2924  06A2  3002               	movlw	2
  2925  06A3  3185  259F  3186   	fcall	__read
  2926  06A6  00FB               	movwf	??_read_date
  2927  06A7  087C               	movf	read_date@date,w
  2928  06A8  3E03               	addlw	3
  2929  06A9  0086               	movwf	6
  2930  06AA  0187               	clrf	7
  2931  06AB  087B               	movf	??_read_date,w
  2932  06AC  0081               	movwf	1
  2933  06AD                     l1466:
  2934                           
  2935                           ;DS3231.c: 84: date->min = _read(1);
  2936  06AD  3001               	movlw	1
  2937  06AE  3185  259F  3186   	fcall	__read
  2938  06B1  00FB               	movwf	??_read_date
  2939  06B2  087C               	movf	read_date@date,w
  2940  06B3  3E04               	addlw	4
  2941  06B4  0086               	movwf	6
  2942  06B5  0187               	clrf	7
  2943  06B6  087B               	movf	??_read_date,w
  2944  06B7  0081               	movwf	1
  2945  06B8                     l1468:
  2946                           
  2947                           ;DS3231.c: 85: date->sec = _read(0);
  2948  06B8  3000               	movlw	0
  2949  06B9  3185  259F  3186   	fcall	__read
  2950  06BC  00FB               	movwf	??_read_date
  2951  06BD  087C               	movf	read_date@date,w
  2952  06BE  3E05               	addlw	5
  2953  06BF  0086               	movwf	6
  2954  06C0  0187               	clrf	7
  2955  06C1  087B               	movf	??_read_date,w
  2956  06C2  0081               	movwf	1
  2957  06C3                     l264:
  2958  06C3  0008               	return
  2959  06C4                     __end_of_read_date:
  2960                           
  2961                           	psect	text12
  2962  059F                     __ptext12:	
  2963 ;; *************** function __read *****************
  2964 ;; Defined at:
  2965 ;;		line 59 in file "DS3231.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  address         1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  address         1    9[COMMON] unsigned char 
  2970 ;;  data            1   10[COMMON] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      unsigned char 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2980 ;;      Params:         0       0       0       0       0       0
  2981 ;;      Locals:         2       0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0       0
  2983 ;;      Totals:         3       0       0       0       0       0
  2984 ;;Total ram usage:        3 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    2
  2987 ;; This function calls:
  2988 ;;		_bcd_2_decimal
  2989 ;;		_i2c_read
  2990 ;;		_i2c_repeated_start
  2991 ;;		_i2c_start
  2992 ;;		_i2c_stop
  2993 ;;		_i2c_write
  2994 ;; This function is called by:
  2995 ;;		_read_date
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function __read
  3001  059F                     __read:
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3005                           ;__read@address stored from wreg
  3006  059F  00F9               	movwf	__read@address
  3007  05A0                     l1364:
  3008                           
  3009                           ;DS3231.c: 60: uint8_t data;;DS3231.c: 61: i2c_start();
  3010  05A0  3185  2501  3185   	fcall	_i2c_start
  3011                           
  3012                           ;DS3231.c: 62: i2c_write(0xD0);
  3013  05A3  30D0               	movlw	208
  3014  05A4  3185  2525  3185   	fcall	_i2c_write
  3015                           
  3016                           ;DS3231.c: 63: i2c_write(address);
  3017  05A7  0879               	movf	__read@address,w
  3018  05A8  3185  2525  3185   	fcall	_i2c_write
  3019                           
  3020                           ;DS3231.c: 65: i2c_repeated_start();
  3021  05AB  3184  24F7  3185   	fcall	_i2c_repeated_start
  3022                           
  3023                           ;DS3231.c: 67: i2c_write(0xD0 | 0x01);
  3024  05AE  30D1               	movlw	209
  3025  05AF  3185  2525  3185   	fcall	_i2c_write
  3026                           
  3027                           ;DS3231.c: 68: data = bcd_2_decimal(i2c_read(1));
  3028  05B2  3001               	movlw	1
  3029  05B3  3185  2588  3185   	fcall	_i2c_read
  3030  05B6  3185  2548  3185   	fcall	_bcd_2_decimal
  3031  05B9  00F8               	movwf	??__read
  3032  05BA  0878               	movf	??__read,w
  3033  05BB  00FA               	movwf	__read@data
  3034  05BC                     l1366:
  3035                           
  3036                           ;DS3231.c: 69: i2c_stop();
  3037  05BC  3184  24CC  3185   	fcall	_i2c_stop
  3038                           
  3039                           ;DS3231.c: 71: return data;
  3040  05BF  087A               	movf	__read@data,w
  3041  05C0                     l261:
  3042  05C0  0008               	return
  3043  05C1                     __end_of__read:
  3044                           
  3045                           	psect	text13
  3046  0525                     __ptext13:	
  3047 ;; *************** function _i2c_write *****************
  3048 ;; Defined at:
  3049 ;;		line 26 in file "i2c.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  data            1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  data            1    0[COMMON] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3063 ;;      Params:         0       0       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0
  3066 ;;      Totals:         1       0       0       0       0       0
  3067 ;;Total ram usage:        1 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    1
  3070 ;; This function calls:
  3071 ;;		_i2c_wait
  3072 ;; This function is called by:
  3073 ;;		__read
  3074 ;;		_write_date
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _i2c_write
  3080  0525                     _i2c_write:
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3084                           ;i2c_write@data stored from wreg
  3085  0525  00F0               	movwf	i2c_write@data
  3086  0526                     l1260:
  3087                           
  3088                           ;i2c.c: 27: SSP2BUF = data;
  3089  0526  0870               	movf	i2c_write@data,w
  3090  0527  0024               	movlb	4	; select bank4
  3091  0528  0099               	movwf	25	;volatile
  3092  0529                     l131:	
  3093                           ;i2c.c: 28: while(SSP2STATbits.BF);
  3094                           
  3095  0529  181C               	btfsc	28,0	;volatile
  3096  052A  2D2C               	goto	u441
  3097  052B  2D2D               	goto	u440
  3098  052C                     u441:
  3099  052C  2D29               	goto	l131
  3100  052D                     u440:
  3101  052D                     l134:
  3102  052D  1B1E               	btfsc	30,6	;volatile
  3103  052E  2D30               	goto	u451
  3104  052F  2D31               	goto	u450
  3105  0530                     u451:
  3106  0530  2D2D               	goto	l134
  3107  0531                     u450:
  3108  0531                     l1262:
  3109                           
  3110                           ;i2c.c: 30: i2c_wait();
  3111  0531  3185  250B  3185   	fcall	_i2c_wait
  3112  0534                     l137:
  3113  0534  0008               	return
  3114  0535                     __end_of_i2c_write:
  3115                           
  3116                           	psect	text14
  3117  04CC                     __ptext14:	
  3118 ;; *************** function _i2c_stop *****************
  3119 ;; Defined at:
  3120 ;;		line 15 in file "i2c.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		None
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3134 ;;      Params:         0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		__read
  3144 ;;		_write_date
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _i2c_stop
  3150  04CC                     _i2c_stop:
  3151  04CC                     l1254:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _i2c_stop: []
  3154                           
  3155                           
  3156                           ;i2c.c: 16: SSP2CON2bits.PEN = 1;
  3157  04CC  0024               	movlb	4	; select bank4
  3158  04CD  151E               	bsf	30,2	;volatile
  3159  04CE                     l119:	
  3160                           ;i2c.c: 17: while(SSP2CON2bits.PEN);
  3161                           
  3162  04CE  191E               	btfsc	30,2	;volatile
  3163  04CF  2CD1               	goto	u421
  3164  04D0  2CD2               	goto	u420
  3165  04D1                     u421:
  3166  04D1  2CCE               	goto	l119
  3167  04D2                     u420:
  3168  04D2                     l122:
  3169  04D2  0008               	return
  3170  04D3                     __end_of_i2c_stop:
  3171                           
  3172                           	psect	text15
  3173  0501                     __ptext15:	
  3174 ;; *************** function _i2c_start *****************
  3175 ;; Defined at:
  3176 ;;		line 9 in file "i2c.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3190 ;;      Params:         0       0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    1
  3197 ;; This function calls:
  3198 ;;		_i2c_wait
  3199 ;; This function is called by:
  3200 ;;		__read
  3201 ;;		_write_date
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _i2c_start
  3207  0501                     _i2c_start:
  3208  0501                     l1250:	
  3209                           ;incstack = 0
  3210                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3211                           
  3212                           
  3213                           ;i2c.c: 10: i2c_wait();
  3214  0501  3185  250B  3185   	fcall	_i2c_wait
  3215  0504                     l1252:
  3216                           
  3217                           ;i2c.c: 11: SSP2CON2bits.SEN = 1;
  3218  0504  0024               	movlb	4	; select bank4
  3219  0505  141E               	bsf	30,0	;volatile
  3220  0506                     l113:	
  3221                           ;i2c.c: 12: while(SSP2CON2bits.SEN);
  3222                           
  3223  0506  181E               	btfsc	30,0	;volatile
  3224  0507  2D09               	goto	u411
  3225  0508  2D0A               	goto	u410
  3226  0509                     u411:
  3227  0509  2D06               	goto	l113
  3228  050A                     u410:
  3229  050A                     l116:
  3230  050A  0008               	return
  3231  050B                     __end_of_i2c_start:
  3232                           
  3233                           	psect	text16
  3234  04F7                     __ptext16:	
  3235 ;; *************** function _i2c_repeated_start *****************
  3236 ;; Defined at:
  3237 ;;		line 20 in file "i2c.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3251 ;;      Params:         0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0
  3254 ;;      Totals:         0       0       0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    1
  3258 ;; This function calls:
  3259 ;;		_i2c_wait
  3260 ;; This function is called by:
  3261 ;;		__read
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _i2c_repeated_start
  3267  04F7                     _i2c_repeated_start:
  3268  04F7                     l1256:	
  3269                           ;incstack = 0
  3270                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3271                           
  3272                           
  3273                           ;i2c.c: 21: i2c_wait();
  3274  04F7  3185  250B  3184   	fcall	_i2c_wait
  3275  04FA                     l1258:
  3276                           
  3277                           ;i2c.c: 22: SSP2CON2bits.RSEN = 1;
  3278  04FA  0024               	movlb	4	; select bank4
  3279  04FB  149E               	bsf	30,1	;volatile
  3280  04FC                     l125:	
  3281                           ;i2c.c: 23: while(SSP2CON2bits.RSEN);
  3282                           
  3283  04FC  189E               	btfsc	30,1	;volatile
  3284  04FD  2CFF               	goto	u431
  3285  04FE  2D00               	goto	u430
  3286  04FF                     u431:
  3287  04FF  2CFC               	goto	l125
  3288  0500                     u430:
  3289  0500                     l128:
  3290  0500  0008               	return
  3291  0501                     __end_of_i2c_repeated_start:
  3292                           
  3293                           	psect	text17
  3294  0588                     __ptext17:	
  3295 ;; *************** function _i2c_read *****************
  3296 ;; Defined at:
  3297 ;;		line 33 in file "i2c.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  ack             1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  ack             1    1[COMMON] unsigned char 
  3302 ;;  data            1    2[COMMON] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      unsigned char 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, pclath, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3312 ;;      Params:         0       0       0       0       0       0
  3313 ;;      Locals:         2       0       0       0       0       0
  3314 ;;      Temps:          1       0       0       0       0       0
  3315 ;;      Totals:         3       0       0       0       0       0
  3316 ;;Total ram usage:        3 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    1
  3319 ;; This function calls:
  3320 ;;		_i2c_wait
  3321 ;; This function is called by:
  3322 ;;		__read
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _i2c_read
  3328  0588                     _i2c_read:
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3332                           ;i2c_read@ack stored from wreg
  3333  0588  00F1               	movwf	i2c_read@ack
  3334  0589                     l1264:
  3335                           
  3336                           ;i2c.c: 34: uint8_t data;;i2c.c: 36: SSP2CON2bits.ACKDT = ack;
  3337  0589  0C71               	rrf	i2c_read@ack,w
  3338  058A  0024               	movlb	4	; select bank4
  3339  058B  1C03               	skipc
  3340  058C  129E               	bcf	30,5	;volatile
  3341  058D  1803               	skipnc
  3342  058E  169E               	bsf	30,5	;volatile
  3343  058F                     l1266:
  3344                           
  3345                           ;i2c.c: 37: SSP2CON2bits.RCEN = 1;
  3346  058F  159E               	bsf	30,3	;volatile
  3347  0590                     l140:	
  3348                           ;i2c.c: 38: while(!SSP2STATbits.BF);
  3349                           
  3350  0590  1C1C               	btfss	28,0	;volatile
  3351  0591  2D93               	goto	u461
  3352  0592  2D94               	goto	u460
  3353  0593                     u461:
  3354  0593  2D90               	goto	l140
  3355  0594                     u460:
  3356  0594                     l142:
  3357                           
  3358                           ;i2c.c: 39: SSP2CON2bits.ACKEN = 1;
  3359  0594  161E               	bsf	30,4	;volatile
  3360  0595                     l1268:
  3361                           
  3362                           ;i2c.c: 40: data = SSP2BUF;
  3363  0595  0819               	movf	25,w	;volatile
  3364  0596  00F0               	movwf	??_i2c_read
  3365  0597  0870               	movf	??_i2c_read,w
  3366  0598  00F2               	movwf	i2c_read@data
  3367  0599                     l1270:
  3368                           
  3369                           ;i2c.c: 41: SSP2CON1bits.SSPOV = 0;
  3370  0599  131D               	bcf	29,6	;volatile
  3371  059A                     l1272:
  3372                           
  3373                           ;i2c.c: 42: i2c_wait();
  3374  059A  3185  250B  3185   	fcall	_i2c_wait
  3375  059D                     l1274:
  3376                           
  3377                           ;i2c.c: 44: return data;
  3378  059D  0872               	movf	i2c_read@data,w
  3379  059E                     l143:
  3380  059E  0008               	return
  3381  059F                     __end_of_i2c_read:
  3382                           
  3383                           	psect	text18
  3384  050B                     __ptext18:	
  3385 ;; *************** function _i2c_wait *****************
  3386 ;; Defined at:
  3387 ;;		line 5 in file "i2c.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3401 ;;      Params:         0       0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_i2c_start
  3411 ;;		_i2c_repeated_start
  3412 ;;		_i2c_write
  3413 ;;		_i2c_read
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _i2c_wait
  3419  050B                     _i2c_wait:
  3420  050B                     l1230:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _i2c_wait: [wreg+status,2]
  3423                           
  3424  050B                     l1232:	
  3425                           ;i2c.c: 6: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  3426                           
  3427  050B  0024               	movlb	4	; select bank4
  3428  050C  081E               	movf	30,w	;volatile
  3429  050D  391F               	andlw	31
  3430  050E  1D03               	btfss	3,2
  3431  050F  2D11               	goto	u371
  3432  0510  2D12               	goto	u370
  3433  0511                     u371:
  3434  0511  2D0B               	goto	l1232
  3435  0512                     u370:
  3436  0512                     l1234:
  3437  0512  191C               	btfsc	28,2	;volatile
  3438  0513  2D15               	goto	u381
  3439  0514  2D16               	goto	u380
  3440  0515                     u381:
  3441  0515  2D0B               	goto	l1232
  3442  0516                     u380:
  3443  0516                     l110:
  3444  0516  0008               	return
  3445  0517                     __end_of_i2c_wait:
  3446                           
  3447                           	psect	text19
  3448  0548                     __ptext19:	
  3449 ;; *************** function _bcd_2_decimal *****************
  3450 ;; Defined at:
  3451 ;;		line 19 in file "DS3231.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  number          1    wreg     unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  number          1    7[COMMON] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      unsigned char 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3465 ;;      Params:         0       0       0       0       0       0
  3466 ;;      Locals:         1       0       0       0       0       0
  3467 ;;      Temps:          3       0       0       0       0       0
  3468 ;;      Totals:         4       0       0       0       0       0
  3469 ;;Total ram usage:        4 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    1
  3472 ;; This function calls:
  3473 ;;		___bmul
  3474 ;; This function is called by:
  3475 ;;		__read
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function _bcd_2_decimal
  3481  0548                     _bcd_2_decimal:
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3485                           ;bcd_2_decimal@number stored from wreg
  3486  0548  00F7               	movwf	bcd_2_decimal@number
  3487  0549                     l1304:
  3488                           
  3489                           ;DS3231.c: 20: return ((number >> 4) * 10 + (number & 0x0F));
  3490  0549  300F               	movlw	15
  3491  054A  0577               	andwf	bcd_2_decimal@number,w
  3492  054B  00F4               	movwf	??_bcd_2_decimal
  3493  054C  300A               	movlw	10
  3494  054D  00F5               	movwf	??_bcd_2_decimal+1
  3495  054E  0875               	movf	??_bcd_2_decimal+1,w
  3496  054F  00F0               	movwf	___bmul@multiplicand
  3497  0550  0877               	movf	bcd_2_decimal@number,w
  3498  0551  00F6               	movwf	??_bcd_2_decimal+2
  3499  0552  3004               	movlw	4
  3500  0553                     u505:
  3501  0553  36F6               	lsrf	??_bcd_2_decimal+2,f
  3502  0554  0B89               	decfsz	9,f
  3503  0555  2D53               	goto	u505
  3504  0556  0876               	movf	??_bcd_2_decimal+2,w
  3505  0557  3185  255C  3185   	fcall	___bmul
  3506  055A  0774               	addwf	??_bcd_2_decimal,w
  3507  055B                     l252:
  3508  055B  0008               	return
  3509  055C                     __end_of_bcd_2_decimal:
  3510                           
  3511                           	psect	text20
  3512  055C                     __ptext20:	
  3513 ;; *************** function ___bmul *****************
  3514 ;; Defined at:
  3515 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  multiplier      1    wreg     unsigned char 
  3518 ;;  multiplicand    1    0[COMMON] unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  multiplier      1    3[COMMON] unsigned char 
  3521 ;;  product         1    2[COMMON] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      unsigned char 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3531 ;;      Params:         1       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0
  3533 ;;      Temps:          1       0       0       0       0       0
  3534 ;;      Totals:         4       0       0       0       0       0
  3535 ;;Total ram usage:        4 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_bcd_2_decimal
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function ___bmul
  3546  055C                     ___bmul:
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3550                           ;___bmul@multiplier stored from wreg
  3551  055C  00F3               	movwf	___bmul@multiplier
  3552  055D                     l1236:
  3553  055D  01F2               	clrf	___bmul@product
  3554  055E                     l1238:
  3555  055E  1C73               	btfss	___bmul@multiplier,0
  3556  055F  2D61               	goto	u391
  3557  0560  2D62               	goto	u390
  3558  0561                     u391:
  3559  0561  2D66               	goto	l1242
  3560  0562                     u390:
  3561  0562                     l1240:
  3562  0562  0870               	movf	___bmul@multiplicand,w
  3563  0563  00F1               	movwf	??___bmul
  3564  0564  0871               	movf	??___bmul,w
  3565  0565  07F2               	addwf	___bmul@product,f
  3566  0566                     l1242:
  3567  0566  1003               	clrc
  3568  0567  0DF0               	rlf	___bmul@multiplicand,f
  3569  0568                     l1244:
  3570  0568  1003               	clrc
  3571  0569  0CF3               	rrf	___bmul@multiplier,f
  3572  056A  0873               	movf	___bmul@multiplier,w
  3573  056B  1D03               	btfss	3,2
  3574  056C  2D6E               	goto	u401
  3575  056D  2D6F               	goto	u400
  3576  056E                     u401:
  3577  056E  2D5E               	goto	l1238
  3578  056F                     u400:
  3579  056F                     l1246:
  3580  056F  0872               	movf	___bmul@product,w
  3581  0570                     l440:
  3582  0570  0008               	return
  3583  0571                     __end_of___bmul:
  3584                           
  3585                           	psect	text21
  3586  04ED                     __ptext21:	
  3587 ;; *************** function _SYSTEM_Initialize *****************
  3588 ;; Defined at:
  3589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3603 ;;      Params:         0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		_OSCILLATOR_Initialize
  3612 ;;		_PIN_MANAGER_Initialize
  3613 ;;		_WDT_Initialize
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _SYSTEM_Initialize
  3621  04ED                     _SYSTEM_Initialize:
  3622  04ED                     l1452:	
  3623                           ;incstack = 0
  3624                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3625                           
  3626                           
  3627                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3628  04ED  3185  2571  3184   	fcall	_PIN_MANAGER_Initialize
  3629                           
  3630                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3631  04F0  3184  24C5  3184   	fcall	_OSCILLATOR_Initialize
  3632                           
  3633                           ;mcc.c: 55: WDT_Initialize();
  3634  04F3  3184  24BB  3184   	fcall	_WDT_Initialize
  3635  04F6                     l45:
  3636  04F6  0008               	return
  3637  04F7                     __end_of_SYSTEM_Initialize:
  3638                           
  3639                           	psect	text22
  3640  04BB                     __ptext22:	
  3641 ;; *************** function _WDT_Initialize *****************
  3642 ;; Defined at:
  3643 ;;		line 68 in file "mcc_generated_files/mcc.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3657 ;;      Params:         0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_SYSTEM_Initialize
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _WDT_Initialize
  3672  04BB                     _WDT_Initialize:
  3673  04BB                     l1334:	
  3674                           ;incstack = 0
  3675                           ; Regs used in _WDT_Initialize: [wreg]
  3676                           
  3677                           
  3678                           ;mcc.c: 71: WDTCON = 0x16;
  3679  04BB  3016               	movlw	22
  3680  04BC  0021               	movlb	1	; select bank1
  3681  04BD  0097               	movwf	23	;volatile
  3682  04BE                     l51:
  3683  04BE  0008               	return
  3684  04BF                     __end_of_WDT_Initialize:
  3685                           
  3686                           	psect	text23
  3687  0571                     __ptext23:	
  3688 ;; *************** function _PIN_MANAGER_Initialize *****************
  3689 ;; Defined at:
  3690 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3704 ;;      Params:         0       0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_SYSTEM_Initialize
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           
  3718                           ;psect for function _PIN_MANAGER_Initialize
  3719  0571                     _PIN_MANAGER_Initialize:
  3720  0571                     l1308:	
  3721                           ;incstack = 0
  3722                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3723                           
  3724                           
  3725                           ;pin_manager.c: 60: LATA = 0x00;
  3726  0571  0022               	movlb	2	; select bank2
  3727  0572  018C               	clrf	12	;volatile
  3728                           
  3729                           ;pin_manager.c: 61: LATB = 0x00;
  3730  0573  018D               	clrf	13	;volatile
  3731  0574                     l1310:
  3732                           
  3733                           ;pin_manager.c: 66: TRISA = 0xFF;
  3734  0574  30FF               	movlw	255
  3735  0575  0021               	movlb	1	; select bank1
  3736  0576  008C               	movwf	12	;volatile
  3737  0577                     l1312:
  3738                           
  3739                           ;pin_manager.c: 67: TRISB = 0xFF;
  3740  0577  30FF               	movlw	255
  3741  0578  008D               	movwf	13	;volatile
  3742  0579                     l1314:
  3743                           
  3744                           ;pin_manager.c: 72: ANSELB = 0xDA;
  3745  0579  30DA               	movlw	218
  3746  057A  0023               	movlb	3	; select bank3
  3747  057B  008D               	movwf	13	;volatile
  3748  057C                     l1316:
  3749                           
  3750                           ;pin_manager.c: 73: ANSELA = 0x16;
  3751  057C  3016               	movlw	22
  3752  057D  008C               	movwf	12	;volatile
  3753  057E                     l1318:
  3754                           
  3755                           ;pin_manager.c: 78: WPUB = 0x24;
  3756  057E  3024               	movlw	36
  3757  057F  0024               	movlb	4	; select bank4
  3758  0580  008D               	movwf	13	;volatile
  3759  0581                     l1320:
  3760                           
  3761                           ;pin_manager.c: 79: WPUA = 0x00;
  3762  0581  018C               	clrf	12	;volatile
  3763  0582                     l1322:
  3764                           
  3765                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3766  0582  0021               	movlb	1	; select bank1
  3767  0583  1795               	bsf	21,7	;volatile
  3768  0584                     l1324:
  3769                           
  3770                           ;pin_manager.c: 86: APFCON0 = 0x00;
  3771  0584  0022               	movlb	2	; select bank2
  3772  0585  019D               	clrf	29	;volatile
  3773  0586                     l1326:
  3774                           
  3775                           ;pin_manager.c: 87: APFCON1 = 0x00;
  3776  0586  019E               	clrf	30	;volatile
  3777  0587                     l25:
  3778  0587  0008               	return
  3779  0588                     __end_of_PIN_MANAGER_Initialize:
  3780                           
  3781                           	psect	text24
  3782  04C5                     __ptext24:	
  3783 ;; *************** function _OSCILLATOR_Initialize *****************
  3784 ;; Defined at:
  3785 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3799 ;;      Params:         0       0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_SYSTEM_Initialize
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function _OSCILLATOR_Initialize
  3814  04C5                     _OSCILLATOR_Initialize:
  3815  04C5                     l1328:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3818                           
  3819                           
  3820                           ;mcc.c: 61: OSCCON = 0x70;
  3821  04C5  3070               	movlw	112
  3822  04C6  0021               	movlb	1	; select bank1
  3823  04C7  0099               	movwf	25	;volatile
  3824  04C8                     l1330:
  3825                           
  3826                           ;mcc.c: 63: OSCTUNE = 0x00;
  3827  04C8  0198               	clrf	24	;volatile
  3828  04C9                     l1332:
  3829                           
  3830                           ;mcc.c: 65: BORCON = 0x00;
  3831  04C9  0022               	movlb	2	; select bank2
  3832  04CA  0196               	clrf	22	;volatile
  3833  04CB                     l48:
  3834  04CB  0008               	return
  3835  04CC                     __end_of_OSCILLATOR_Initialize:
  3836  007E                     btemp	set	126	;btemp
  3837  007E                     wtemp0	set	126
  3838                           
  3839                           	psect	config
  3840                           
  3841                           ;Config register CONFIG1 @ 0x8007
  3842                           ;	Oscillator Selection
  3843                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3844                           ;	Watchdog Timer Enable
  3845                           ;	WDTE = OFF, WDT disabled
  3846                           ;	Power-up Timer Enable
  3847                           ;	PWRTE = OFF, PWRT disabled
  3848                           ;	MCLR Pin Function Select
  3849                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3850                           ;	Flash Program Memory Code Protection
  3851                           ;	CP = OFF, Program memory code protection is disabled
  3852                           ;	Data Memory Code Protection
  3853                           ;	CPD = OFF, Data memory code protection is disabled
  3854                           ;	Brown-out Reset Enable
  3855                           ;	BOREN = ON, Brown-out Reset enabled
  3856                           ;	Clock Out Enable
  3857                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3858                           ;	Internal/External Switchover
  3859                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3860                           ;	Fail-Safe Clock Monitor Enable
  3861                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3862  8007                     	org	32775
  3863  8007  3FE4               	dw	16356
  3864                           
  3865                           ;Config register CONFIG2 @ 0x8008
  3866                           ;	Flash Memory Self-Write Protection
  3867                           ;	WRT = OFF, Write protection off
  3868                           ;	PLL Enable
  3869                           ;	PLLEN = OFF, 4x PLL disabled
  3870                           ;	Stack Overflow/Underflow Reset Enable
  3871                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3872                           ;	Brown-out Reset Voltage Selection
  3873                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3874                           ;	Low-Voltage Programming Enable
  3875                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3876  8008                     	org	32776
  3877  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     19      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear@data(COMMON[4]), rtc_display@segments(BANK0[4]), 

    rtc_display@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_read_date
    _main->_rtc_display
    _rtc_display->_set_segments
    _set_segments->_write_data
    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul

Critical Paths under _main in BANK0

    _main->_rtc_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3325
                                             11 BANK0      8     8      0
                  _SYSTEM_Initialize
                          _read_date
                        _rtc_display
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rtc_display                                         14    14      0    2511
                                             10 COMMON     3     3      0
                                              0 BANK0     11    11      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (2) _set_segments                                         5     3      2     625
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _write_data                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (4) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     489
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _rtc_display
     ___awdiv
     ___awmod
     _encode_digit
     _set_segments
       _start
       _stop
       _write_data
         _bit_delay
   _set_brigthness

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      25       6       46.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      33      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 01 15:55:34 2020

                 ___bmul@product 0072                               l25 0587                               l51 04BE  
                             l45 04F6                               l48 04CB                               l92 07EB  
                   ___awdiv@sign 0076                              l110 0516                              l113 0506  
                            l201 060C                              l122 04D2                              l131 0529  
                            l203 061B                              l140 0590                              l116 050A  
                            l212 062D                              l125 04FC                              l205 061C  
                            l142 0594                              l134 052D                              l214 062F  
                            l143 059E                              l119 04CE                              l207 061D  
                            l223 0547                              l128 0500                              l137 0534  
                            l161 04DD                              l217 0636                              l209 061E  
                            l218 0639                              l171 04E3                              l163 04DE  
                            l252 055B                              l180 04E9                              l156 04BA  
                            l261 05C0                              l237 04DA                              l165 04E0  
                            l229 05FA                              l182 04EA                              l174 04E4  
                            l167 04E1                              l159 04DB                              l440 0570  
                            l264 06C3                              l184 04EB                              l176 04E6  
                            l169 04E2                              l193 0603                              l186 04EC  
                            l178 04E7                              l194 0605                              l196 0609  
                            l199 060B                              l580 0716                              l567 0775  
                            u400 056F                              u401 056E                              u410 050A  
                            u411 0509                              u420 04D2                              u421 04D1  
                            u430 0500                              u510 05EB                              u431 04FF  
                            u511 05EA                              u440 052D                              u600 0767  
                            u520 071C                              u505 0553                              u441 052C  
                            u601 0766                              u521 071B                              u370 0512  
                            u450 0531                              u610 076C                              u530 0727  
                            u371 0511                              u451 0530                              u611 076B  
                            u531 0726                              u380 0516                              u460 0594  
                            u540 0738                              u700 070D                              u620 06C9  
                            u381 0515                              u461 0593                              u541 0737  
                            u701 070C                              u621 06C8                              u390 0562  
                            u630 06D4                              u470 0609                              u710 053B  
                            u391 0561                              u631 06D3                              u471 0608  
                            u711 053A                              u560 0748                              u640 06DF  
                            u480 061B                              u561 0747                              u641 06DE  
                            u481 061A                              u490 062D                              u555 073C  
                            u491 062C                              u580 0757                              u660 06EF  
                            u581 0756                              u661 06EE                              u670 06F9  
                            u575 0749                              u671 06F8                              u655 06E3  
                            u585 0753                              u737 0674                              u690 0708  
                            u595 075D                              u691 0707                              u675 06F5  
                            u685 06FE                     ___awmod@sign 0076                   rtc_display@min 0028  
                 rtc_display@sec 0029                              wreg 0009                    write_data@ack 0072  
            bcd_2_decimal@number 0077                   ?_bcd_2_decimal 0070                   ??_encode_digit 0070  
                           l1300 0634                             l1310 0574                             l1230 050B  
                           l1320 0581                             l1312 0577                             l1240 0562  
                           l1304 0549                             l1232 050B                             l1400 075B  
                           l1330 04C8                             l1322 0582                             l1314 0579  
                           l1242 0566                             l1234 0512                             l1250 0501  
                           l1410 0771                             l1402 075C                             l1332 04C9  
                           l1324 0584                             l1316 057C                             l1308 0571  
                           l1244 0568                             l1236 055D                             l1252 0504  
                           l1260 0526                             l1404 0761                             l1420 06CE  
                           l1340 05C2                             l1500 063D                             l1326 0586  
                           l1318 057E                             l1334 04BB                             l1246 056F  
                           l1238 055E                             l1270 0599                             l1254 04CC  
                           l1262 0531                             l1406 0767                             l1430 06E2  
                           l1422 06D0                             l1414 06C4                             l1350 05D5  
                           l1342 05C5                             l1510 0647                             l1502 063F  
                           l1328 04C5                             l1272 059A                             l1264 0589  
                           l1256 04F7                             l1408 076C                             l1440 06FD  
                           l1432 06E7                             l1424 06D4                             l1416 06C5  
                           l1336 04D4                             l1280 0600                             l1360 05F1  
                           l1352 05D7                             l1344 05C9                             l1520 0654  
                           l1512 0648                             l1504 0640                             l1274 059D  
                           l1266 058F                             l1258 04FA                             l1370 0717  
                           l1442 0702                             l1434 06EB                             l1426 06D9  
                           l1418 06C9                             l1290 0615                             l1282 0602  
                           l1362 05F7                             l1354 05E1                             l1346 05CC  
                           l1530 066E                             l1522 0658                             l1514 0649  
                           l1506 0643                             l1452 04ED                             l1268 0595  
                           l1364 05A0                             l1460 067F                             l1380 0727  
                           l1372 0718                             l1436 06EF                             l1428 06DF  
                           l1444 0708                             l1292 0620                             l1356 05E5  
                           l1348 05CF                             l1524 065C                             l1516 064E  
                           l1508 0645                             l1366 05BC                             l1462 069E  
                           l1390 073B                             l1382 072C                             l1374 071C  
                           l1446 070D                             l1438 06F9                             l1294 0623  
                           l1278 05FC                             l1358 05EB                             l1470 0778  
                           l1454 0536                             l1526 0666                             l1518 0652  
                           l1464 06A2                             l1392 0740                             l1384 0730  
                           l1376 0721                             l1448 0712                             l1296 0628  
                           l1288 060D                             l1480 0780                             l1472 0780  
                           l1456 053B                             l1528 066A                             l1466 06AD  
                           l1394 0744                             l1386 0732                             l1378 0723  
                           l1298 0631                             l1490 07CC                             l1482 0785  
                           l1474 0780                             l1458 0542                             l1468 06B8  
                           l1396 0748                             l1388 0738                             l1492 07E2  
                           l1484 078A                             l1476 0780                             l1398 0757  
                           l1486 07A0                             l1478 0780                             l1488 07B6  
                           l1498 063A                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 063A  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _stop 04E4                  rtc_display@date 002A                             start 0002  
                 write_data@data 0073                ___bmul@multiplier 0073   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 04CC                            ?_main 0070                  __end_of___awdiv 0776  
                __end_of___awmod 0717                            ?_stop 0070                      i2c_read@ack 0071  
                ___awdiv@divisor 0070                  ___awdiv@counter 0075                            _TRISA 008C  
                          _TRISB 008D                 rtc_display@F2393 003D                            __read 059F  
                 _WDT_Initialize 04BB                            _start 04DB                            status 0003  
                          wtemp0 007E                  __initialization 07EC                     __end_of_main 067E  
                   __end_of_stop 04ED                 __end_of_i2c_read 059F                 __end_of_i2c_wait 0517  
               __end_of_i2c_stop 04D3                           ??_main 002B                           ??_stop 0070  
                ??_bcd_2_decimal 0074           __end_of_WDT_Initialize 04BF                           ?__read 0070  
                set_segments@pos 0076                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         _ANSELB 018D                           ?_start 0070                           _BORCON 0116  
                   i2c_read@data 0072                           _OSCCON 0099                           _WDTCON 0097  
                         _TRISB2 046A                           _TRISB5 046D               __size_of_i2c_start 000A  
             __size_of_i2c_write 0010                           ___bmul 055C                        ??___awdiv 0074  
                      ??___awmod 0074             __end_of_encode_digit 04DB                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075               _i2c_repeated_start 04F7  
                ?_WDT_Initialize 0070                     ?_rtc_display 0070          __size_of_set_brigthness 0013  
            ?_i2c_repeated_start 0070                _SYSTEM_Initialize 04ED          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070              ___bmul@multiplicand 0070         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 0517              ??_SYSTEM_Initialize 0070  
                  __end_of__read 05C1             ??_i2c_repeated_start 0070                    __end_of_start 04E4  
             __size_of_bit_delay 0001                __end_of_i2c_start 050B                __end_of_i2c_write 0535  
                 _OPTION_REGbits 0095                          ??__read 0078        __end_of_SYSTEM_Initialize 04F7  
                     __read@data 007A                          ??_start 0070                       __pbssBANK0 0041  
                      ?_i2c_read 0070                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
             __size_of_read_date 0046                       __pmaintext 063A                          ?___bmul 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0075  
                        _OSCTUNE 0098                          _SSP2ADD 021A                          _SSP2BUF 0219  
                     ??_i2c_read 0070                       ??_i2c_wait 0070                       ??_i2c_stop 0070  
              __end_of_bit_delay 04BB            __size_of_encode_digit 0008                  __size_of___bmul 0015  
                        ___awdiv 0717                          ___awmod 06C4                       clear@F2384 0041  
                  ?_set_segments 0075                          __ptext1 0535                          __ptext2 0776  
                        __ptext3 05C1                          __ptext4 05FB                          __ptext5 04BA  
                        __ptext6 04E4                          __ptext7 04DB                          __ptext8 04D3  
                        __ptext9 06C4            _OSCILLATOR_Initialize 04C5                __end_of_read_date 06C4  
               ___awmod@dividend 0072                          _segdata 0033         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 0535       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
           __size_of_rtc_display 0076                     _encode_digit 04D3                          init_ram 04BF  
                        initloop 04C0                    __read@address 0079             set_segments@segments 0078  
                 ??_set_segments 0077                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                   _m_brightness 007D                    i2c_write@data 0070           __end_of_set_brigthness 0548  
                      _TRISAbits 008C            __end_of_bcd_2_decimal 055C                   __end_of___bmul 0571  
                     _write_data 05FB           ?_OSCILLATOR_Initialize 0070              start_initialization 07EC  
                ?_set_brigthness 0070  __size_of_PIN_MANAGER_Initialize 0017                        _i2c_start 0501  
                      _i2c_write 0525                __size_of_i2c_read 0017                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                         ??___bmul 0071                      __pdataBANK0 0033  
    __size_of_i2c_repeated_start 000A                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
           __end_of_set_segments 05FB                 set_brigthness@on 0070           _PIN_MANAGER_Initialize 0571  
                      _bit_delay 04BA                         ?___awdiv 0070                         ?___awmod 0070  
                    ?_write_data 0070                   __size_of__read 0022                        _read_date 067E  
                 __size_of_start 0009                         _LATAbits 010C                       ?_bit_delay 0070  
                       _SSP2CON1 021D                         _SSP2CON2 021E                         _SSP2STAT 021C  
              encode_digit@digit 0070                      write_data@b 0071                      write_data@i 0074  
                  ??_rtc_display 007A                      ??_i2c_start 0070                      ??_i2c_write 0070  
                     ?_read_date 0070                         _i2c_read 0588                         _i2c_wait 050B  
                       _i2c_stop 04CC              __size_of_write_data 003F                    set_segments@k 0079  
        ??_OSCILLATOR_Initialize 0070                 __size_of___awdiv 005F                 __size_of___awmod 0053  
               ??_set_brigthness 0071            __size_of_set_segments 003A                         __ptext10 0717  
                       __ptext11 067E                         __ptext20 055C                         __ptext12 059F  
                       __ptext21 04ED                         __ptext13 0525                         __ptext22 04BB  
                       __ptext14 04CC                         __ptext23 0571                         __ptext15 0501  
                       __ptext24 04C5                         __ptext16 04F7                         __ptext17 0588  
                       __ptext18 050B                         __ptext19 0548                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E              __end_of_rtc_display 07EC                    __size_of_main 0044  
                  __size_of_stop 0009                      ??_bit_delay 0070           __size_of_bcd_2_decimal 0014  
                       main@date 002D                     _set_segments 05C1                     _SSP2STATbits 021C  
                  read_date@date 007C                      ??_read_date 007B          __size_of_WDT_Initialize 0004  
        ?_PIN_MANAGER_Initialize 0070       __end_of_i2c_repeated_start 0501                     ??_write_data 0070  
            rtc_display@segments 0024                      _rtc_display 0776                    _bcd_2_decimal 0548  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 0588               __end_of_write_data 063A  
